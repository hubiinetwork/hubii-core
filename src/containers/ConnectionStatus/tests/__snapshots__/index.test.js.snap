// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ConnectionStatus /> should render correctly when errors 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ConnectionStatus
    currentNetwork={
        Object {
            "provider": Object {
              "_network": Object {
                "chainId": 1,
              },
            },
          }
    }
    errors={
        Immutable.Set [
            "someerr",
        ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <span
          warning={false}
>
          <style__StyledText
                    style={
                              Object {
                                        "fontWeight": "bold",
                                      }
                    }
          >
                    Network:
          </style__StyledText>
           
          <style__StyledText
                    warning={false}
          >
                    Mainnet
          </style__StyledText>
</span>,
        <span
          style={
                    Object {
                              "alignItems": "center",
                              "display": "flex",
                            }
          }
          warning={true}
>
          <style__StyledText
                    style={
                              Object {
                                        "fontWeight": "bold",
                                      }
                    }
          >
                    Status:
          </style__StyledText>
           
          <style__StyledText
                    warning={true}
          >
                    Reconnecting...
          </style__StyledText>
           
          <style__StatusIcon
                    type="loading"
                    warning={true}
          />
</span>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <style__StyledText
              style={
                            Object {
                                          "fontWeight": "bold",
                                        }
              }
>
              Network:
</style__StyledText>,
            " ",
            <style__StyledText
              warning={false}
>
              Mainnet
</style__StyledText>,
          ],
          "warning": false,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Network:",
              "style": Object {
                "fontWeight": "bold",
              },
            },
            "ref": null,
            "rendered": "Network:",
            "type": [Function],
          },
          " ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Mainnet",
              "warning": false,
            },
            "ref": null,
            "rendered": "Mainnet",
            "type": [Function],
          },
        ],
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <style__StyledText
              style={
                            Object {
                                          "fontWeight": "bold",
                                        }
              }
>
              Status:
</style__StyledText>,
            " ",
            <style__StyledText
              warning={true}
>
              Reconnecting...
</style__StyledText>,
            " ",
            <style__StatusIcon
              type="loading"
              warning={true}
/>,
          ],
          "style": Object {
            "alignItems": "center",
            "display": "flex",
          },
          "warning": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Status:",
              "style": Object {
                "fontWeight": "bold",
              },
            },
            "ref": null,
            "rendered": "Status:",
            "type": [Function],
          },
          " ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Reconnecting...",
              "warning": true,
            },
            "ref": null,
            "rendered": "Reconnecting...",
            "type": [Function],
          },
          " ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "type": "loading",
              "warning": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "span",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <span
            warning={false}
>
            <style__StyledText
                        style={
                                    Object {
                                                "fontWeight": "bold",
                                              }
                        }
            >
                        Network:
            </style__StyledText>
             
            <style__StyledText
                        warning={false}
            >
                        Mainnet
            </style__StyledText>
</span>,
          <span
            style={
                        Object {
                                    "alignItems": "center",
                                    "display": "flex",
                                  }
            }
            warning={true}
>
            <style__StyledText
                        style={
                                    Object {
                                                "fontWeight": "bold",
                                              }
                        }
            >
                        Status:
            </style__StyledText>
             
            <style__StyledText
                        warning={true}
            >
                        Reconnecting...
            </style__StyledText>
             
            <style__StatusIcon
                        type="loading"
                        warning={true}
            />
</span>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <style__StyledText
                style={
                                Object {
                                                "fontWeight": "bold",
                                              }
                }
>
                Network:
</style__StyledText>,
              " ",
              <style__StyledText
                warning={false}
>
                Mainnet
</style__StyledText>,
            ],
            "warning": false,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Network:",
                "style": Object {
                  "fontWeight": "bold",
                },
              },
              "ref": null,
              "rendered": "Network:",
              "type": [Function],
            },
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Mainnet",
                "warning": false,
              },
              "ref": null,
              "rendered": "Mainnet",
              "type": [Function],
            },
          ],
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <style__StyledText
                style={
                                Object {
                                                "fontWeight": "bold",
                                              }
                }
>
                Status:
</style__StyledText>,
              " ",
              <style__StyledText
                warning={true}
>
                Reconnecting...
</style__StyledText>,
              " ",
              <style__StatusIcon
                type="loading"
                warning={true}
/>,
            ],
            "style": Object {
              "alignItems": "center",
              "display": "flex",
            },
            "warning": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Status:",
                "style": Object {
                  "fontWeight": "bold",
                },
              },
              "ref": null,
              "rendered": "Status:",
              "type": [Function],
            },
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Reconnecting...",
                "warning": true,
              },
              "ref": null,
              "rendered": "Reconnecting...",
              "type": [Function],
            },
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "type": "loading",
                "warning": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "span",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ConnectionStatus /> should render correctly when network is mainnet & no errors 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ConnectionStatus
    currentNetwork={
        Object {
            "provider": Object {
              "_network": Object {
                "chainId": 1,
              },
            },
          }
    }
    errors={
        Immutable.Set [
        ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <span
          warning={false}
>
          <style__StyledText
                    style={
                              Object {
                                        "fontWeight": "bold",
                                      }
                    }
          >
                    Network:
          </style__StyledText>
           
          <style__StyledText
                    warning={false}
          >
                    Mainnet
          </style__StyledText>
</span>,
        <span
          style={
                    Object {
                              "alignItems": "center",
                              "display": "flex",
                            }
          }
          warning={false}
>
          <style__StyledText
                    style={
                              Object {
                                        "fontWeight": "bold",
                                      }
                    }
          >
                    Status:
          </style__StyledText>
           
          <style__StyledText
                    warning={false}
          >
                    Connected
          </style__StyledText>
           
          <style__StatusIcon
                    type="check"
                    warning={false}
          />
</span>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <style__StyledText
              style={
                            Object {
                                          "fontWeight": "bold",
                                        }
              }
>
              Network:
</style__StyledText>,
            " ",
            <style__StyledText
              warning={false}
>
              Mainnet
</style__StyledText>,
          ],
          "warning": false,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Network:",
              "style": Object {
                "fontWeight": "bold",
              },
            },
            "ref": null,
            "rendered": "Network:",
            "type": [Function],
          },
          " ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Mainnet",
              "warning": false,
            },
            "ref": null,
            "rendered": "Mainnet",
            "type": [Function],
          },
        ],
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <style__StyledText
              style={
                            Object {
                                          "fontWeight": "bold",
                                        }
              }
>
              Status:
</style__StyledText>,
            " ",
            <style__StyledText
              warning={false}
>
              Connected
</style__StyledText>,
            " ",
            <style__StatusIcon
              type="check"
              warning={false}
/>,
          ],
          "style": Object {
            "alignItems": "center",
            "display": "flex",
          },
          "warning": false,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Status:",
              "style": Object {
                "fontWeight": "bold",
              },
            },
            "ref": null,
            "rendered": "Status:",
            "type": [Function],
          },
          " ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Connected",
              "warning": false,
            },
            "ref": null,
            "rendered": "Connected",
            "type": [Function],
          },
          " ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "type": "check",
              "warning": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "span",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <span
            warning={false}
>
            <style__StyledText
                        style={
                                    Object {
                                                "fontWeight": "bold",
                                              }
                        }
            >
                        Network:
            </style__StyledText>
             
            <style__StyledText
                        warning={false}
            >
                        Mainnet
            </style__StyledText>
</span>,
          <span
            style={
                        Object {
                                    "alignItems": "center",
                                    "display": "flex",
                                  }
            }
            warning={false}
>
            <style__StyledText
                        style={
                                    Object {
                                                "fontWeight": "bold",
                                              }
                        }
            >
                        Status:
            </style__StyledText>
             
            <style__StyledText
                        warning={false}
            >
                        Connected
            </style__StyledText>
             
            <style__StatusIcon
                        type="check"
                        warning={false}
            />
</span>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <style__StyledText
                style={
                                Object {
                                                "fontWeight": "bold",
                                              }
                }
>
                Network:
</style__StyledText>,
              " ",
              <style__StyledText
                warning={false}
>
                Mainnet
</style__StyledText>,
            ],
            "warning": false,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Network:",
                "style": Object {
                  "fontWeight": "bold",
                },
              },
              "ref": null,
              "rendered": "Network:",
              "type": [Function],
            },
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Mainnet",
                "warning": false,
              },
              "ref": null,
              "rendered": "Mainnet",
              "type": [Function],
            },
          ],
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <style__StyledText
                style={
                                Object {
                                                "fontWeight": "bold",
                                              }
                }
>
                Status:
</style__StyledText>,
              " ",
              <style__StyledText
                warning={false}
>
                Connected
</style__StyledText>,
              " ",
              <style__StatusIcon
                type="check"
                warning={false}
/>,
            ],
            "style": Object {
              "alignItems": "center",
              "display": "flex",
            },
            "warning": false,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Status:",
                "style": Object {
                  "fontWeight": "bold",
                },
              },
              "ref": null,
              "rendered": "Status:",
              "type": [Function],
            },
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Connected",
                "warning": false,
              },
              "ref": null,
              "rendered": "Connected",
              "type": [Function],
            },
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "type": "check",
                "warning": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "span",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<ConnectionStatus /> should render correctly when network is testnet 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ConnectionStatus
    currentNetwork={
        Object {
            "provider": Object {
              "_network": Object {
                "chainId": 3,
              },
            },
          }
    }
    errors={
        Immutable.Set [
        ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <span
          warning={true}
>
          <style__StyledText
                    style={
                              Object {
                                        "fontWeight": "bold",
                                      }
                    }
          >
                    Network:
          </style__StyledText>
           
          <style__StyledText
                    warning={true}
          >
                    Testnet
          </style__StyledText>
</span>,
        <span
          style={
                    Object {
                              "alignItems": "center",
                              "display": "flex",
                            }
          }
          warning={false}
>
          <style__StyledText
                    style={
                              Object {
                                        "fontWeight": "bold",
                                      }
                    }
          >
                    Status:
          </style__StyledText>
           
          <style__StyledText
                    warning={false}
          >
                    Connected
          </style__StyledText>
           
          <style__StatusIcon
                    type="check"
                    warning={false}
          />
</span>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <style__StyledText
              style={
                            Object {
                                          "fontWeight": "bold",
                                        }
              }
>
              Network:
</style__StyledText>,
            " ",
            <style__StyledText
              warning={true}
>
              Testnet
</style__StyledText>,
          ],
          "warning": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Network:",
              "style": Object {
                "fontWeight": "bold",
              },
            },
            "ref": null,
            "rendered": "Network:",
            "type": [Function],
          },
          " ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Testnet",
              "warning": true,
            },
            "ref": null,
            "rendered": "Testnet",
            "type": [Function],
          },
        ],
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <style__StyledText
              style={
                            Object {
                                          "fontWeight": "bold",
                                        }
              }
>
              Status:
</style__StyledText>,
            " ",
            <style__StyledText
              warning={false}
>
              Connected
</style__StyledText>,
            " ",
            <style__StatusIcon
              type="check"
              warning={false}
/>,
          ],
          "style": Object {
            "alignItems": "center",
            "display": "flex",
          },
          "warning": false,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Status:",
              "style": Object {
                "fontWeight": "bold",
              },
            },
            "ref": null,
            "rendered": "Status:",
            "type": [Function],
          },
          " ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Connected",
              "warning": false,
            },
            "ref": null,
            "rendered": "Connected",
            "type": [Function],
          },
          " ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "type": "check",
              "warning": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "span",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <span
            warning={true}
>
            <style__StyledText
                        style={
                                    Object {
                                                "fontWeight": "bold",
                                              }
                        }
            >
                        Network:
            </style__StyledText>
             
            <style__StyledText
                        warning={true}
            >
                        Testnet
            </style__StyledText>
</span>,
          <span
            style={
                        Object {
                                    "alignItems": "center",
                                    "display": "flex",
                                  }
            }
            warning={false}
>
            <style__StyledText
                        style={
                                    Object {
                                                "fontWeight": "bold",
                                              }
                        }
            >
                        Status:
            </style__StyledText>
             
            <style__StyledText
                        warning={false}
            >
                        Connected
            </style__StyledText>
             
            <style__StatusIcon
                        type="check"
                        warning={false}
            />
</span>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <style__StyledText
                style={
                                Object {
                                                "fontWeight": "bold",
                                              }
                }
>
                Network:
</style__StyledText>,
              " ",
              <style__StyledText
                warning={true}
>
                Testnet
</style__StyledText>,
            ],
            "warning": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Network:",
                "style": Object {
                  "fontWeight": "bold",
                },
              },
              "ref": null,
              "rendered": "Network:",
              "type": [Function],
            },
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Testnet",
                "warning": true,
              },
              "ref": null,
              "rendered": "Testnet",
              "type": [Function],
            },
          ],
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <style__StyledText
                style={
                                Object {
                                                "fontWeight": "bold",
                                              }
                }
>
                Status:
</style__StyledText>,
              " ",
              <style__StyledText
                warning={false}
>
                Connected
</style__StyledText>,
              " ",
              <style__StatusIcon
                type="check"
                warning={false}
/>,
            ],
            "style": Object {
              "alignItems": "center",
              "display": "flex",
            },
            "warning": false,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Status:",
                "style": Object {
                  "fontWeight": "bold",
                },
              },
              "ref": null,
              "rendered": "Status:",
              "type": [Function],
            },
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Connected",
                "warning": false,
              },
              "ref": null,
              "rendered": "Connected",
              "type": [Function],
            },
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "type": "check",
                "warning": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "span",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
