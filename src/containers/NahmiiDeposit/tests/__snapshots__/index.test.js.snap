// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<NahmiiDeposit /> should render correctly when approving a token deposit 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NahmiiDeposit
    currentNetwork={
        Object {
            "apiDomain": "api2.dev.hubii.net",
            "defaultNahmiiProvider": NahmiiProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "connection": Object {
                "url": "http://geth-ropsten.dev.hubii.net",
              },
              "ready": Promise {},
            },
            "identityServiceAppId": "appid",
            "identityServiceSecret": "secret",
            "nahmiiProvider": NahmiiProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "connection": Object {
                "url": "http://geth-ropsten.dev.hubii.net",
              },
              "ready": Promise {},
            },
            "name": "ropsten",
            "provider": FallbackProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "_providers": Array [
                InfuraProvider {
                  "_balances": Object {},
                  "_emitted": Object {
                    "block": -2,
                  },
                  "_events": Array [],
                  "_fastQueryDate": 0,
                  "_lastBlockNumber": -2,
                  "_network": Object {
                    "_defaultProvider": [Function],
                    "chainId": 3,
                    "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                    "name": "ropsten",
                  },
                  "_pollingInterval": 4000,
                  "apiAccessToken": null,
                  "connection": Object {
                    "url": "https://ropsten.infura.io/",
                  },
                  "ready": Promise {},
                },
                EtherscanProvider {
                  "_balances": Object {},
                  "_emitted": Object {
                    "block": -2,
                  },
                  "_events": Array [],
                  "_fastQueryDate": 0,
                  "_lastBlockNumber": -2,
                  "_network": Object {
                    "_defaultProvider": [Function],
                    "chainId": 3,
                    "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                    "name": "ropsten",
                  },
                  "_pollingInterval": 4000,
                  "apiKey": undefined,
                  "baseUrl": "https://api-ropsten.etherscan.io",
                  "ready": Promise {},
                },
              ],
              "ready": Promise {},
            },
            "walletApiEndpoint": [Function],
          }
    }
    currentWalletWithInfo={
        Immutable.Map {
            deviceId: "041ca8e96420e95a106e8c9bb3c9fb9e8c00d4b11cac562888c898000b5cec366c03a0f84574716fac6c7a7df47a925f0e30f5286546adf3179b5a08dc9d8e09da",
            address: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
            type: "lns",
            name: "lns",
            derivationPath: "m/44'/60'/0'/0",
            transactions: Immutable.Map {
                loading: false,
                error: null,
                transactions: Immutable.List [
                    Immutable.Map {
                        transfers: Immutable.Map {
                            single: "2111000000",
                            total: "3111000000",
                        },
                        created: "2018-12-17T01:59:03.718Z",
                        decimalAmount: "0.000000002111",
                        counterpartyAddress: "0x4231676a35483638796e2af8ed2af0a41b097524",
                        nonce: 21,
                        currency: "0x0000000000000000000000000000000000000000",
                        layer: "nahmii",
                        sender: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                    Immutable.Map {
                                        originId: "0",
                                        figure: Immutable.Map {
                                            currency: Immutable.Map {
                                                ct: "0x0000000000000000000000000000000000000000",
                                                id: "0",
                                            },
                                            amount: "4121100",
                                        },
                                    },
                                ],
                                single: Immutable.Map {
                                    currency: Immutable.Map {
                                        ct: "0x0000000000000000000000000000000000000000",
                                        id: "0",
                                    },
                                    amount: "2111000",
                                },
                            },
                            wallet: "0x4231676a35483638796e2af8ed2af0a41b097524",
                            nonce: 7,
                            balances: Immutable.Map {
                                current: "999995875778900",
                                previous: "999997988889900",
                            },
                        },
                        timestamp: "2018-12-17T01:59:03.776Z",
                        seals: Immutable.Map {
                            wallet: Immutable.Map {
                                hash: "0x57d9cf4ffc4b2aecce23d2e56083c7b437f5e105be74c1cd17d8522999b5d0be",
                                signature: Immutable.Map {
                                    s: "0x395b632dab03b34321c1aed7dcbac4a1b87582904d2898645b3ec90505c44348",
                                    r: "0x01cda7bddbc7c2194dd395aac73eaf1ca6760bfef83689c5a1240f936f0200d4",
                                    v: 28,
                                },
                            },
                            operator: Immutable.Map {
                                hash: "0x99c1a3a1cd8b15cdb969270f6e8f7fdce5b9c8377a00c38d800b9982c98eec5a",
                                signature: Immutable.Map {
                                    s: "0x129c9e071467ee98ddd799fa1ed7b3cbda11486955b9360afd22ce0ff4d91aab",
                                    r: "0x4d22165ff7382f998107a87e800a11581e7b99fa67ab613656706105157e5ab9",
                                    v: 28,
                                },
                            },
                        },
                        blockNumber: 4643058,
                        amount: "2111000000",
                        symbol: "ETH",
                        recipient: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                ],
                            },
                            wallet: "0x1c7429f62595097315289cebac1fdbda587ad512",
                            nonce: 4,
                            balances: Immutable.Map {
                                current: "10013111000000",
                                previous: "10011000000000",
                            },
                        },
                        type: "received",
                        updated: "2018-12-17T01:59:03.776Z",
                        id: "5c1702e78d9ea3000ea459d9",
                        operatorId: "0",
                        confirmed: true,
                    },
                    Immutable.Map {
                        decimalAmount: "0.0000000001",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780091,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x0000000000000000000000000000000000000000",
                        layer: "baseLayer",
                        sender: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        timestamp: "2018-08-06T02:32:00.000Z",
                        amount: "100000000",
                        symbol: "ETH",
                        recipient: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        type: "received",
                    },
                    Immutable.Map {
                        transfers: Immutable.Map {
                            single: "10000000000000000",
                            total: "10000000000000000",
                        },
                        created: "2018-11-16T22:40:54.951Z",
                        decimalAmount: "0.01",
                        counterpartyAddress: "0xc5768cdeda275fe5536147a3fbc8cfb6b0d8ac48",
                        nonce: 18,
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        layer: "nahmii",
                        sender: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                    Immutable.Map {
                                        originId: "0",
                                        figure: Immutable.Map {
                                            currency: Immutable.Map {
                                                ct: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                                                id: "0",
                                            },
                                            amount: "10000000000000",
                                        },
                                    },
                                ],
                                single: Immutable.Map {
                                    currency: Immutable.Map {
                                        ct: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                                        id: "0",
                                    },
                                    amount: "10000000000000",
                                },
                            },
                            wallet: "0x1c7429f62595097315289cebac1fdbda587ad512",
                            nonce: 3,
                            balances: Immutable.Map {
                                current: "89990000000000000",
                                previous: "100000000000000000",
                            },
                        },
                        timestamp: "2018-11-16T22:40:55.049Z",
                        seals: Immutable.Map {
                            wallet: Immutable.Map {
                                hash: "0x0b7d6d30e9665016246e6370e82579a35bc4d9c0cf88c65b38d538f7ad8ee828",
                                signature: Immutable.Map {
                                    s: "0x7d60c93b9037be6d880bbe86f258d0e371ad4015fc2528cf1312d924f9e76245",
                                    r: "0x9c11c2a5244a741f67837eb6efc1f12396c19d2490ff2bd872dbd9643a7c1013",
                                    v: 27,
                                },
                            },
                            operator: Immutable.Map {
                                hash: "0x92b0e8b3c705449eea1bce2e517468cec521e6451d4a7e6c4fe4c4efe7df6ab4",
                                signature: Immutable.Map {
                                    s: "0x09ad154d886899b36f15a2be68ddb61c15afe185acd498a9b6bb2577f317a942",
                                    r: "0x80d8f5e899f16c9a4abcc72d23399d4ddd3c08a29dae8233a46179ef54cc189c",
                                    v: 27,
                                },
                            },
                        },
                        blockNumber: 3780090,
                        amount: "10000000000000000",
                        symbol: "BOKKY",
                        recipient: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                ],
                            },
                            wallet: "0xc5768cdeda275fe5536147a3fbc8cfb6b0d8ac48",
                            nonce: 2,
                            balances: Immutable.Map {
                                current: "10000000000000000",
                                previous: "0",
                            },
                        },
                        type: "sent",
                        updated: "2018-11-16T22:40:55.049Z",
                        id: "5c16d4768d9ea3000ea45690",
                        operatorId: "0",
                        confirmed: true,
                    },
                    Immutable.Map {
                        decimalAmount: "0.000000000000000005",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780089,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        layer: "baseLayer",
                        sender: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        timestamp: "2018-08-06T02:32:00.000Z",
                        amount: "5",
                        symbol: "BOKKY",
                        recipient: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        type: "sent",
                    },
                ],
            },
            balances: Immutable.Map {
                baseLayer: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.198937",
                            currency: "0x0000000000000000000000000000000000000000",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.198937",
                                btc: "0.00198937",
                                usd: "81.962044",
                            },
                        },
                        Immutable.Map {
                            balance: "1.231288e-12",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "1.231288e-13",
                                btc: "1.231288e-15",
                                usd: "1.231288e-12",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1989370000001231288",
                        btc: "0.001989370000001231288",
                        usd: "81.962044000001231288",
                    },
                },
                nahmiiAvailable: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.113",
                        btc: "0.00113",
                        usd: "41.33",
                    },
                },
                nahmiiStaging: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1",
                        btc: "0.001",
                        usd: "41.2",
                    },
                },
                nahmiiStaged: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                    ],
                    total: Immutable.Map {
                        eth: "0",
                        btc: "0",
                        usd: "0",
                    },
                },
                nahmiiCombined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.2",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.2",
                                btc: "0.002",
                                usd: "82.4",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.213",
                        btc: "0.00213",
                        usd: "82.53",
                    },
                },
                combined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.398937",
                            currency: "0x0000000000000000000000000000000000000000",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.398937",
                                btc: "0.00398937",
                                usd: "164.362044",
                            },
                        },
                        Immutable.Map {
                            balance: "0.130000000001231288",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.0130000000001231288",
                                btc: "0.000130000000001231288",
                                usd: "0.130000000001231288",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.4119370000001231288",
                        btc: "0.004119370000001231288",
                        usd: "164.492044000001231288",
                    },
                },
            },
        }
    }
    depositStatus={
        Immutable.Map {
            depositingEth: false,
            approvingTokenDeposit: true,
            completingTokenDeposit: false,
            error: null,
        }
    }
    gasStatistics={
        Immutable.Map {
        }
    }
    goWalletDetails={[Function]}
    intl={
        Object {
            "formatMessage": [Function],
            "formatNumber": [Function],
          }
    }
    ledgerNanoSInfo={
        Immutable.Map {
            status: "disconnected",
            addresses: Immutable.Map {
            },
            id: null,
            confTxOnDevice: false,
        }
    }
    nahmiiDeposit={[Function]}
    prices={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    eth: 0.1,
                    btc: 0.001,
                    usd: 1,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x0000000000000000000000000000000000000000",
                    eth: 1,
                    btc: 0.01,
                    usd: 412,
                },
            ],
        }
    }
    supportedAssets={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    symbol: "My20",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    symbol: "HBT",
                    decimals: 15,
                    color: "0063A5",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    symbol: "SBT",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    symbol: "WETH",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    symbol: "BOKKY",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x0000000000000000000000000000000000000000",
                    symbol: "ETH",
                    decimals: 18,
                    color: "5C78E4",
                },
            ],
        }
    }
    trezorInfo={
        Immutable.Map {
            status: "disconnected",
            connected: false,
            addresses: Immutable.Map {
            },
            id: "ajlsdfkjas",
            confTxOnDevice: false,
        }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <div
        style={
                Object {
                        "display": "flex",
                        "flex": "1",
                        "flexWrap": "wrap",
                        "marginTop": "0.5rem",
                      }
        }
>
        <div
                style={
                        Object {
                                "flex": "1",
                                "marginBottom": "3rem",
                                "marginRight": "2rem",
                              }
                }
        >
                <Form__FlexForm>
                        <Form__FormItem
                                colon={false}
                                label={
                                        <Form__FormItemLabel>
                                                select_asset_to_deposit
                                        </Form__FormItemLabel>
                                }
                        >
                                <style__Image
                                        alt="logo"
                                        onError={[Function]}
                                        src="/public/images/assets/ETH.svg"
                                />
                                <Select
                                        defaultValue="ETH"
                                        onSelect={[Function]}
                                        style={
                                                Object {
                                                        "paddingLeft": "0.5rem",
                                                      }
                                        }
                                >
                                        <Option
                                                value="ETH"
                                        >
                                                ETH
                                        </Option>
                                        <Option
                                                value="BOKKY"
                                        >
                                                BOKKY
                                        </Option>
                                </Select>
                        </Form__FormItem>
                        <Form__FormItem
                                colon={false}
                                help={
                                        <HelperTextComponent
                                                left="$0.00"
                                                right="usd"
                                        />
                                }
                                label={
                                        <Form__FormItemLabel>
                                                enter_amount
                                        </Form__FormItemLabel>
                                }
                        >
                                <Input
                                        defaultValue="0"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        value="0"
                                />
                        </Form__FormItem>
                        <GasOptions
                                defaultGasLimit={600000}
                                defaultGasPrice={10}
                                defaultOption="average"
                                gasStatistics={undefined}
                                intl={
                                        Object {
                                                "formatMessage": [Function],
                                                "formatNumber": [Function],
                                              }
                                }
                                onChange={[Function]}
                        />
                        <style__DollarPrice>
                                1 ETH = 
                                <style__StyledNumericText
                                        type="currency"
                                        value="412"
                                />
                        </style__DollarPrice>
                </Form__FlexForm>
        </div>
        <div
                style={
                        Object {
                                "minWidth": "34rem",
                              }
                }
        >
                <Row
                        gutter={0}
                >
                        <style__StyledCol
                                span={12}
                        >
                                deposit
                        </style__StyledCol>
                </Row>
                <Row
                        gutter={0}
                >
                        <TransferDescriptionItem
                                main={
                                        <SelectableText>
                                                <NumericText
                                                        maxDecimalPlaces={18}
                                                        value="0"
                                                />
                                                 
                                                ETH
                                        </SelectableText>
                                }
                                subtitle={
                                        <NumericText
                                                type="currency"
                                                value="0"
                                        />
                                }
                        />
                </Row>
                <Row
                        gutter={0}
                >
                        <style__StyledCol
                                span={12}
                        >
                                <TooltipText
                                        details="max_base_layer_fee_explain"
                                >
                                        max_base_layer_fee
                                </TooltipText>
                        </style__StyledCol>
                </Row>
                <Row
                        gutter={0}
                >
                        <TransferDescriptionItem
                                main={
                                        <SelectableText>
                                                <NumericText
                                                        maxDecimalPlaces={18}
                                                        value="0.006"
                                                />
                                                 
                                                ETH
                                        </SelectableText>
                                }
                                subtitle={
                                        <NumericText
                                                type="currency"
                                                value="2.472"
                                        />
                                }
                        />
                </Row>
                <Row
                        gutter={0}
                >
                        <style__StyledCol
                                span={12}
                        >
                                base_layer
                                 ETH 
                                balance_before
                        </style__StyledCol>
                </Row>
                <Row
                        gutter={0}
                >
                        <TransferDescriptionItem
                                main={
                                        <SelectableText>
                                                <NumericText
                                                        maxDecimalPlaces={18}
                                                        value="0.198937"
                                                />
                                                 
                                                ETH
                                        </SelectableText>
                                }
                                subtitle={
                                        <NumericText
                                                type="currency"
                                                value="81.962044"
                                        />
                                }
                        />
                </Row>
                <Row
                        gutter={0}
                >
                        <style__StyledCol
                                span={12}
                        >
                                base_layer
                                 ETH 
                                balance_after
                        </style__StyledCol>
                </Row>
                <Row
                        gutter={0}
                >
                        <TransferDescriptionItem
                                main={
                                        <SelectableText>
                                                <NumericText
                                                        maxDecimalPlaces={18}
                                                        value="0.192937"
                                                />
                                                 
                                                ETH
                                        </SelectableText>
                                }
                                subtitle={
                                        <NumericText
                                                type="currency"
                                                value="79.490044"
                                        />
                                }
                        />
                </Row>
                <div>
                        <Row
                                gutter={0}
                        >
                                <style__StyledCol
                                        span={12}
                                >
                                        nahmii_available
                                         ETH 
                                        balance_before
                                </style__StyledCol>
                        </Row>
                        <Row
                                gutter={0}
                        >
                                <TransferDescriptionItem
                                        main={
                                                <SelectableText>
                                                        <NumericText
                                                                maxDecimalPlaces={18}
                                                                value="0.1"
                                                        />
                                                         
                                                        ETH
                                                </SelectableText>
                                        }
                                        subtitle={
                                                <NumericText
                                                        type="currency"
                                                        value="41.2"
                                                />
                                        }
                                />
                        </Row>
                        <Row
                                gutter={0}
                        >
                                <style__StyledCol
                                        span={12}
                                >
                                        nahmii_available
                                         ETH 
                                        balance_after
                                </style__StyledCol>
                        </Row>
                        <Row
                                gutter={0}
                        >
                                <TransferDescriptionItem
                                        main={
                                                <SelectableText>
                                                        <NumericText
                                                                maxDecimalPlaces={18}
                                                                value="0.1"
                                                        />
                                                         
                                                        ETH
                                                </SelectableText>
                                        }
                                        subtitle={
                                                <NumericText
                                                        type="currency"
                                                        value="41.2"
                                                />
                                        }
                                />
                        </Row>
                </div>
                <Row
                        gutter={0}
                >
                        <style__HWPromptWrapper>
                                <Connect(HWPromptContainer) />
                        </style__HWPromptWrapper>
                        <div
                                style={
                                        Object {
                                                "display": "flex",
                                                "flexDirection": "column",
                                                "marginTop": "2rem",
                                              }
                                }
                        >
                                <div
                                        style={
                                                Object {
                                                        "display": "flex",
                                                        "flexDirection": "column",
                                                      }
                                        }
                                >
                                        <span>
                                                <Text
                                                        large={true}
                                                >
                                                        waiting_for_deposit_to_be {"ratio":"1/2"} mined...
                                                </Text>
                                                <Icon
                                                        style={
                                                                Object {
                                                                        "color": "white",
                                                                        "fontSize": "1.5rem",
                                                                        "marginLeft": "1rem",
                                                                      }
                                                        }
                                                        type="loading"
                                                />
                                        </span>
                                        <a
                                                onClick={[Function]}
                                                role="link"
                                                tabIndex={0}
                                        >
                                                Track progress on Etherscan
                                        </a>
                                </div>
                        </div>
                </Row>
                <SectionHeading
                        style={
                                Object {
                                        "marginTop": "2rem",
                                        "maxWidth": "25rem",
                                      }
                        }
                >
                        deposits_note
                </SectionHeading>
        </div>
</div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            style={
                        Object {
                                    "flex": "1",
                                    "marginBottom": "3rem",
                                    "marginRight": "2rem",
                                  }
            }
>
            <Form__FlexForm>
                        <Form__FormItem
                                    colon={false}
                                    label={
                                                <Form__FormItemLabel>
                                                            select_asset_to_deposit
                                                </Form__FormItemLabel>
                                    }
                        >
                                    <style__Image
                                                alt="logo"
                                                onError={[Function]}
                                                src="/public/images/assets/ETH.svg"
                                    />
                                    <Select
                                                defaultValue="ETH"
                                                onSelect={[Function]}
                                                style={
                                                            Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                                                }
                                    >
                                                <Option
                                                            value="ETH"
                                                >
                                                            ETH
                                                </Option>
                                                <Option
                                                            value="BOKKY"
                                                >
                                                            BOKKY
                                                </Option>
                                    </Select>
                        </Form__FormItem>
                        <Form__FormItem
                                    colon={false}
                                    help={
                                                <HelperTextComponent
                                                            left="$0.00"
                                                            right="usd"
                                                />
                                    }
                                    label={
                                                <Form__FormItemLabel>
                                                            enter_amount
                                                </Form__FormItemLabel>
                                    }
                        >
                                    <Input
                                                defaultValue="0"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value="0"
                                    />
                        </Form__FormItem>
                        <GasOptions
                                    defaultGasLimit={600000}
                                    defaultGasPrice={10}
                                    defaultOption="average"
                                    gasStatistics={undefined}
                                    intl={
                                                Object {
                                                            "formatMessage": [Function],
                                                            "formatNumber": [Function],
                                                          }
                                    }
                                    onChange={[Function]}
                        />
                        <style__DollarPrice>
                                    1 ETH = 
                                    <style__StyledNumericText
                                                type="currency"
                                                value="412"
                                    />
                        </style__DollarPrice>
            </Form__FlexForm>
</div>,
          <div
            style={
                        Object {
                                    "minWidth": "34rem",
                                  }
            }
>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    deposit
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main={
                                                <SelectableText>
                                                            <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0"
                                                            />
                                                             
                                                            ETH
                                                </SelectableText>
                                    }
                                    subtitle={
                                                <NumericText
                                                            type="currency"
                                                            value="0"
                                                />
                                    }
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    <TooltipText
                                                details="max_base_layer_fee_explain"
                                    >
                                                max_base_layer_fee
                                    </TooltipText>
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main={
                                                <SelectableText>
                                                            <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.006"
                                                            />
                                                             
                                                            ETH
                                                </SelectableText>
                                    }
                                    subtitle={
                                                <NumericText
                                                            type="currency"
                                                            value="2.472"
                                                />
                                    }
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    base_layer
                                     ETH 
                                    balance_before
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main={
                                                <SelectableText>
                                                            <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.198937"
                                                            />
                                                             
                                                            ETH
                                                </SelectableText>
                                    }
                                    subtitle={
                                                <NumericText
                                                            type="currency"
                                                            value="81.962044"
                                                />
                                    }
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    base_layer
                                     ETH 
                                    balance_after
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main={
                                                <SelectableText>
                                                            <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.192937"
                                                            />
                                                             
                                                            ETH
                                                </SelectableText>
                                    }
                                    subtitle={
                                                <NumericText
                                                            type="currency"
                                                            value="79.490044"
                                                />
                                    }
                        />
            </Row>
            <div>
                        <Row
                                    gutter={0}
                        >
                                    <style__StyledCol
                                                span={12}
                                    >
                                                nahmii_available
                                                 ETH 
                                                balance_before
                                    </style__StyledCol>
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <TransferDescriptionItem
                                                main={
                                                            <SelectableText>
                                                                        <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.1"
                                                                        />
                                                                         
                                                                        ETH
                                                            </SelectableText>
                                                }
                                                subtitle={
                                                            <NumericText
                                                                        type="currency"
                                                                        value="41.2"
                                                            />
                                                }
                                    />
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <style__StyledCol
                                                span={12}
                                    >
                                                nahmii_available
                                                 ETH 
                                                balance_after
                                    </style__StyledCol>
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <TransferDescriptionItem
                                                main={
                                                            <SelectableText>
                                                                        <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.1"
                                                                        />
                                                                         
                                                                        ETH
                                                            </SelectableText>
                                                }
                                                subtitle={
                                                            <NumericText
                                                                        type="currency"
                                                                        value="41.2"
                                                            />
                                                }
                                    />
                        </Row>
            </div>
            <Row
                        gutter={0}
            >
                        <style__HWPromptWrapper>
                                    <Connect(HWPromptContainer) />
                        </style__HWPromptWrapper>
                        <div
                                    style={
                                                Object {
                                                            "display": "flex",
                                                            "flexDirection": "column",
                                                            "marginTop": "2rem",
                                                          }
                                    }
                        >
                                    <div
                                                style={
                                                            Object {
                                                                        "display": "flex",
                                                                        "flexDirection": "column",
                                                                      }
                                                }
                                    >
                                                <span>
                                                            <Text
                                                                        large={true}
                                                            >
                                                                        waiting_for_deposit_to_be {"ratio":"1/2"} mined...
                                                            </Text>
                                                            <Icon
                                                                        style={
                                                                                    Object {
                                                                                                "color": "white",
                                                                                                "fontSize": "1.5rem",
                                                                                                "marginLeft": "1rem",
                                                                                              }
                                                                        }
                                                                        type="loading"
                                                            />
                                                </span>
                                                <a
                                                            onClick={[Function]}
                                                            role="link"
                                                            tabIndex={0}
                                                >
                                                            Track progress on Etherscan
                                                </a>
                                    </div>
                        </div>
            </Row>
            <SectionHeading
                        style={
                                    Object {
                                                "marginTop": "2rem",
                                                "maxWidth": "25rem",
                                              }
                        }
            >
                        deposits_note
            </SectionHeading>
</div>,
        ],
        "style": Object {
          "display": "flex",
          "flex": "1",
          "flexWrap": "wrap",
          "marginTop": "0.5rem",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Form__FlexForm>
              <Form__FormItem
                            colon={false}
                            label={
                                          <Form__FormItemLabel>
                                                        select_asset_to_deposit
                                          </Form__FormItemLabel>
                            }
              >
                            <style__Image
                                          alt="logo"
                                          onError={[Function]}
                                          src="/public/images/assets/ETH.svg"
                            />
                            <Select
                                          defaultValue="ETH"
                                          onSelect={[Function]}
                                          style={
                                                        Object {
                                                                      "paddingLeft": "0.5rem",
                                                                    }
                                          }
                            >
                                          <Option
                                                        value="ETH"
                                          >
                                                        ETH
                                          </Option>
                                          <Option
                                                        value="BOKKY"
                                          >
                                                        BOKKY
                                          </Option>
                            </Select>
              </Form__FormItem>
              <Form__FormItem
                            colon={false}
                            help={
                                          <HelperTextComponent
                                                        left="$0.00"
                                                        right="usd"
                                          />
                            }
                            label={
                                          <Form__FormItemLabel>
                                                        enter_amount
                                          </Form__FormItemLabel>
                            }
              >
                            <Input
                                          defaultValue="0"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          value="0"
                            />
              </Form__FormItem>
              <GasOptions
                            defaultGasLimit={600000}
                            defaultGasPrice={10}
                            defaultOption="average"
                            gasStatistics={undefined}
                            intl={
                                          Object {
                                                        "formatMessage": [Function],
                                                        "formatNumber": [Function],
                                                      }
                            }
                            onChange={[Function]}
              />
              <style__DollarPrice>
                            1 ETH = 
                            <style__StyledNumericText
                                          type="currency"
                                          value="412"
                            />
              </style__DollarPrice>
</Form__FlexForm>,
            "style": Object {
              "flex": "1",
              "marginBottom": "3rem",
              "marginRight": "2rem",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Form__FormItem
                  colon={false}
                  label={
                                    <Form__FormItemLabel>
                                                      select_asset_to_deposit
                                    </Form__FormItemLabel>
                  }
>
                  <style__Image
                                    alt="logo"
                                    onError={[Function]}
                                    src="/public/images/assets/ETH.svg"
                  />
                  <Select
                                    defaultValue="ETH"
                                    onSelect={[Function]}
                                    style={
                                                      Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                                    }
                  >
                                    <Option
                                                      value="ETH"
                                    >
                                                      ETH
                                    </Option>
                                    <Option
                                                      value="BOKKY"
                                    >
                                                      BOKKY
                                    </Option>
                  </Select>
</Form__FormItem>,
                <Form__FormItem
                  colon={false}
                  help={
                                    <HelperTextComponent
                                                      left="$0.00"
                                                      right="usd"
                                    />
                  }
                  label={
                                    <Form__FormItemLabel>
                                                      enter_amount
                                    </Form__FormItemLabel>
                  }
>
                  <Input
                                    defaultValue="0"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    value="0"
                  />
</Form__FormItem>,
                <GasOptions
                  defaultGasLimit={600000}
                  defaultGasPrice={10}
                  defaultOption="average"
                  gasStatistics={undefined}
                  intl={
                                    Object {
                                                      "formatMessage": [Function],
                                                      "formatNumber": [Function],
                                                    }
                  }
                  onChange={[Function]}
/>,
                <style__DollarPrice>
                  1 ETH = 
                  <style__StyledNumericText
                                    type="currency"
                                    value="412"
                  />
</style__DollarPrice>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <style__Image
                      alt="logo"
                      onError={[Function]}
                      src="/public/images/assets/ETH.svg"
/>,
                    <Select
                      defaultValue="ETH"
                      onSelect={[Function]}
                      style={
                                            Object {
                                                                  "paddingLeft": "0.5rem",
                                                                }
                      }
>
                      <Option
                                            value="ETH"
                      >
                                            ETH
                      </Option>
                      <Option
                                            value="BOKKY"
                      >
                                            BOKKY
                      </Option>
</Select>,
                  ],
                  "colon": false,
                  "label": <Form__FormItemLabel>
                    select_asset_to_deposit
</Form__FormItemLabel>,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "alt": "logo",
                      "onError": [Function],
                      "src": "/public/images/assets/ETH.svg",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <Option
                          value="ETH"
>
                          ETH
</Option>,
                        <Option
                          value="BOKKY"
>
                          BOKKY
</Option>,
                      ],
                      "defaultValue": "ETH",
                      "onSelect": [Function],
                      "style": Object {
                        "paddingLeft": "0.5rem",
                      },
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": "ETH",
                        "nodeType": "class",
                        "props": Object {
                          "children": "ETH",
                          "value": "ETH",
                        },
                        "ref": null,
                        "rendered": "ETH",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": "BOKKY",
                        "nodeType": "class",
                        "props": Object {
                          "children": "BOKKY",
                          "value": "BOKKY",
                        },
                        "ref": null,
                        "rendered": "BOKKY",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Input
                    defaultValue="0"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    value="0"
/>,
                  "colon": false,
                  "help": <HelperTextComponent
                    left="$0.00"
                    right="usd"
/>,
                  "label": <Form__FormItemLabel>
                    enter_amount
</Form__FormItemLabel>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "defaultValue": "0",
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "0",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "defaultGasLimit": 600000,
                  "defaultGasPrice": 10,
                  "defaultOption": "average",
                  "gasStatistics": undefined,
                  "intl": Object {
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                  },
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "1 ETH = ",
                    <style__StyledNumericText
                      type="currency"
                      value="412"
/>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "1 ETH = ",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "type": "currency",
                      "value": "412",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                deposit
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main={
                                                <SelectableText>
                                                                <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0"
                                                                />
                                                                 
                                                                ETH
                                                </SelectableText>
                                }
                                subtitle={
                                                <NumericText
                                                                type="currency"
                                                                value="0"
                                                />
                                }
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                <TooltipText
                                                details="max_base_layer_fee_explain"
                                >
                                                max_base_layer_fee
                                </TooltipText>
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main={
                                                <SelectableText>
                                                                <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.006"
                                                                />
                                                                 
                                                                ETH
                                                </SelectableText>
                                }
                                subtitle={
                                                <NumericText
                                                                type="currency"
                                                                value="2.472"
                                                />
                                }
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                base_layer
                                 ETH 
                                balance_before
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main={
                                                <SelectableText>
                                                                <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.198937"
                                                                />
                                                                 
                                                                ETH
                                                </SelectableText>
                                }
                                subtitle={
                                                <NumericText
                                                                type="currency"
                                                                value="81.962044"
                                                />
                                }
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                base_layer
                                 ETH 
                                balance_after
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main={
                                                <SelectableText>
                                                                <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.192937"
                                                                />
                                                                 
                                                                ETH
                                                </SelectableText>
                                }
                                subtitle={
                                                <NumericText
                                                                type="currency"
                                                                value="79.490044"
                                                />
                                }
                />
</Row>,
              <div>
                <Row
                                gutter={0}
                >
                                <style__StyledCol
                                                span={12}
                                >
                                                nahmii_available
                                                 ETH 
                                                balance_before
                                </style__StyledCol>
                </Row>
                <Row
                                gutter={0}
                >
                                <TransferDescriptionItem
                                                main={
                                                                <SelectableText>
                                                                                <NumericText
                                                                                                maxDecimalPlaces={18}
                                                                                                value="0.1"
                                                                                />
                                                                                 
                                                                                ETH
                                                                </SelectableText>
                                                }
                                                subtitle={
                                                                <NumericText
                                                                                type="currency"
                                                                                value="41.2"
                                                                />
                                                }
                                />
                </Row>
                <Row
                                gutter={0}
                >
                                <style__StyledCol
                                                span={12}
                                >
                                                nahmii_available
                                                 ETH 
                                                balance_after
                                </style__StyledCol>
                </Row>
                <Row
                                gutter={0}
                >
                                <TransferDescriptionItem
                                                main={
                                                                <SelectableText>
                                                                                <NumericText
                                                                                                maxDecimalPlaces={18}
                                                                                                value="0.1"
                                                                                />
                                                                                 
                                                                                ETH
                                                                </SelectableText>
                                                }
                                                subtitle={
                                                                <NumericText
                                                                                type="currency"
                                                                                value="41.2"
                                                                />
                                                }
                                />
                </Row>
</div>,
              false,
              <Row
                gutter={0}
>
                <style__HWPromptWrapper>
                                <Connect(HWPromptContainer) />
                </style__HWPromptWrapper>
                <div
                                style={
                                                Object {
                                                                "display": "flex",
                                                                "flexDirection": "column",
                                                                "marginTop": "2rem",
                                                              }
                                }
                >
                                <div
                                                style={
                                                                Object {
                                                                                "display": "flex",
                                                                                "flexDirection": "column",
                                                                              }
                                                }
                                >
                                                <span>
                                                                <Text
                                                                                large={true}
                                                                >
                                                                                waiting_for_deposit_to_be {"ratio":"1/2"} mined...
                                                                </Text>
                                                                <Icon
                                                                                style={
                                                                                                Object {
                                                                                                                "color": "white",
                                                                                                                "fontSize": "1.5rem",
                                                                                                                "marginLeft": "1rem",
                                                                                                              }
                                                                                }
                                                                                type="loading"
                                                                />
                                                </span>
                                                <a
                                                                onClick={[Function]}
                                                                role="link"
                                                                tabIndex={0}
                                                >
                                                                Track progress on Etherscan
                                                </a>
                                </div>
                </div>
</Row>,
              <SectionHeading
                style={
                                Object {
                                                "marginTop": "2rem",
                                                "maxWidth": "25rem",
                                              }
                }
>
                deposits_note
</SectionHeading>,
            ],
            "style": Object {
              "minWidth": "34rem",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  deposit
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "deposit",
                  "span": 12,
                },
                "ref": null,
                "rendered": "deposit",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main={
                                    <SelectableText>
                                                      <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0"
                                                      />
                                                       
                                                      ETH
                                    </SelectableText>
                  }
                  subtitle={
                                    <NumericText
                                                      type="currency"
                                                      value="0"
                                    />
                  }
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": <SelectableText>
                    <NumericText
                                        maxDecimalPlaces={18}
                                        value="0"
                    />
                     
                    ETH
</SelectableText>,
                  "subtitle": <NumericText
                    type="currency"
                    value="0"
/>,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  <TooltipText
                                    details="max_base_layer_fee_explain"
                  >
                                    max_base_layer_fee
                  </TooltipText>
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TooltipText
                    details="max_base_layer_fee_explain"
>
                    max_base_layer_fee
</TooltipText>,
                  "span": 12,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "max_base_layer_fee",
                    "details": "max_base_layer_fee_explain",
                  },
                  "ref": null,
                  "rendered": "max_base_layer_fee",
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main={
                                    <SelectableText>
                                                      <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.006"
                                                      />
                                                       
                                                      ETH
                                    </SelectableText>
                  }
                  subtitle={
                                    <NumericText
                                                      type="currency"
                                                      value="2.472"
                                    />
                  }
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": <SelectableText>
                    <NumericText
                                        maxDecimalPlaces={18}
                                        value="0.006"
                    />
                     
                    ETH
</SelectableText>,
                  "subtitle": <NumericText
                    type="currency"
                    value="2.472"
/>,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  base_layer
                   ETH 
                  balance_before
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "base_layer",
                    " ETH ",
                    "balance_before",
                  ],
                  "span": 12,
                },
                "ref": null,
                "rendered": Array [
                  "base_layer",
                  " ETH ",
                  "balance_before",
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main={
                                    <SelectableText>
                                                      <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.198937"
                                                      />
                                                       
                                                      ETH
                                    </SelectableText>
                  }
                  subtitle={
                                    <NumericText
                                                      type="currency"
                                                      value="81.962044"
                                    />
                  }
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": <SelectableText>
                    <NumericText
                                        maxDecimalPlaces={18}
                                        value="0.198937"
                    />
                     
                    ETH
</SelectableText>,
                  "subtitle": <NumericText
                    type="currency"
                    value="81.962044"
/>,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  base_layer
                   ETH 
                  balance_after
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "base_layer",
                    " ETH ",
                    "balance_after",
                  ],
                  "span": 12,
                },
                "ref": null,
                "rendered": Array [
                  "base_layer",
                  " ETH ",
                  "balance_after",
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main={
                                    <SelectableText>
                                                      <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.192937"
                                                      />
                                                       
                                                      ETH
                                    </SelectableText>
                  }
                  subtitle={
                                    <NumericText
                                                      type="currency"
                                                      value="79.490044"
                                    />
                  }
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": <SelectableText>
                    <NumericText
                                        maxDecimalPlaces={18}
                                        value="0.192937"
                    />
                     
                    ETH
</SelectableText>,
                  "subtitle": <NumericText
                    type="currency"
                    value="79.490044"
/>,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Row
                    gutter={0}
>
                    <style__StyledCol
                                        span={12}
                    >
                                        nahmii_available
                                         ETH 
                                        balance_before
                    </style__StyledCol>
</Row>,
                  <Row
                    gutter={0}
>
                    <TransferDescriptionItem
                                        main={
                                                            <SelectableText>
                                                                                <NumericText
                                                                                                    maxDecimalPlaces={18}
                                                                                                    value="0.1"
                                                                                />
                                                                                 
                                                                                ETH
                                                            </SelectableText>
                                        }
                                        subtitle={
                                                            <NumericText
                                                                                type="currency"
                                                                                value="41.2"
                                                            />
                                        }
                    />
</Row>,
                  <Row
                    gutter={0}
>
                    <style__StyledCol
                                        span={12}
                    >
                                        nahmii_available
                                         ETH 
                                        balance_after
                    </style__StyledCol>
</Row>,
                  <Row
                    gutter={0}
>
                    <TransferDescriptionItem
                                        main={
                                                            <SelectableText>
                                                                                <NumericText
                                                                                                    maxDecimalPlaces={18}
                                                                                                    value="0.1"
                                                                                />
                                                                                 
                                                                                ETH
                                                            </SelectableText>
                                        }
                                        subtitle={
                                                            <NumericText
                                                                                type="currency"
                                                                                value="41.2"
                                                            />
                                        }
                    />
</Row>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <style__StyledCol
                      span={12}
>
                      nahmii_available
                       ETH 
                      balance_before
</style__StyledCol>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "nahmii_available",
                        " ETH ",
                        "balance_before",
                      ],
                      "span": 12,
                    },
                    "ref": null,
                    "rendered": Array [
                      "nahmii_available",
                      " ETH ",
                      "balance_before",
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TransferDescriptionItem
                      main={
                                            <SelectableText>
                                                                  <NumericText
                                                                                        maxDecimalPlaces={18}
                                                                                        value="0.1"
                                                                  />
                                                                   
                                                                  ETH
                                            </SelectableText>
                      }
                      subtitle={
                                            <NumericText
                                                                  type="currency"
                                                                  value="41.2"
                                            />
                      }
/>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "main": <SelectableText>
                        <NumericText
                                                maxDecimalPlaces={18}
                                                value="0.1"
                        />
                         
                        ETH
</SelectableText>,
                      "subtitle": <NumericText
                        type="currency"
                        value="41.2"
/>,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <style__StyledCol
                      span={12}
>
                      nahmii_available
                       ETH 
                      balance_after
</style__StyledCol>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "nahmii_available",
                        " ETH ",
                        "balance_after",
                      ],
                      "span": 12,
                    },
                    "ref": null,
                    "rendered": Array [
                      "nahmii_available",
                      " ETH ",
                      "balance_after",
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TransferDescriptionItem
                      main={
                                            <SelectableText>
                                                                  <NumericText
                                                                                        maxDecimalPlaces={18}
                                                                                        value="0.1"
                                                                  />
                                                                   
                                                                  ETH
                                            </SelectableText>
                      }
                      subtitle={
                                            <NumericText
                                                                  type="currency"
                                                                  value="41.2"
                                            />
                      }
/>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "main": <SelectableText>
                        <NumericText
                                                maxDecimalPlaces={18}
                                                value="0.1"
                        />
                         
                        ETH
</SelectableText>,
                      "subtitle": <NumericText
                        type="currency"
                        value="41.2"
/>,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <style__HWPromptWrapper>
                    <Connect(HWPromptContainer) />
</style__HWPromptWrapper>,
                  <div
                    style={
                                        Object {
                                                            "display": "flex",
                                                            "flexDirection": "column",
                                                            "marginTop": "2rem",
                                                          }
                    }
>
                    <div
                                        style={
                                                            Object {
                                                                                "display": "flex",
                                                                                "flexDirection": "column",
                                                                              }
                                        }
                    >
                                        <span>
                                                            <Text
                                                                                large={true}
                                                            >
                                                                                waiting_for_deposit_to_be {"ratio":"1/2"} mined...
                                                            </Text>
                                                            <Icon
                                                                                style={
                                                                                                    Object {
                                                                                                                        "color": "white",
                                                                                                                        "fontSize": "1.5rem",
                                                                                                                        "marginLeft": "1rem",
                                                                                                                      }
                                                                                }
                                                                                type="loading"
                                                            />
                                        </span>
                                        <a
                                                            onClick={[Function]}
                                                            role="link"
                                                            tabIndex={0}
                                        >
                                                            Track progress on Etherscan
                                        </a>
                    </div>
</div>,
                ],
                "gutter": 0,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Connect(HWPromptContainer) />,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      style={
                                            Object {
                                                                  "display": "flex",
                                                                  "flexDirection": "column",
                                                                }
                      }
>
                      <span>
                                            <Text
                                                                  large={true}
                                            >
                                                                  waiting_for_deposit_to_be {"ratio":"1/2"} mined...
                                            </Text>
                                            <Icon
                                                                  style={
                                                                                        Object {
                                                                                                              "color": "white",
                                                                                                              "fontSize": "1.5rem",
                                                                                                              "marginLeft": "1rem",
                                                                                                            }
                                                                  }
                                                                  type="loading"
                                            />
                      </span>
                      <a
                                            onClick={[Function]}
                                            role="link"
                                            tabIndex={0}
                      >
                                            Track progress on Etherscan
                      </a>
</div>,
                    "style": Object {
                      "display": "flex",
                      "flexDirection": "column",
                      "marginTop": "2rem",
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <span>
                          <Text
                                                    large={true}
                          >
                                                    waiting_for_deposit_to_be {"ratio":"1/2"} mined...
                          </Text>
                          <Icon
                                                    style={
                                                                              Object {
                                                                                                        "color": "white",
                                                                                                        "fontSize": "1.5rem",
                                                                                                        "marginLeft": "1rem",
                                                                                                      }
                                                    }
                                                    type="loading"
                          />
</span>,
                        <a
                          onClick={[Function]}
                          role="link"
                          tabIndex={0}
>
                          Track progress on Etherscan
</a>,
                      ],
                      "style": Object {
                        "display": "flex",
                        "flexDirection": "column",
                      },
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <Text
                              large={true}
>
                              waiting_for_deposit_to_be {"ratio":"1/2"} mined...
</Text>,
                            <Icon
                              style={
                                                            Object {
                                                                                          "color": "white",
                                                                                          "fontSize": "1.5rem",
                                                                                          "marginLeft": "1rem",
                                                                                        }
                              }
                              type="loading"
/>,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": "waiting_for_deposit_to_be {\\"ratio\\":\\"1/2\\"} mined...",
                              "large": true,
                            },
                            "ref": null,
                            "rendered": "waiting_for_deposit_to_be {\\"ratio\\":\\"1/2\\"} mined...",
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "style": Object {
                                "color": "white",
                                "fontSize": "1.5rem",
                                "marginLeft": "1rem",
                              },
                              "type": "loading",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                        ],
                        "type": "span",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Track progress on Etherscan",
                          "onClick": [Function],
                          "role": "link",
                          "tabIndex": 0,
                        },
                        "ref": null,
                        "rendered": "Track progress on Etherscan",
                        "type": "a",
                      },
                    ],
                    "type": "div",
                  },
                  "type": "div",
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "deposits_note",
                "style": Object {
                  "marginTop": "2rem",
                  "maxWidth": "25rem",
                },
              },
              "ref": null,
              "rendered": "deposits_note",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          style={
                    Object {
                              "display": "flex",
                              "flex": "1",
                              "flexWrap": "wrap",
                              "marginTop": "0.5rem",
                            }
          }
>
          <div
                    style={
                              Object {
                                        "flex": "1",
                                        "marginBottom": "3rem",
                                        "marginRight": "2rem",
                                      }
                    }
          >
                    <Form__FlexForm>
                              <Form__FormItem
                                        colon={false}
                                        label={
                                                  <Form__FormItemLabel>
                                                            select_asset_to_deposit
                                                  </Form__FormItemLabel>
                                        }
                              >
                                        <style__Image
                                                  alt="logo"
                                                  onError={[Function]}
                                                  src="/public/images/assets/ETH.svg"
                                        />
                                        <Select
                                                  defaultValue="ETH"
                                                  onSelect={[Function]}
                                                  style={
                                                            Object {
                                                                      "paddingLeft": "0.5rem",
                                                                    }
                                                  }
                                        >
                                                  <Option
                                                            value="ETH"
                                                  >
                                                            ETH
                                                  </Option>
                                                  <Option
                                                            value="BOKKY"
                                                  >
                                                            BOKKY
                                                  </Option>
                                        </Select>
                              </Form__FormItem>
                              <Form__FormItem
                                        colon={false}
                                        help={
                                                  <HelperTextComponent
                                                            left="$0.00"
                                                            right="usd"
                                                  />
                                        }
                                        label={
                                                  <Form__FormItemLabel>
                                                            enter_amount
                                                  </Form__FormItemLabel>
                                        }
                              >
                                        <Input
                                                  defaultValue="0"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  value="0"
                                        />
                              </Form__FormItem>
                              <GasOptions
                                        defaultGasLimit={600000}
                                        defaultGasPrice={10}
                                        defaultOption="average"
                                        gasStatistics={undefined}
                                        intl={
                                                  Object {
                                                            "formatMessage": [Function],
                                                            "formatNumber": [Function],
                                                          }
                                        }
                                        onChange={[Function]}
                              />
                              <style__DollarPrice>
                                        1 ETH = 
                                        <style__StyledNumericText
                                                  type="currency"
                                                  value="412"
                                        />
                              </style__DollarPrice>
                    </Form__FlexForm>
          </div>
          <div
                    style={
                              Object {
                                        "minWidth": "34rem",
                                      }
                    }
          >
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        deposit
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main={
                                                  <SelectableText>
                                                            <NumericText
                                                                      maxDecimalPlaces={18}
                                                                      value="0"
                                                            />
                                                             
                                                            ETH
                                                  </SelectableText>
                                        }
                                        subtitle={
                                                  <NumericText
                                                            type="currency"
                                                            value="0"
                                                  />
                                        }
                              />
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        <TooltipText
                                                  details="max_base_layer_fee_explain"
                                        >
                                                  max_base_layer_fee
                                        </TooltipText>
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main={
                                                  <SelectableText>
                                                            <NumericText
                                                                      maxDecimalPlaces={18}
                                                                      value="0.006"
                                                            />
                                                             
                                                            ETH
                                                  </SelectableText>
                                        }
                                        subtitle={
                                                  <NumericText
                                                            type="currency"
                                                            value="2.472"
                                                  />
                                        }
                              />
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        base_layer
                                         ETH 
                                        balance_before
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main={
                                                  <SelectableText>
                                                            <NumericText
                                                                      maxDecimalPlaces={18}
                                                                      value="0.198937"
                                                            />
                                                             
                                                            ETH
                                                  </SelectableText>
                                        }
                                        subtitle={
                                                  <NumericText
                                                            type="currency"
                                                            value="81.962044"
                                                  />
                                        }
                              />
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        base_layer
                                         ETH 
                                        balance_after
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main={
                                                  <SelectableText>
                                                            <NumericText
                                                                      maxDecimalPlaces={18}
                                                                      value="0.192937"
                                                            />
                                                             
                                                            ETH
                                                  </SelectableText>
                                        }
                                        subtitle={
                                                  <NumericText
                                                            type="currency"
                                                            value="79.490044"
                                                  />
                                        }
                              />
                    </Row>
                    <div>
                              <Row
                                        gutter={0}
                              >
                                        <style__StyledCol
                                                  span={12}
                                        >
                                                  nahmii_available
                                                   ETH 
                                                  balance_before
                                        </style__StyledCol>
                              </Row>
                              <Row
                                        gutter={0}
                              >
                                        <TransferDescriptionItem
                                                  main={
                                                            <SelectableText>
                                                                      <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.1"
                                                                      />
                                                                       
                                                                      ETH
                                                            </SelectableText>
                                                  }
                                                  subtitle={
                                                            <NumericText
                                                                      type="currency"
                                                                      value="41.2"
                                                            />
                                                  }
                                        />
                              </Row>
                              <Row
                                        gutter={0}
                              >
                                        <style__StyledCol
                                                  span={12}
                                        >
                                                  nahmii_available
                                                   ETH 
                                                  balance_after
                                        </style__StyledCol>
                              </Row>
                              <Row
                                        gutter={0}
                              >
                                        <TransferDescriptionItem
                                                  main={
                                                            <SelectableText>
                                                                      <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.1"
                                                                      />
                                                                       
                                                                      ETH
                                                            </SelectableText>
                                                  }
                                                  subtitle={
                                                            <NumericText
                                                                      type="currency"
                                                                      value="41.2"
                                                            />
                                                  }
                                        />
                              </Row>
                    </div>
                    <Row
                              gutter={0}
                    >
                              <style__HWPromptWrapper>
                                        <Connect(HWPromptContainer) />
                              </style__HWPromptWrapper>
                              <div
                                        style={
                                                  Object {
                                                            "display": "flex",
                                                            "flexDirection": "column",
                                                            "marginTop": "2rem",
                                                          }
                                        }
                              >
                                        <div
                                                  style={
                                                            Object {
                                                                      "display": "flex",
                                                                      "flexDirection": "column",
                                                                    }
                                                  }
                                        >
                                                  <span>
                                                            <Text
                                                                      large={true}
                                                            >
                                                                      waiting_for_deposit_to_be {"ratio":"1/2"} mined...
                                                            </Text>
                                                            <Icon
                                                                      style={
                                                                                Object {
                                                                                          "color": "white",
                                                                                          "fontSize": "1.5rem",
                                                                                          "marginLeft": "1rem",
                                                                                        }
                                                                      }
                                                                      type="loading"
                                                            />
                                                  </span>
                                                  <a
                                                            onClick={[Function]}
                                                            role="link"
                                                            tabIndex={0}
                                                  >
                                                            Track progress on Etherscan
                                                  </a>
                                        </div>
                              </div>
                    </Row>
                    <SectionHeading
                              style={
                                        Object {
                                                  "marginTop": "2rem",
                                                  "maxWidth": "25rem",
                                                }
                              }
                    >
                              deposits_note
                    </SectionHeading>
          </div>
</div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              style={
                            Object {
                                          "flex": "1",
                                          "marginBottom": "3rem",
                                          "marginRight": "2rem",
                                        }
              }
>
              <Form__FlexForm>
                            <Form__FormItem
                                          colon={false}
                                          label={
                                                        <Form__FormItemLabel>
                                                                      select_asset_to_deposit
                                                        </Form__FormItemLabel>
                                          }
                            >
                                          <style__Image
                                                        alt="logo"
                                                        onError={[Function]}
                                                        src="/public/images/assets/ETH.svg"
                                          />
                                          <Select
                                                        defaultValue="ETH"
                                                        onSelect={[Function]}
                                                        style={
                                                                      Object {
                                                                                    "paddingLeft": "0.5rem",
                                                                                  }
                                                        }
                                          >
                                                        <Option
                                                                      value="ETH"
                                                        >
                                                                      ETH
                                                        </Option>
                                                        <Option
                                                                      value="BOKKY"
                                                        >
                                                                      BOKKY
                                                        </Option>
                                          </Select>
                            </Form__FormItem>
                            <Form__FormItem
                                          colon={false}
                                          help={
                                                        <HelperTextComponent
                                                                      left="$0.00"
                                                                      right="usd"
                                                        />
                                          }
                                          label={
                                                        <Form__FormItemLabel>
                                                                      enter_amount
                                                        </Form__FormItemLabel>
                                          }
                            >
                                          <Input
                                                        defaultValue="0"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        value="0"
                                          />
                            </Form__FormItem>
                            <GasOptions
                                          defaultGasLimit={600000}
                                          defaultGasPrice={10}
                                          defaultOption="average"
                                          gasStatistics={undefined}
                                          intl={
                                                        Object {
                                                                      "formatMessage": [Function],
                                                                      "formatNumber": [Function],
                                                                    }
                                          }
                                          onChange={[Function]}
                            />
                            <style__DollarPrice>
                                          1 ETH = 
                                          <style__StyledNumericText
                                                        type="currency"
                                                        value="412"
                                          />
                            </style__DollarPrice>
              </Form__FlexForm>
</div>,
            <div
              style={
                            Object {
                                          "minWidth": "34rem",
                                        }
              }
>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          deposit
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main={
                                                        <SelectableText>
                                                                      <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0"
                                                                      />
                                                                       
                                                                      ETH
                                                        </SelectableText>
                                          }
                                          subtitle={
                                                        <NumericText
                                                                      type="currency"
                                                                      value="0"
                                                        />
                                          }
                            />
              </Row>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          <TooltipText
                                                        details="max_base_layer_fee_explain"
                                          >
                                                        max_base_layer_fee
                                          </TooltipText>
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main={
                                                        <SelectableText>
                                                                      <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.006"
                                                                      />
                                                                       
                                                                      ETH
                                                        </SelectableText>
                                          }
                                          subtitle={
                                                        <NumericText
                                                                      type="currency"
                                                                      value="2.472"
                                                        />
                                          }
                            />
              </Row>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          base_layer
                                           ETH 
                                          balance_before
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main={
                                                        <SelectableText>
                                                                      <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.198937"
                                                                      />
                                                                       
                                                                      ETH
                                                        </SelectableText>
                                          }
                                          subtitle={
                                                        <NumericText
                                                                      type="currency"
                                                                      value="81.962044"
                                                        />
                                          }
                            />
              </Row>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          base_layer
                                           ETH 
                                          balance_after
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main={
                                                        <SelectableText>
                                                                      <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.192937"
                                                                      />
                                                                       
                                                                      ETH
                                                        </SelectableText>
                                          }
                                          subtitle={
                                                        <NumericText
                                                                      type="currency"
                                                                      value="79.490044"
                                                        />
                                          }
                            />
              </Row>
              <div>
                            <Row
                                          gutter={0}
                            >
                                          <style__StyledCol
                                                        span={12}
                                          >
                                                        nahmii_available
                                                         ETH 
                                                        balance_before
                                          </style__StyledCol>
                            </Row>
                            <Row
                                          gutter={0}
                            >
                                          <TransferDescriptionItem
                                                        main={
                                                                      <SelectableText>
                                                                                    <NumericText
                                                                                                  maxDecimalPlaces={18}
                                                                                                  value="0.1"
                                                                                    />
                                                                                     
                                                                                    ETH
                                                                      </SelectableText>
                                                        }
                                                        subtitle={
                                                                      <NumericText
                                                                                    type="currency"
                                                                                    value="41.2"
                                                                      />
                                                        }
                                          />
                            </Row>
                            <Row
                                          gutter={0}
                            >
                                          <style__StyledCol
                                                        span={12}
                                          >
                                                        nahmii_available
                                                         ETH 
                                                        balance_after
                                          </style__StyledCol>
                            </Row>
                            <Row
                                          gutter={0}
                            >
                                          <TransferDescriptionItem
                                                        main={
                                                                      <SelectableText>
                                                                                    <NumericText
                                                                                                  maxDecimalPlaces={18}
                                                                                                  value="0.1"
                                                                                    />
                                                                                     
                                                                                    ETH
                                                                      </SelectableText>
                                                        }
                                                        subtitle={
                                                                      <NumericText
                                                                                    type="currency"
                                                                                    value="41.2"
                                                                      />
                                                        }
                                          />
                            </Row>
              </div>
              <Row
                            gutter={0}
              >
                            <style__HWPromptWrapper>
                                          <Connect(HWPromptContainer) />
                            </style__HWPromptWrapper>
                            <div
                                          style={
                                                        Object {
                                                                      "display": "flex",
                                                                      "flexDirection": "column",
                                                                      "marginTop": "2rem",
                                                                    }
                                          }
                            >
                                          <div
                                                        style={
                                                                      Object {
                                                                                    "display": "flex",
                                                                                    "flexDirection": "column",
                                                                                  }
                                                        }
                                          >
                                                        <span>
                                                                      <Text
                                                                                    large={true}
                                                                      >
                                                                                    waiting_for_deposit_to_be {"ratio":"1/2"} mined...
                                                                      </Text>
                                                                      <Icon
                                                                                    style={
                                                                                                  Object {
                                                                                                                "color": "white",
                                                                                                                "fontSize": "1.5rem",
                                                                                                                "marginLeft": "1rem",
                                                                                                              }
                                                                                    }
                                                                                    type="loading"
                                                                      />
                                                        </span>
                                                        <a
                                                                      onClick={[Function]}
                                                                      role="link"
                                                                      tabIndex={0}
                                                        >
                                                                      Track progress on Etherscan
                                                        </a>
                                          </div>
                            </div>
              </Row>
              <SectionHeading
                            style={
                                          Object {
                                                        "marginTop": "2rem",
                                                        "maxWidth": "25rem",
                                                      }
                            }
              >
                            deposits_note
              </SectionHeading>
</div>,
          ],
          "style": Object {
            "display": "flex",
            "flex": "1",
            "flexWrap": "wrap",
            "marginTop": "0.5rem",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Form__FlexForm>
                <Form__FormItem
                                colon={false}
                                label={
                                                <Form__FormItemLabel>
                                                                select_asset_to_deposit
                                                </Form__FormItemLabel>
                                }
                >
                                <style__Image
                                                alt="logo"
                                                onError={[Function]}
                                                src="/public/images/assets/ETH.svg"
                                />
                                <Select
                                                defaultValue="ETH"
                                                onSelect={[Function]}
                                                style={
                                                                Object {
                                                                                "paddingLeft": "0.5rem",
                                                                              }
                                                }
                                >
                                                <Option
                                                                value="ETH"
                                                >
                                                                ETH
                                                </Option>
                                                <Option
                                                                value="BOKKY"
                                                >
                                                                BOKKY
                                                </Option>
                                </Select>
                </Form__FormItem>
                <Form__FormItem
                                colon={false}
                                help={
                                                <HelperTextComponent
                                                                left="$0.00"
                                                                right="usd"
                                                />
                                }
                                label={
                                                <Form__FormItemLabel>
                                                                enter_amount
                                                </Form__FormItemLabel>
                                }
                >
                                <Input
                                                defaultValue="0"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value="0"
                                />
                </Form__FormItem>
                <GasOptions
                                defaultGasLimit={600000}
                                defaultGasPrice={10}
                                defaultOption="average"
                                gasStatistics={undefined}
                                intl={
                                                Object {
                                                                "formatMessage": [Function],
                                                                "formatNumber": [Function],
                                                              }
                                }
                                onChange={[Function]}
                />
                <style__DollarPrice>
                                1 ETH = 
                                <style__StyledNumericText
                                                type="currency"
                                                value="412"
                                />
                </style__DollarPrice>
</Form__FlexForm>,
              "style": Object {
                "flex": "1",
                "marginBottom": "3rem",
                "marginRight": "2rem",
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Form__FormItem
                    colon={false}
                    label={
                                        <Form__FormItemLabel>
                                                            select_asset_to_deposit
                                        </Form__FormItemLabel>
                    }
>
                    <style__Image
                                        alt="logo"
                                        onError={[Function]}
                                        src="/public/images/assets/ETH.svg"
                    />
                    <Select
                                        defaultValue="ETH"
                                        onSelect={[Function]}
                                        style={
                                                            Object {
                                                                                "paddingLeft": "0.5rem",
                                                                              }
                                        }
                    >
                                        <Option
                                                            value="ETH"
                                        >
                                                            ETH
                                        </Option>
                                        <Option
                                                            value="BOKKY"
                                        >
                                                            BOKKY
                                        </Option>
                    </Select>
</Form__FormItem>,
                  <Form__FormItem
                    colon={false}
                    help={
                                        <HelperTextComponent
                                                            left="$0.00"
                                                            right="usd"
                                        />
                    }
                    label={
                                        <Form__FormItemLabel>
                                                            enter_amount
                                        </Form__FormItemLabel>
                    }
>
                    <Input
                                        defaultValue="0"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        value="0"
                    />
</Form__FormItem>,
                  <GasOptions
                    defaultGasLimit={600000}
                    defaultGasPrice={10}
                    defaultOption="average"
                    gasStatistics={undefined}
                    intl={
                                        Object {
                                                            "formatMessage": [Function],
                                                            "formatNumber": [Function],
                                                          }
                    }
                    onChange={[Function]}
/>,
                  <style__DollarPrice>
                    1 ETH = 
                    <style__StyledNumericText
                                        type="currency"
                                        value="412"
                    />
</style__DollarPrice>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <style__Image
                        alt="logo"
                        onError={[Function]}
                        src="/public/images/assets/ETH.svg"
/>,
                      <Select
                        defaultValue="ETH"
                        onSelect={[Function]}
                        style={
                                                Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                        }
>
                        <Option
                                                value="ETH"
                        >
                                                ETH
                        </Option>
                        <Option
                                                value="BOKKY"
                        >
                                                BOKKY
                        </Option>
</Select>,
                    ],
                    "colon": false,
                    "label": <Form__FormItemLabel>
                      select_asset_to_deposit
</Form__FormItemLabel>,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "alt": "logo",
                        "onError": [Function],
                        "src": "/public/images/assets/ETH.svg",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <Option
                            value="ETH"
>
                            ETH
</Option>,
                          <Option
                            value="BOKKY"
>
                            BOKKY
</Option>,
                        ],
                        "defaultValue": "ETH",
                        "onSelect": [Function],
                        "style": Object {
                          "paddingLeft": "0.5rem",
                        },
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": "ETH",
                          "nodeType": "class",
                          "props": Object {
                            "children": "ETH",
                            "value": "ETH",
                          },
                          "ref": null,
                          "rendered": "ETH",
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": "BOKKY",
                          "nodeType": "class",
                          "props": Object {
                            "children": "BOKKY",
                            "value": "BOKKY",
                          },
                          "ref": null,
                          "rendered": "BOKKY",
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Input
                      defaultValue="0"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      value="0"
/>,
                    "colon": false,
                    "help": <HelperTextComponent
                      left="$0.00"
                      right="usd"
/>,
                    "label": <Form__FormItemLabel>
                      enter_amount
</Form__FormItemLabel>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "defaultValue": "0",
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "value": "0",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "defaultGasLimit": 600000,
                    "defaultGasPrice": 10,
                    "defaultOption": "average",
                    "gasStatistics": undefined,
                    "intl": Object {
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                    },
                    "onChange": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "1 ETH = ",
                      <style__StyledNumericText
                        type="currency"
                        value="412"
/>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    "1 ETH = ",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "type": "currency",
                        "value": "412",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    deposit
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main={
                                                      <SelectableText>
                                                                        <NumericText
                                                                                          maxDecimalPlaces={18}
                                                                                          value="0"
                                                                        />
                                                                         
                                                                        ETH
                                                      </SelectableText>
                                    }
                                    subtitle={
                                                      <NumericText
                                                                        type="currency"
                                                                        value="0"
                                                      />
                                    }
                  />
</Row>,
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    <TooltipText
                                                      details="max_base_layer_fee_explain"
                                    >
                                                      max_base_layer_fee
                                    </TooltipText>
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main={
                                                      <SelectableText>
                                                                        <NumericText
                                                                                          maxDecimalPlaces={18}
                                                                                          value="0.006"
                                                                        />
                                                                         
                                                                        ETH
                                                      </SelectableText>
                                    }
                                    subtitle={
                                                      <NumericText
                                                                        type="currency"
                                                                        value="2.472"
                                                      />
                                    }
                  />
</Row>,
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    base_layer
                                     ETH 
                                    balance_before
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main={
                                                      <SelectableText>
                                                                        <NumericText
                                                                                          maxDecimalPlaces={18}
                                                                                          value="0.198937"
                                                                        />
                                                                         
                                                                        ETH
                                                      </SelectableText>
                                    }
                                    subtitle={
                                                      <NumericText
                                                                        type="currency"
                                                                        value="81.962044"
                                                      />
                                    }
                  />
</Row>,
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    base_layer
                                     ETH 
                                    balance_after
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main={
                                                      <SelectableText>
                                                                        <NumericText
                                                                                          maxDecimalPlaces={18}
                                                                                          value="0.192937"
                                                                        />
                                                                         
                                                                        ETH
                                                      </SelectableText>
                                    }
                                    subtitle={
                                                      <NumericText
                                                                        type="currency"
                                                                        value="79.490044"
                                                      />
                                    }
                  />
</Row>,
                <div>
                  <Row
                                    gutter={0}
                  >
                                    <style__StyledCol
                                                      span={12}
                                    >
                                                      nahmii_available
                                                       ETH 
                                                      balance_before
                                    </style__StyledCol>
                  </Row>
                  <Row
                                    gutter={0}
                  >
                                    <TransferDescriptionItem
                                                      main={
                                                                        <SelectableText>
                                                                                          <NumericText
                                                                                                            maxDecimalPlaces={18}
                                                                                                            value="0.1"
                                                                                          />
                                                                                           
                                                                                          ETH
                                                                        </SelectableText>
                                                      }
                                                      subtitle={
                                                                        <NumericText
                                                                                          type="currency"
                                                                                          value="41.2"
                                                                        />
                                                      }
                                    />
                  </Row>
                  <Row
                                    gutter={0}
                  >
                                    <style__StyledCol
                                                      span={12}
                                    >
                                                      nahmii_available
                                                       ETH 
                                                      balance_after
                                    </style__StyledCol>
                  </Row>
                  <Row
                                    gutter={0}
                  >
                                    <TransferDescriptionItem
                                                      main={
                                                                        <SelectableText>
                                                                                          <NumericText
                                                                                                            maxDecimalPlaces={18}
                                                                                                            value="0.1"
                                                                                          />
                                                                                           
                                                                                          ETH
                                                                        </SelectableText>
                                                      }
                                                      subtitle={
                                                                        <NumericText
                                                                                          type="currency"
                                                                                          value="41.2"
                                                                        />
                                                      }
                                    />
                  </Row>
</div>,
                false,
                <Row
                  gutter={0}
>
                  <style__HWPromptWrapper>
                                    <Connect(HWPromptContainer) />
                  </style__HWPromptWrapper>
                  <div
                                    style={
                                                      Object {
                                                                        "display": "flex",
                                                                        "flexDirection": "column",
                                                                        "marginTop": "2rem",
                                                                      }
                                    }
                  >
                                    <div
                                                      style={
                                                                        Object {
                                                                                          "display": "flex",
                                                                                          "flexDirection": "column",
                                                                                        }
                                                      }
                                    >
                                                      <span>
                                                                        <Text
                                                                                          large={true}
                                                                        >
                                                                                          waiting_for_deposit_to_be {"ratio":"1/2"} mined...
                                                                        </Text>
                                                                        <Icon
                                                                                          style={
                                                                                                            Object {
                                                                                                                              "color": "white",
                                                                                                                              "fontSize": "1.5rem",
                                                                                                                              "marginLeft": "1rem",
                                                                                                                            }
                                                                                          }
                                                                                          type="loading"
                                                                        />
                                                      </span>
                                                      <a
                                                                        onClick={[Function]}
                                                                        role="link"
                                                                        tabIndex={0}
                                                      >
                                                                        Track progress on Etherscan
                                                      </a>
                                    </div>
                  </div>
</Row>,
                <SectionHeading
                  style={
                                    Object {
                                                      "marginTop": "2rem",
                                                      "maxWidth": "25rem",
                                                    }
                  }
>
                  deposits_note
</SectionHeading>,
              ],
              "style": Object {
                "minWidth": "34rem",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    deposit
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "deposit",
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": "deposit",
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main={
                                        <SelectableText>
                                                            <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0"
                                                            />
                                                             
                                                            ETH
                                        </SelectableText>
                    }
                    subtitle={
                                        <NumericText
                                                            type="currency"
                                                            value="0"
                                        />
                    }
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": <SelectableText>
                      <NumericText
                                            maxDecimalPlaces={18}
                                            value="0"
                      />
                       
                      ETH
</SelectableText>,
                    "subtitle": <NumericText
                      type="currency"
                      value="0"
/>,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    <TooltipText
                                        details="max_base_layer_fee_explain"
                    >
                                        max_base_layer_fee
                    </TooltipText>
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TooltipText
                      details="max_base_layer_fee_explain"
>
                      max_base_layer_fee
</TooltipText>,
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "max_base_layer_fee",
                      "details": "max_base_layer_fee_explain",
                    },
                    "ref": null,
                    "rendered": "max_base_layer_fee",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main={
                                        <SelectableText>
                                                            <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.006"
                                                            />
                                                             
                                                            ETH
                                        </SelectableText>
                    }
                    subtitle={
                                        <NumericText
                                                            type="currency"
                                                            value="2.472"
                                        />
                    }
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": <SelectableText>
                      <NumericText
                                            maxDecimalPlaces={18}
                                            value="0.006"
                      />
                       
                      ETH
</SelectableText>,
                    "subtitle": <NumericText
                      type="currency"
                      value="2.472"
/>,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    base_layer
                     ETH 
                    balance_before
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "base_layer",
                      " ETH ",
                      "balance_before",
                    ],
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Array [
                    "base_layer",
                    " ETH ",
                    "balance_before",
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main={
                                        <SelectableText>
                                                            <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.198937"
                                                            />
                                                             
                                                            ETH
                                        </SelectableText>
                    }
                    subtitle={
                                        <NumericText
                                                            type="currency"
                                                            value="81.962044"
                                        />
                    }
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": <SelectableText>
                      <NumericText
                                            maxDecimalPlaces={18}
                                            value="0.198937"
                      />
                       
                      ETH
</SelectableText>,
                    "subtitle": <NumericText
                      type="currency"
                      value="81.962044"
/>,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    base_layer
                     ETH 
                    balance_after
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "base_layer",
                      " ETH ",
                      "balance_after",
                    ],
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Array [
                    "base_layer",
                    " ETH ",
                    "balance_after",
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main={
                                        <SelectableText>
                                                            <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.192937"
                                                            />
                                                             
                                                            ETH
                                        </SelectableText>
                    }
                    subtitle={
                                        <NumericText
                                                            type="currency"
                                                            value="79.490044"
                                        />
                    }
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": <SelectableText>
                      <NumericText
                                            maxDecimalPlaces={18}
                                            value="0.192937"
                      />
                       
                      ETH
</SelectableText>,
                    "subtitle": <NumericText
                      type="currency"
                      value="79.490044"
/>,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Row
                      gutter={0}
>
                      <style__StyledCol
                                            span={12}
                      >
                                            nahmii_available
                                             ETH 
                                            balance_before
                      </style__StyledCol>
</Row>,
                    <Row
                      gutter={0}
>
                      <TransferDescriptionItem
                                            main={
                                                                  <SelectableText>
                                                                                        <NumericText
                                                                                                              maxDecimalPlaces={18}
                                                                                                              value="0.1"
                                                                                        />
                                                                                         
                                                                                        ETH
                                                                  </SelectableText>
                                            }
                                            subtitle={
                                                                  <NumericText
                                                                                        type="currency"
                                                                                        value="41.2"
                                                                  />
                                            }
                      />
</Row>,
                    <Row
                      gutter={0}
>
                      <style__StyledCol
                                            span={12}
                      >
                                            nahmii_available
                                             ETH 
                                            balance_after
                      </style__StyledCol>
</Row>,
                    <Row
                      gutter={0}
>
                      <TransferDescriptionItem
                                            main={
                                                                  <SelectableText>
                                                                                        <NumericText
                                                                                                              maxDecimalPlaces={18}
                                                                                                              value="0.1"
                                                                                        />
                                                                                         
                                                                                        ETH
                                                                  </SelectableText>
                                            }
                                            subtitle={
                                                                  <NumericText
                                                                                        type="currency"
                                                                                        value="41.2"
                                                                  />
                                            }
                      />
</Row>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <style__StyledCol
                        span={12}
>
                        nahmii_available
                         ETH 
                        balance_before
</style__StyledCol>,
                      "gutter": 0,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          "nahmii_available",
                          " ETH ",
                          "balance_before",
                        ],
                        "span": 12,
                      },
                      "ref": null,
                      "rendered": Array [
                        "nahmii_available",
                        " ETH ",
                        "balance_before",
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <TransferDescriptionItem
                        main={
                                                <SelectableText>
                                                                        <NumericText
                                                                                                maxDecimalPlaces={18}
                                                                                                value="0.1"
                                                                        />
                                                                         
                                                                        ETH
                                                </SelectableText>
                        }
                        subtitle={
                                                <NumericText
                                                                        type="currency"
                                                                        value="41.2"
                                                />
                        }
/>,
                      "gutter": 0,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "main": <SelectableText>
                          <NumericText
                                                    maxDecimalPlaces={18}
                                                    value="0.1"
                          />
                           
                          ETH
</SelectableText>,
                        "subtitle": <NumericText
                          type="currency"
                          value="41.2"
/>,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <style__StyledCol
                        span={12}
>
                        nahmii_available
                         ETH 
                        balance_after
</style__StyledCol>,
                      "gutter": 0,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          "nahmii_available",
                          " ETH ",
                          "balance_after",
                        ],
                        "span": 12,
                      },
                      "ref": null,
                      "rendered": Array [
                        "nahmii_available",
                        " ETH ",
                        "balance_after",
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <TransferDescriptionItem
                        main={
                                                <SelectableText>
                                                                        <NumericText
                                                                                                maxDecimalPlaces={18}
                                                                                                value="0.1"
                                                                        />
                                                                         
                                                                        ETH
                                                </SelectableText>
                        }
                        subtitle={
                                                <NumericText
                                                                        type="currency"
                                                                        value="41.2"
                                                />
                        }
/>,
                      "gutter": 0,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "main": <SelectableText>
                          <NumericText
                                                    maxDecimalPlaces={18}
                                                    value="0.1"
                          />
                           
                          ETH
</SelectableText>,
                        "subtitle": <NumericText
                          type="currency"
                          value="41.2"
/>,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              false,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <style__HWPromptWrapper>
                      <Connect(HWPromptContainer) />
</style__HWPromptWrapper>,
                    <div
                      style={
                                            Object {
                                                                  "display": "flex",
                                                                  "flexDirection": "column",
                                                                  "marginTop": "2rem",
                                                                }
                      }
>
                      <div
                                            style={
                                                                  Object {
                                                                                        "display": "flex",
                                                                                        "flexDirection": "column",
                                                                                      }
                                            }
                      >
                                            <span>
                                                                  <Text
                                                                                        large={true}
                                                                  >
                                                                                        waiting_for_deposit_to_be {"ratio":"1/2"} mined...
                                                                  </Text>
                                                                  <Icon
                                                                                        style={
                                                                                                              Object {
                                                                                                                                    "color": "white",
                                                                                                                                    "fontSize": "1.5rem",
                                                                                                                                    "marginLeft": "1rem",
                                                                                                                                  }
                                                                                        }
                                                                                        type="loading"
                                                                  />
                                            </span>
                                            <a
                                                                  onClick={[Function]}
                                                                  role="link"
                                                                  tabIndex={0}
                                            >
                                                                  Track progress on Etherscan
                                            </a>
                      </div>
</div>,
                  ],
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Connect(HWPromptContainer) />,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <div
                        style={
                                                Object {
                                                                        "display": "flex",
                                                                        "flexDirection": "column",
                                                                      }
                        }
>
                        <span>
                                                <Text
                                                                        large={true}
                                                >
                                                                        waiting_for_deposit_to_be {"ratio":"1/2"} mined...
                                                </Text>
                                                <Icon
                                                                        style={
                                                                                                Object {
                                                                                                                        "color": "white",
                                                                                                                        "fontSize": "1.5rem",
                                                                                                                        "marginLeft": "1rem",
                                                                                                                      }
                                                                        }
                                                                        type="loading"
                                                />
                        </span>
                        <a
                                                onClick={[Function]}
                                                role="link"
                                                tabIndex={0}
                        >
                                                Track progress on Etherscan
                        </a>
</div>,
                      "style": Object {
                        "display": "flex",
                        "flexDirection": "column",
                        "marginTop": "2rem",
                      },
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <span>
                            <Text
                                                        large={true}
                            >
                                                        waiting_for_deposit_to_be {"ratio":"1/2"} mined...
                            </Text>
                            <Icon
                                                        style={
                                                                                    Object {
                                                                                                                "color": "white",
                                                                                                                "fontSize": "1.5rem",
                                                                                                                "marginLeft": "1rem",
                                                                                                              }
                                                        }
                                                        type="loading"
                            />
</span>,
                          <a
                            onClick={[Function]}
                            role="link"
                            tabIndex={0}
>
                            Track progress on Etherscan
</a>,
                        ],
                        "style": Object {
                          "display": "flex",
                          "flexDirection": "column",
                        },
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <Text
                                large={true}
>
                                waiting_for_deposit_to_be {"ratio":"1/2"} mined...
</Text>,
                              <Icon
                                style={
                                                                Object {
                                                                                                "color": "white",
                                                                                                "fontSize": "1.5rem",
                                                                                                "marginLeft": "1rem",
                                                                                              }
                                }
                                type="loading"
/>,
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {
                                "children": "waiting_for_deposit_to_be {\\"ratio\\":\\"1/2\\"} mined...",
                                "large": true,
                              },
                              "ref": null,
                              "rendered": "waiting_for_deposit_to_be {\\"ratio\\":\\"1/2\\"} mined...",
                              "type": [Function],
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "function",
                              "props": Object {
                                "style": Object {
                                  "color": "white",
                                  "fontSize": "1.5rem",
                                  "marginLeft": "1rem",
                                },
                                "type": "loading",
                              },
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                          ],
                          "type": "span",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Track progress on Etherscan",
                            "onClick": [Function],
                            "role": "link",
                            "tabIndex": 0,
                          },
                          "ref": null,
                          "rendered": "Track progress on Etherscan",
                          "type": "a",
                        },
                      ],
                      "type": "div",
                    },
                    "type": "div",
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "deposits_note",
                  "style": Object {
                    "marginTop": "2rem",
                    "maxWidth": "25rem",
                  },
                },
                "ref": null,
                "rendered": "deposits_note",
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<NahmiiDeposit /> should render correctly when completing a token deposit 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NahmiiDeposit
    currentNetwork={
        Object {
            "apiDomain": "api2.dev.hubii.net",
            "defaultNahmiiProvider": NahmiiProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "connection": Object {
                "url": "http://geth-ropsten.dev.hubii.net",
              },
              "ready": Promise {},
            },
            "identityServiceAppId": "appid",
            "identityServiceSecret": "secret",
            "nahmiiProvider": NahmiiProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "connection": Object {
                "url": "http://geth-ropsten.dev.hubii.net",
              },
              "ready": Promise {},
            },
            "name": "ropsten",
            "provider": FallbackProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "_providers": Array [
                InfuraProvider {
                  "_balances": Object {},
                  "_emitted": Object {
                    "block": -2,
                  },
                  "_events": Array [],
                  "_fastQueryDate": 0,
                  "_lastBlockNumber": -2,
                  "_network": Object {
                    "_defaultProvider": [Function],
                    "chainId": 3,
                    "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                    "name": "ropsten",
                  },
                  "_pollingInterval": 4000,
                  "apiAccessToken": null,
                  "connection": Object {
                    "url": "https://ropsten.infura.io/",
                  },
                  "ready": Promise {},
                },
                EtherscanProvider {
                  "_balances": Object {},
                  "_emitted": Object {
                    "block": -2,
                  },
                  "_events": Array [],
                  "_fastQueryDate": 0,
                  "_lastBlockNumber": -2,
                  "_network": Object {
                    "_defaultProvider": [Function],
                    "chainId": 3,
                    "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                    "name": "ropsten",
                  },
                  "_pollingInterval": 4000,
                  "apiKey": undefined,
                  "baseUrl": "https://api-ropsten.etherscan.io",
                  "ready": Promise {},
                },
              ],
              "ready": Promise {},
            },
            "walletApiEndpoint": [Function],
          }
    }
    currentWalletWithInfo={
        Immutable.Map {
            deviceId: "041ca8e96420e95a106e8c9bb3c9fb9e8c00d4b11cac562888c898000b5cec366c03a0f84574716fac6c7a7df47a925f0e30f5286546adf3179b5a08dc9d8e09da",
            address: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
            type: "lns",
            name: "lns",
            derivationPath: "m/44'/60'/0'/0",
            transactions: Immutable.Map {
                loading: false,
                error: null,
                transactions: Immutable.List [
                    Immutable.Map {
                        transfers: Immutable.Map {
                            single: "2111000000",
                            total: "3111000000",
                        },
                        created: "2018-12-17T01:59:03.718Z",
                        decimalAmount: "0.000000002111",
                        counterpartyAddress: "0x4231676a35483638796e2af8ed2af0a41b097524",
                        nonce: 21,
                        currency: "0x0000000000000000000000000000000000000000",
                        layer: "nahmii",
                        sender: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                    Immutable.Map {
                                        originId: "0",
                                        figure: Immutable.Map {
                                            currency: Immutable.Map {
                                                ct: "0x0000000000000000000000000000000000000000",
                                                id: "0",
                                            },
                                            amount: "4121100",
                                        },
                                    },
                                ],
                                single: Immutable.Map {
                                    currency: Immutable.Map {
                                        ct: "0x0000000000000000000000000000000000000000",
                                        id: "0",
                                    },
                                    amount: "2111000",
                                },
                            },
                            wallet: "0x4231676a35483638796e2af8ed2af0a41b097524",
                            nonce: 7,
                            balances: Immutable.Map {
                                current: "999995875778900",
                                previous: "999997988889900",
                            },
                        },
                        timestamp: "2018-12-17T01:59:03.776Z",
                        seals: Immutable.Map {
                            wallet: Immutable.Map {
                                hash: "0x57d9cf4ffc4b2aecce23d2e56083c7b437f5e105be74c1cd17d8522999b5d0be",
                                signature: Immutable.Map {
                                    s: "0x395b632dab03b34321c1aed7dcbac4a1b87582904d2898645b3ec90505c44348",
                                    r: "0x01cda7bddbc7c2194dd395aac73eaf1ca6760bfef83689c5a1240f936f0200d4",
                                    v: 28,
                                },
                            },
                            operator: Immutable.Map {
                                hash: "0x99c1a3a1cd8b15cdb969270f6e8f7fdce5b9c8377a00c38d800b9982c98eec5a",
                                signature: Immutable.Map {
                                    s: "0x129c9e071467ee98ddd799fa1ed7b3cbda11486955b9360afd22ce0ff4d91aab",
                                    r: "0x4d22165ff7382f998107a87e800a11581e7b99fa67ab613656706105157e5ab9",
                                    v: 28,
                                },
                            },
                        },
                        blockNumber: 4643058,
                        amount: "2111000000",
                        symbol: "ETH",
                        recipient: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                ],
                            },
                            wallet: "0x1c7429f62595097315289cebac1fdbda587ad512",
                            nonce: 4,
                            balances: Immutable.Map {
                                current: "10013111000000",
                                previous: "10011000000000",
                            },
                        },
                        type: "received",
                        updated: "2018-12-17T01:59:03.776Z",
                        id: "5c1702e78d9ea3000ea459d9",
                        operatorId: "0",
                        confirmed: true,
                    },
                    Immutable.Map {
                        decimalAmount: "0.0000000001",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780091,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x0000000000000000000000000000000000000000",
                        layer: "baseLayer",
                        sender: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        timestamp: "2018-08-06T02:32:00.000Z",
                        amount: "100000000",
                        symbol: "ETH",
                        recipient: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        type: "received",
                    },
                    Immutable.Map {
                        transfers: Immutable.Map {
                            single: "10000000000000000",
                            total: "10000000000000000",
                        },
                        created: "2018-11-16T22:40:54.951Z",
                        decimalAmount: "0.01",
                        counterpartyAddress: "0xc5768cdeda275fe5536147a3fbc8cfb6b0d8ac48",
                        nonce: 18,
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        layer: "nahmii",
                        sender: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                    Immutable.Map {
                                        originId: "0",
                                        figure: Immutable.Map {
                                            currency: Immutable.Map {
                                                ct: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                                                id: "0",
                                            },
                                            amount: "10000000000000",
                                        },
                                    },
                                ],
                                single: Immutable.Map {
                                    currency: Immutable.Map {
                                        ct: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                                        id: "0",
                                    },
                                    amount: "10000000000000",
                                },
                            },
                            wallet: "0x1c7429f62595097315289cebac1fdbda587ad512",
                            nonce: 3,
                            balances: Immutable.Map {
                                current: "89990000000000000",
                                previous: "100000000000000000",
                            },
                        },
                        timestamp: "2018-11-16T22:40:55.049Z",
                        seals: Immutable.Map {
                            wallet: Immutable.Map {
                                hash: "0x0b7d6d30e9665016246e6370e82579a35bc4d9c0cf88c65b38d538f7ad8ee828",
                                signature: Immutable.Map {
                                    s: "0x7d60c93b9037be6d880bbe86f258d0e371ad4015fc2528cf1312d924f9e76245",
                                    r: "0x9c11c2a5244a741f67837eb6efc1f12396c19d2490ff2bd872dbd9643a7c1013",
                                    v: 27,
                                },
                            },
                            operator: Immutable.Map {
                                hash: "0x92b0e8b3c705449eea1bce2e517468cec521e6451d4a7e6c4fe4c4efe7df6ab4",
                                signature: Immutable.Map {
                                    s: "0x09ad154d886899b36f15a2be68ddb61c15afe185acd498a9b6bb2577f317a942",
                                    r: "0x80d8f5e899f16c9a4abcc72d23399d4ddd3c08a29dae8233a46179ef54cc189c",
                                    v: 27,
                                },
                            },
                        },
                        blockNumber: 3780090,
                        amount: "10000000000000000",
                        symbol: "BOKKY",
                        recipient: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                ],
                            },
                            wallet: "0xc5768cdeda275fe5536147a3fbc8cfb6b0d8ac48",
                            nonce: 2,
                            balances: Immutable.Map {
                                current: "10000000000000000",
                                previous: "0",
                            },
                        },
                        type: "sent",
                        updated: "2018-11-16T22:40:55.049Z",
                        id: "5c16d4768d9ea3000ea45690",
                        operatorId: "0",
                        confirmed: true,
                    },
                    Immutable.Map {
                        decimalAmount: "0.000000000000000005",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780089,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        layer: "baseLayer",
                        sender: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        timestamp: "2018-08-06T02:32:00.000Z",
                        amount: "5",
                        symbol: "BOKKY",
                        recipient: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        type: "sent",
                    },
                ],
            },
            balances: Immutable.Map {
                baseLayer: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.198937",
                            currency: "0x0000000000000000000000000000000000000000",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.198937",
                                btc: "0.00198937",
                                usd: "81.962044",
                            },
                        },
                        Immutable.Map {
                            balance: "1.231288e-12",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "1.231288e-13",
                                btc: "1.231288e-15",
                                usd: "1.231288e-12",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1989370000001231288",
                        btc: "0.001989370000001231288",
                        usd: "81.962044000001231288",
                    },
                },
                nahmiiAvailable: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.113",
                        btc: "0.00113",
                        usd: "41.33",
                    },
                },
                nahmiiStaging: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1",
                        btc: "0.001",
                        usd: "41.2",
                    },
                },
                nahmiiStaged: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                    ],
                    total: Immutable.Map {
                        eth: "0",
                        btc: "0",
                        usd: "0",
                    },
                },
                nahmiiCombined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.2",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.2",
                                btc: "0.002",
                                usd: "82.4",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.213",
                        btc: "0.00213",
                        usd: "82.53",
                    },
                },
                combined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.398937",
                            currency: "0x0000000000000000000000000000000000000000",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.398937",
                                btc: "0.00398937",
                                usd: "164.362044",
                            },
                        },
                        Immutable.Map {
                            balance: "0.130000000001231288",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.0130000000001231288",
                                btc: "0.000130000000001231288",
                                usd: "0.130000000001231288",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.4119370000001231288",
                        btc: "0.004119370000001231288",
                        usd: "164.492044000001231288",
                    },
                },
            },
        }
    }
    depositStatus={
        Immutable.Map {
            depositingEth: false,
            approvingTokenDeposit: false,
            completingTokenDeposit: true,
            error: null,
        }
    }
    gasStatistics={
        Immutable.Map {
        }
    }
    goWalletDetails={[Function]}
    intl={
        Object {
            "formatMessage": [Function],
            "formatNumber": [Function],
          }
    }
    ledgerNanoSInfo={
        Immutable.Map {
            status: "disconnected",
            addresses: Immutable.Map {
            },
            id: null,
            confTxOnDevice: false,
        }
    }
    nahmiiDeposit={[Function]}
    prices={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    eth: 0.1,
                    btc: 0.001,
                    usd: 1,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x0000000000000000000000000000000000000000",
                    eth: 1,
                    btc: 0.01,
                    usd: 412,
                },
            ],
        }
    }
    supportedAssets={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    symbol: "My20",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    symbol: "HBT",
                    decimals: 15,
                    color: "0063A5",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    symbol: "SBT",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    symbol: "WETH",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    symbol: "BOKKY",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x0000000000000000000000000000000000000000",
                    symbol: "ETH",
                    decimals: 18,
                    color: "5C78E4",
                },
            ],
        }
    }
    trezorInfo={
        Immutable.Map {
            status: "disconnected",
            connected: false,
            addresses: Immutable.Map {
            },
            id: "ajlsdfkjas",
            confTxOnDevice: false,
        }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <div
        style={
                Object {
                        "display": "flex",
                        "flex": "1",
                        "flexWrap": "wrap",
                        "marginTop": "0.5rem",
                      }
        }
>
        <div
                style={
                        Object {
                                "flex": "1",
                                "marginBottom": "3rem",
                                "marginRight": "2rem",
                              }
                }
        >
                <Form__FlexForm>
                        <Form__FormItem
                                colon={false}
                                label={
                                        <Form__FormItemLabel>
                                                select_asset_to_deposit
                                        </Form__FormItemLabel>
                                }
                        >
                                <style__Image
                                        alt="logo"
                                        onError={[Function]}
                                        src="/public/images/assets/ETH.svg"
                                />
                                <Select
                                        defaultValue="ETH"
                                        onSelect={[Function]}
                                        style={
                                                Object {
                                                        "paddingLeft": "0.5rem",
                                                      }
                                        }
                                >
                                        <Option
                                                value="ETH"
                                        >
                                                ETH
                                        </Option>
                                        <Option
                                                value="BOKKY"
                                        >
                                                BOKKY
                                        </Option>
                                </Select>
                        </Form__FormItem>
                        <Form__FormItem
                                colon={false}
                                help={
                                        <HelperTextComponent
                                                left="$0.00"
                                                right="usd"
                                        />
                                }
                                label={
                                        <Form__FormItemLabel>
                                                enter_amount
                                        </Form__FormItemLabel>
                                }
                        >
                                <Input
                                        defaultValue="0"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        value="0"
                                />
                        </Form__FormItem>
                        <GasOptions
                                defaultGasLimit={600000}
                                defaultGasPrice={10}
                                defaultOption="average"
                                gasStatistics={undefined}
                                intl={
                                        Object {
                                                "formatMessage": [Function],
                                                "formatNumber": [Function],
                                              }
                                }
                                onChange={[Function]}
                        />
                        <style__DollarPrice>
                                1 ETH = 
                                <style__StyledNumericText
                                        type="currency"
                                        value="412"
                                />
                        </style__DollarPrice>
                </Form__FlexForm>
        </div>
        <div
                style={
                        Object {
                                "minWidth": "34rem",
                              }
                }
        >
                <Row
                        gutter={0}
                >
                        <style__StyledCol
                                span={12}
                        >
                                deposit
                        </style__StyledCol>
                </Row>
                <Row
                        gutter={0}
                >
                        <TransferDescriptionItem
                                main={
                                        <SelectableText>
                                                <NumericText
                                                        maxDecimalPlaces={18}
                                                        value="0"
                                                />
                                                 
                                                ETH
                                        </SelectableText>
                                }
                                subtitle={
                                        <NumericText
                                                type="currency"
                                                value="0"
                                        />
                                }
                        />
                </Row>
                <Row
                        gutter={0}
                >
                        <style__StyledCol
                                span={12}
                        >
                                <TooltipText
                                        details="max_base_layer_fee_explain"
                                >
                                        max_base_layer_fee
                                </TooltipText>
                        </style__StyledCol>
                </Row>
                <Row
                        gutter={0}
                >
                        <TransferDescriptionItem
                                main={
                                        <SelectableText>
                                                <NumericText
                                                        maxDecimalPlaces={18}
                                                        value="0.006"
                                                />
                                                 
                                                ETH
                                        </SelectableText>
                                }
                                subtitle={
                                        <NumericText
                                                type="currency"
                                                value="2.472"
                                        />
                                }
                        />
                </Row>
                <Row
                        gutter={0}
                >
                        <style__StyledCol
                                span={12}
                        >
                                base_layer
                                 ETH 
                                balance_before
                        </style__StyledCol>
                </Row>
                <Row
                        gutter={0}
                >
                        <TransferDescriptionItem
                                main={
                                        <SelectableText>
                                                <NumericText
                                                        maxDecimalPlaces={18}
                                                        value="0.198937"
                                                />
                                                 
                                                ETH
                                        </SelectableText>
                                }
                                subtitle={
                                        <NumericText
                                                type="currency"
                                                value="81.962044"
                                        />
                                }
                        />
                </Row>
                <Row
                        gutter={0}
                >
                        <style__StyledCol
                                span={12}
                        >
                                base_layer
                                 ETH 
                                balance_after
                        </style__StyledCol>
                </Row>
                <Row
                        gutter={0}
                >
                        <TransferDescriptionItem
                                main={
                                        <SelectableText>
                                                <NumericText
                                                        maxDecimalPlaces={18}
                                                        value="0.192937"
                                                />
                                                 
                                                ETH
                                        </SelectableText>
                                }
                                subtitle={
                                        <NumericText
                                                type="currency"
                                                value="79.490044"
                                        />
                                }
                        />
                </Row>
                <div>
                        <Row
                                gutter={0}
                        >
                                <style__StyledCol
                                        span={12}
                                >
                                        nahmii_available
                                         ETH 
                                        balance_before
                                </style__StyledCol>
                        </Row>
                        <Row
                                gutter={0}
                        >
                                <TransferDescriptionItem
                                        main={
                                                <SelectableText>
                                                        <NumericText
                                                                maxDecimalPlaces={18}
                                                                value="0.1"
                                                        />
                                                         
                                                        ETH
                                                </SelectableText>
                                        }
                                        subtitle={
                                                <NumericText
                                                        type="currency"
                                                        value="41.2"
                                                />
                                        }
                                />
                        </Row>
                        <Row
                                gutter={0}
                        >
                                <style__StyledCol
                                        span={12}
                                >
                                        nahmii_available
                                         ETH 
                                        balance_after
                                </style__StyledCol>
                        </Row>
                        <Row
                                gutter={0}
                        >
                                <TransferDescriptionItem
                                        main={
                                                <SelectableText>
                                                        <NumericText
                                                                maxDecimalPlaces={18}
                                                                value="0.1"
                                                        />
                                                         
                                                        ETH
                                                </SelectableText>
                                        }
                                        subtitle={
                                                <NumericText
                                                        type="currency"
                                                        value="41.2"
                                                />
                                        }
                                />
                        </Row>
                </div>
                <Row
                        gutter={0}
                >
                        <style__HWPromptWrapper>
                                <Connect(HWPromptContainer) />
                        </style__HWPromptWrapper>
                        <div
                                style={
                                        Object {
                                                "display": "flex",
                                                "flexDirection": "column",
                                                "marginTop": "2rem",
                                              }
                                }
                        >
                                <div
                                        style={
                                                Object {
                                                        "display": "flex",
                                                        "flexDirection": "column",
                                                      }
                                        }
                                >
                                        <span>
                                                <Text
                                                        large={true}
                                                >
                                                        waiting_for_deposit_to_be {"ratio":"2/2"} mined...
                                                </Text>
                                                <Icon
                                                        style={
                                                                Object {
                                                                        "color": "white",
                                                                        "fontSize": "1.5rem",
                                                                        "marginLeft": "1rem",
                                                                      }
                                                        }
                                                        type="loading"
                                                />
                                        </span>
                                        <a
                                                onClick={[Function]}
                                                role="link"
                                                tabIndex={0}
                                        >
                                                Track progress on Etherscan
                                        </a>
                                </div>
                        </div>
                </Row>
                <SectionHeading
                        style={
                                Object {
                                        "marginTop": "2rem",
                                        "maxWidth": "25rem",
                                      }
                        }
                >
                        deposits_note
                </SectionHeading>
        </div>
</div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            style={
                        Object {
                                    "flex": "1",
                                    "marginBottom": "3rem",
                                    "marginRight": "2rem",
                                  }
            }
>
            <Form__FlexForm>
                        <Form__FormItem
                                    colon={false}
                                    label={
                                                <Form__FormItemLabel>
                                                            select_asset_to_deposit
                                                </Form__FormItemLabel>
                                    }
                        >
                                    <style__Image
                                                alt="logo"
                                                onError={[Function]}
                                                src="/public/images/assets/ETH.svg"
                                    />
                                    <Select
                                                defaultValue="ETH"
                                                onSelect={[Function]}
                                                style={
                                                            Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                                                }
                                    >
                                                <Option
                                                            value="ETH"
                                                >
                                                            ETH
                                                </Option>
                                                <Option
                                                            value="BOKKY"
                                                >
                                                            BOKKY
                                                </Option>
                                    </Select>
                        </Form__FormItem>
                        <Form__FormItem
                                    colon={false}
                                    help={
                                                <HelperTextComponent
                                                            left="$0.00"
                                                            right="usd"
                                                />
                                    }
                                    label={
                                                <Form__FormItemLabel>
                                                            enter_amount
                                                </Form__FormItemLabel>
                                    }
                        >
                                    <Input
                                                defaultValue="0"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value="0"
                                    />
                        </Form__FormItem>
                        <GasOptions
                                    defaultGasLimit={600000}
                                    defaultGasPrice={10}
                                    defaultOption="average"
                                    gasStatistics={undefined}
                                    intl={
                                                Object {
                                                            "formatMessage": [Function],
                                                            "formatNumber": [Function],
                                                          }
                                    }
                                    onChange={[Function]}
                        />
                        <style__DollarPrice>
                                    1 ETH = 
                                    <style__StyledNumericText
                                                type="currency"
                                                value="412"
                                    />
                        </style__DollarPrice>
            </Form__FlexForm>
</div>,
          <div
            style={
                        Object {
                                    "minWidth": "34rem",
                                  }
            }
>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    deposit
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main={
                                                <SelectableText>
                                                            <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0"
                                                            />
                                                             
                                                            ETH
                                                </SelectableText>
                                    }
                                    subtitle={
                                                <NumericText
                                                            type="currency"
                                                            value="0"
                                                />
                                    }
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    <TooltipText
                                                details="max_base_layer_fee_explain"
                                    >
                                                max_base_layer_fee
                                    </TooltipText>
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main={
                                                <SelectableText>
                                                            <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.006"
                                                            />
                                                             
                                                            ETH
                                                </SelectableText>
                                    }
                                    subtitle={
                                                <NumericText
                                                            type="currency"
                                                            value="2.472"
                                                />
                                    }
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    base_layer
                                     ETH 
                                    balance_before
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main={
                                                <SelectableText>
                                                            <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.198937"
                                                            />
                                                             
                                                            ETH
                                                </SelectableText>
                                    }
                                    subtitle={
                                                <NumericText
                                                            type="currency"
                                                            value="81.962044"
                                                />
                                    }
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    base_layer
                                     ETH 
                                    balance_after
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main={
                                                <SelectableText>
                                                            <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.192937"
                                                            />
                                                             
                                                            ETH
                                                </SelectableText>
                                    }
                                    subtitle={
                                                <NumericText
                                                            type="currency"
                                                            value="79.490044"
                                                />
                                    }
                        />
            </Row>
            <div>
                        <Row
                                    gutter={0}
                        >
                                    <style__StyledCol
                                                span={12}
                                    >
                                                nahmii_available
                                                 ETH 
                                                balance_before
                                    </style__StyledCol>
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <TransferDescriptionItem
                                                main={
                                                            <SelectableText>
                                                                        <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.1"
                                                                        />
                                                                         
                                                                        ETH
                                                            </SelectableText>
                                                }
                                                subtitle={
                                                            <NumericText
                                                                        type="currency"
                                                                        value="41.2"
                                                            />
                                                }
                                    />
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <style__StyledCol
                                                span={12}
                                    >
                                                nahmii_available
                                                 ETH 
                                                balance_after
                                    </style__StyledCol>
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <TransferDescriptionItem
                                                main={
                                                            <SelectableText>
                                                                        <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.1"
                                                                        />
                                                                         
                                                                        ETH
                                                            </SelectableText>
                                                }
                                                subtitle={
                                                            <NumericText
                                                                        type="currency"
                                                                        value="41.2"
                                                            />
                                                }
                                    />
                        </Row>
            </div>
            <Row
                        gutter={0}
            >
                        <style__HWPromptWrapper>
                                    <Connect(HWPromptContainer) />
                        </style__HWPromptWrapper>
                        <div
                                    style={
                                                Object {
                                                            "display": "flex",
                                                            "flexDirection": "column",
                                                            "marginTop": "2rem",
                                                          }
                                    }
                        >
                                    <div
                                                style={
                                                            Object {
                                                                        "display": "flex",
                                                                        "flexDirection": "column",
                                                                      }
                                                }
                                    >
                                                <span>
                                                            <Text
                                                                        large={true}
                                                            >
                                                                        waiting_for_deposit_to_be {"ratio":"2/2"} mined...
                                                            </Text>
                                                            <Icon
                                                                        style={
                                                                                    Object {
                                                                                                "color": "white",
                                                                                                "fontSize": "1.5rem",
                                                                                                "marginLeft": "1rem",
                                                                                              }
                                                                        }
                                                                        type="loading"
                                                            />
                                                </span>
                                                <a
                                                            onClick={[Function]}
                                                            role="link"
                                                            tabIndex={0}
                                                >
                                                            Track progress on Etherscan
                                                </a>
                                    </div>
                        </div>
            </Row>
            <SectionHeading
                        style={
                                    Object {
                                                "marginTop": "2rem",
                                                "maxWidth": "25rem",
                                              }
                        }
            >
                        deposits_note
            </SectionHeading>
</div>,
        ],
        "style": Object {
          "display": "flex",
          "flex": "1",
          "flexWrap": "wrap",
          "marginTop": "0.5rem",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Form__FlexForm>
              <Form__FormItem
                            colon={false}
                            label={
                                          <Form__FormItemLabel>
                                                        select_asset_to_deposit
                                          </Form__FormItemLabel>
                            }
              >
                            <style__Image
                                          alt="logo"
                                          onError={[Function]}
                                          src="/public/images/assets/ETH.svg"
                            />
                            <Select
                                          defaultValue="ETH"
                                          onSelect={[Function]}
                                          style={
                                                        Object {
                                                                      "paddingLeft": "0.5rem",
                                                                    }
                                          }
                            >
                                          <Option
                                                        value="ETH"
                                          >
                                                        ETH
                                          </Option>
                                          <Option
                                                        value="BOKKY"
                                          >
                                                        BOKKY
                                          </Option>
                            </Select>
              </Form__FormItem>
              <Form__FormItem
                            colon={false}
                            help={
                                          <HelperTextComponent
                                                        left="$0.00"
                                                        right="usd"
                                          />
                            }
                            label={
                                          <Form__FormItemLabel>
                                                        enter_amount
                                          </Form__FormItemLabel>
                            }
              >
                            <Input
                                          defaultValue="0"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          value="0"
                            />
              </Form__FormItem>
              <GasOptions
                            defaultGasLimit={600000}
                            defaultGasPrice={10}
                            defaultOption="average"
                            gasStatistics={undefined}
                            intl={
                                          Object {
                                                        "formatMessage": [Function],
                                                        "formatNumber": [Function],
                                                      }
                            }
                            onChange={[Function]}
              />
              <style__DollarPrice>
                            1 ETH = 
                            <style__StyledNumericText
                                          type="currency"
                                          value="412"
                            />
              </style__DollarPrice>
</Form__FlexForm>,
            "style": Object {
              "flex": "1",
              "marginBottom": "3rem",
              "marginRight": "2rem",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Form__FormItem
                  colon={false}
                  label={
                                    <Form__FormItemLabel>
                                                      select_asset_to_deposit
                                    </Form__FormItemLabel>
                  }
>
                  <style__Image
                                    alt="logo"
                                    onError={[Function]}
                                    src="/public/images/assets/ETH.svg"
                  />
                  <Select
                                    defaultValue="ETH"
                                    onSelect={[Function]}
                                    style={
                                                      Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                                    }
                  >
                                    <Option
                                                      value="ETH"
                                    >
                                                      ETH
                                    </Option>
                                    <Option
                                                      value="BOKKY"
                                    >
                                                      BOKKY
                                    </Option>
                  </Select>
</Form__FormItem>,
                <Form__FormItem
                  colon={false}
                  help={
                                    <HelperTextComponent
                                                      left="$0.00"
                                                      right="usd"
                                    />
                  }
                  label={
                                    <Form__FormItemLabel>
                                                      enter_amount
                                    </Form__FormItemLabel>
                  }
>
                  <Input
                                    defaultValue="0"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    value="0"
                  />
</Form__FormItem>,
                <GasOptions
                  defaultGasLimit={600000}
                  defaultGasPrice={10}
                  defaultOption="average"
                  gasStatistics={undefined}
                  intl={
                                    Object {
                                                      "formatMessage": [Function],
                                                      "formatNumber": [Function],
                                                    }
                  }
                  onChange={[Function]}
/>,
                <style__DollarPrice>
                  1 ETH = 
                  <style__StyledNumericText
                                    type="currency"
                                    value="412"
                  />
</style__DollarPrice>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <style__Image
                      alt="logo"
                      onError={[Function]}
                      src="/public/images/assets/ETH.svg"
/>,
                    <Select
                      defaultValue="ETH"
                      onSelect={[Function]}
                      style={
                                            Object {
                                                                  "paddingLeft": "0.5rem",
                                                                }
                      }
>
                      <Option
                                            value="ETH"
                      >
                                            ETH
                      </Option>
                      <Option
                                            value="BOKKY"
                      >
                                            BOKKY
                      </Option>
</Select>,
                  ],
                  "colon": false,
                  "label": <Form__FormItemLabel>
                    select_asset_to_deposit
</Form__FormItemLabel>,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "alt": "logo",
                      "onError": [Function],
                      "src": "/public/images/assets/ETH.svg",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <Option
                          value="ETH"
>
                          ETH
</Option>,
                        <Option
                          value="BOKKY"
>
                          BOKKY
</Option>,
                      ],
                      "defaultValue": "ETH",
                      "onSelect": [Function],
                      "style": Object {
                        "paddingLeft": "0.5rem",
                      },
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": "ETH",
                        "nodeType": "class",
                        "props": Object {
                          "children": "ETH",
                          "value": "ETH",
                        },
                        "ref": null,
                        "rendered": "ETH",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": "BOKKY",
                        "nodeType": "class",
                        "props": Object {
                          "children": "BOKKY",
                          "value": "BOKKY",
                        },
                        "ref": null,
                        "rendered": "BOKKY",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Input
                    defaultValue="0"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    value="0"
/>,
                  "colon": false,
                  "help": <HelperTextComponent
                    left="$0.00"
                    right="usd"
/>,
                  "label": <Form__FormItemLabel>
                    enter_amount
</Form__FormItemLabel>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "defaultValue": "0",
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "0",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "defaultGasLimit": 600000,
                  "defaultGasPrice": 10,
                  "defaultOption": "average",
                  "gasStatistics": undefined,
                  "intl": Object {
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                  },
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "1 ETH = ",
                    <style__StyledNumericText
                      type="currency"
                      value="412"
/>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "1 ETH = ",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "type": "currency",
                      "value": "412",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                deposit
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main={
                                                <SelectableText>
                                                                <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0"
                                                                />
                                                                 
                                                                ETH
                                                </SelectableText>
                                }
                                subtitle={
                                                <NumericText
                                                                type="currency"
                                                                value="0"
                                                />
                                }
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                <TooltipText
                                                details="max_base_layer_fee_explain"
                                >
                                                max_base_layer_fee
                                </TooltipText>
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main={
                                                <SelectableText>
                                                                <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.006"
                                                                />
                                                                 
                                                                ETH
                                                </SelectableText>
                                }
                                subtitle={
                                                <NumericText
                                                                type="currency"
                                                                value="2.472"
                                                />
                                }
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                base_layer
                                 ETH 
                                balance_before
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main={
                                                <SelectableText>
                                                                <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.198937"
                                                                />
                                                                 
                                                                ETH
                                                </SelectableText>
                                }
                                subtitle={
                                                <NumericText
                                                                type="currency"
                                                                value="81.962044"
                                                />
                                }
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                base_layer
                                 ETH 
                                balance_after
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main={
                                                <SelectableText>
                                                                <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.192937"
                                                                />
                                                                 
                                                                ETH
                                                </SelectableText>
                                }
                                subtitle={
                                                <NumericText
                                                                type="currency"
                                                                value="79.490044"
                                                />
                                }
                />
</Row>,
              <div>
                <Row
                                gutter={0}
                >
                                <style__StyledCol
                                                span={12}
                                >
                                                nahmii_available
                                                 ETH 
                                                balance_before
                                </style__StyledCol>
                </Row>
                <Row
                                gutter={0}
                >
                                <TransferDescriptionItem
                                                main={
                                                                <SelectableText>
                                                                                <NumericText
                                                                                                maxDecimalPlaces={18}
                                                                                                value="0.1"
                                                                                />
                                                                                 
                                                                                ETH
                                                                </SelectableText>
                                                }
                                                subtitle={
                                                                <NumericText
                                                                                type="currency"
                                                                                value="41.2"
                                                                />
                                                }
                                />
                </Row>
                <Row
                                gutter={0}
                >
                                <style__StyledCol
                                                span={12}
                                >
                                                nahmii_available
                                                 ETH 
                                                balance_after
                                </style__StyledCol>
                </Row>
                <Row
                                gutter={0}
                >
                                <TransferDescriptionItem
                                                main={
                                                                <SelectableText>
                                                                                <NumericText
                                                                                                maxDecimalPlaces={18}
                                                                                                value="0.1"
                                                                                />
                                                                                 
                                                                                ETH
                                                                </SelectableText>
                                                }
                                                subtitle={
                                                                <NumericText
                                                                                type="currency"
                                                                                value="41.2"
                                                                />
                                                }
                                />
                </Row>
</div>,
              false,
              <Row
                gutter={0}
>
                <style__HWPromptWrapper>
                                <Connect(HWPromptContainer) />
                </style__HWPromptWrapper>
                <div
                                style={
                                                Object {
                                                                "display": "flex",
                                                                "flexDirection": "column",
                                                                "marginTop": "2rem",
                                                              }
                                }
                >
                                <div
                                                style={
                                                                Object {
                                                                                "display": "flex",
                                                                                "flexDirection": "column",
                                                                              }
                                                }
                                >
                                                <span>
                                                                <Text
                                                                                large={true}
                                                                >
                                                                                waiting_for_deposit_to_be {"ratio":"2/2"} mined...
                                                                </Text>
                                                                <Icon
                                                                                style={
                                                                                                Object {
                                                                                                                "color": "white",
                                                                                                                "fontSize": "1.5rem",
                                                                                                                "marginLeft": "1rem",
                                                                                                              }
                                                                                }
                                                                                type="loading"
                                                                />
                                                </span>
                                                <a
                                                                onClick={[Function]}
                                                                role="link"
                                                                tabIndex={0}
                                                >
                                                                Track progress on Etherscan
                                                </a>
                                </div>
                </div>
</Row>,
              <SectionHeading
                style={
                                Object {
                                                "marginTop": "2rem",
                                                "maxWidth": "25rem",
                                              }
                }
>
                deposits_note
</SectionHeading>,
            ],
            "style": Object {
              "minWidth": "34rem",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  deposit
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "deposit",
                  "span": 12,
                },
                "ref": null,
                "rendered": "deposit",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main={
                                    <SelectableText>
                                                      <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0"
                                                      />
                                                       
                                                      ETH
                                    </SelectableText>
                  }
                  subtitle={
                                    <NumericText
                                                      type="currency"
                                                      value="0"
                                    />
                  }
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": <SelectableText>
                    <NumericText
                                        maxDecimalPlaces={18}
                                        value="0"
                    />
                     
                    ETH
</SelectableText>,
                  "subtitle": <NumericText
                    type="currency"
                    value="0"
/>,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  <TooltipText
                                    details="max_base_layer_fee_explain"
                  >
                                    max_base_layer_fee
                  </TooltipText>
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TooltipText
                    details="max_base_layer_fee_explain"
>
                    max_base_layer_fee
</TooltipText>,
                  "span": 12,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "max_base_layer_fee",
                    "details": "max_base_layer_fee_explain",
                  },
                  "ref": null,
                  "rendered": "max_base_layer_fee",
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main={
                                    <SelectableText>
                                                      <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.006"
                                                      />
                                                       
                                                      ETH
                                    </SelectableText>
                  }
                  subtitle={
                                    <NumericText
                                                      type="currency"
                                                      value="2.472"
                                    />
                  }
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": <SelectableText>
                    <NumericText
                                        maxDecimalPlaces={18}
                                        value="0.006"
                    />
                     
                    ETH
</SelectableText>,
                  "subtitle": <NumericText
                    type="currency"
                    value="2.472"
/>,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  base_layer
                   ETH 
                  balance_before
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "base_layer",
                    " ETH ",
                    "balance_before",
                  ],
                  "span": 12,
                },
                "ref": null,
                "rendered": Array [
                  "base_layer",
                  " ETH ",
                  "balance_before",
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main={
                                    <SelectableText>
                                                      <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.198937"
                                                      />
                                                       
                                                      ETH
                                    </SelectableText>
                  }
                  subtitle={
                                    <NumericText
                                                      type="currency"
                                                      value="81.962044"
                                    />
                  }
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": <SelectableText>
                    <NumericText
                                        maxDecimalPlaces={18}
                                        value="0.198937"
                    />
                     
                    ETH
</SelectableText>,
                  "subtitle": <NumericText
                    type="currency"
                    value="81.962044"
/>,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  base_layer
                   ETH 
                  balance_after
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "base_layer",
                    " ETH ",
                    "balance_after",
                  ],
                  "span": 12,
                },
                "ref": null,
                "rendered": Array [
                  "base_layer",
                  " ETH ",
                  "balance_after",
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main={
                                    <SelectableText>
                                                      <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.192937"
                                                      />
                                                       
                                                      ETH
                                    </SelectableText>
                  }
                  subtitle={
                                    <NumericText
                                                      type="currency"
                                                      value="79.490044"
                                    />
                  }
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": <SelectableText>
                    <NumericText
                                        maxDecimalPlaces={18}
                                        value="0.192937"
                    />
                     
                    ETH
</SelectableText>,
                  "subtitle": <NumericText
                    type="currency"
                    value="79.490044"
/>,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Row
                    gutter={0}
>
                    <style__StyledCol
                                        span={12}
                    >
                                        nahmii_available
                                         ETH 
                                        balance_before
                    </style__StyledCol>
</Row>,
                  <Row
                    gutter={0}
>
                    <TransferDescriptionItem
                                        main={
                                                            <SelectableText>
                                                                                <NumericText
                                                                                                    maxDecimalPlaces={18}
                                                                                                    value="0.1"
                                                                                />
                                                                                 
                                                                                ETH
                                                            </SelectableText>
                                        }
                                        subtitle={
                                                            <NumericText
                                                                                type="currency"
                                                                                value="41.2"
                                                            />
                                        }
                    />
</Row>,
                  <Row
                    gutter={0}
>
                    <style__StyledCol
                                        span={12}
                    >
                                        nahmii_available
                                         ETH 
                                        balance_after
                    </style__StyledCol>
</Row>,
                  <Row
                    gutter={0}
>
                    <TransferDescriptionItem
                                        main={
                                                            <SelectableText>
                                                                                <NumericText
                                                                                                    maxDecimalPlaces={18}
                                                                                                    value="0.1"
                                                                                />
                                                                                 
                                                                                ETH
                                                            </SelectableText>
                                        }
                                        subtitle={
                                                            <NumericText
                                                                                type="currency"
                                                                                value="41.2"
                                                            />
                                        }
                    />
</Row>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <style__StyledCol
                      span={12}
>
                      nahmii_available
                       ETH 
                      balance_before
</style__StyledCol>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "nahmii_available",
                        " ETH ",
                        "balance_before",
                      ],
                      "span": 12,
                    },
                    "ref": null,
                    "rendered": Array [
                      "nahmii_available",
                      " ETH ",
                      "balance_before",
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TransferDescriptionItem
                      main={
                                            <SelectableText>
                                                                  <NumericText
                                                                                        maxDecimalPlaces={18}
                                                                                        value="0.1"
                                                                  />
                                                                   
                                                                  ETH
                                            </SelectableText>
                      }
                      subtitle={
                                            <NumericText
                                                                  type="currency"
                                                                  value="41.2"
                                            />
                      }
/>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "main": <SelectableText>
                        <NumericText
                                                maxDecimalPlaces={18}
                                                value="0.1"
                        />
                         
                        ETH
</SelectableText>,
                      "subtitle": <NumericText
                        type="currency"
                        value="41.2"
/>,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <style__StyledCol
                      span={12}
>
                      nahmii_available
                       ETH 
                      balance_after
</style__StyledCol>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "nahmii_available",
                        " ETH ",
                        "balance_after",
                      ],
                      "span": 12,
                    },
                    "ref": null,
                    "rendered": Array [
                      "nahmii_available",
                      " ETH ",
                      "balance_after",
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TransferDescriptionItem
                      main={
                                            <SelectableText>
                                                                  <NumericText
                                                                                        maxDecimalPlaces={18}
                                                                                        value="0.1"
                                                                  />
                                                                   
                                                                  ETH
                                            </SelectableText>
                      }
                      subtitle={
                                            <NumericText
                                                                  type="currency"
                                                                  value="41.2"
                                            />
                      }
/>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "main": <SelectableText>
                        <NumericText
                                                maxDecimalPlaces={18}
                                                value="0.1"
                        />
                         
                        ETH
</SelectableText>,
                      "subtitle": <NumericText
                        type="currency"
                        value="41.2"
/>,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <style__HWPromptWrapper>
                    <Connect(HWPromptContainer) />
</style__HWPromptWrapper>,
                  <div
                    style={
                                        Object {
                                                            "display": "flex",
                                                            "flexDirection": "column",
                                                            "marginTop": "2rem",
                                                          }
                    }
>
                    <div
                                        style={
                                                            Object {
                                                                                "display": "flex",
                                                                                "flexDirection": "column",
                                                                              }
                                        }
                    >
                                        <span>
                                                            <Text
                                                                                large={true}
                                                            >
                                                                                waiting_for_deposit_to_be {"ratio":"2/2"} mined...
                                                            </Text>
                                                            <Icon
                                                                                style={
                                                                                                    Object {
                                                                                                                        "color": "white",
                                                                                                                        "fontSize": "1.5rem",
                                                                                                                        "marginLeft": "1rem",
                                                                                                                      }
                                                                                }
                                                                                type="loading"
                                                            />
                                        </span>
                                        <a
                                                            onClick={[Function]}
                                                            role="link"
                                                            tabIndex={0}
                                        >
                                                            Track progress on Etherscan
                                        </a>
                    </div>
</div>,
                ],
                "gutter": 0,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Connect(HWPromptContainer) />,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      style={
                                            Object {
                                                                  "display": "flex",
                                                                  "flexDirection": "column",
                                                                }
                      }
>
                      <span>
                                            <Text
                                                                  large={true}
                                            >
                                                                  waiting_for_deposit_to_be {"ratio":"2/2"} mined...
                                            </Text>
                                            <Icon
                                                                  style={
                                                                                        Object {
                                                                                                              "color": "white",
                                                                                                              "fontSize": "1.5rem",
                                                                                                              "marginLeft": "1rem",
                                                                                                            }
                                                                  }
                                                                  type="loading"
                                            />
                      </span>
                      <a
                                            onClick={[Function]}
                                            role="link"
                                            tabIndex={0}
                      >
                                            Track progress on Etherscan
                      </a>
</div>,
                    "style": Object {
                      "display": "flex",
                      "flexDirection": "column",
                      "marginTop": "2rem",
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <span>
                          <Text
                                                    large={true}
                          >
                                                    waiting_for_deposit_to_be {"ratio":"2/2"} mined...
                          </Text>
                          <Icon
                                                    style={
                                                                              Object {
                                                                                                        "color": "white",
                                                                                                        "fontSize": "1.5rem",
                                                                                                        "marginLeft": "1rem",
                                                                                                      }
                                                    }
                                                    type="loading"
                          />
</span>,
                        <a
                          onClick={[Function]}
                          role="link"
                          tabIndex={0}
>
                          Track progress on Etherscan
</a>,
                      ],
                      "style": Object {
                        "display": "flex",
                        "flexDirection": "column",
                      },
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <Text
                              large={true}
>
                              waiting_for_deposit_to_be {"ratio":"2/2"} mined...
</Text>,
                            <Icon
                              style={
                                                            Object {
                                                                                          "color": "white",
                                                                                          "fontSize": "1.5rem",
                                                                                          "marginLeft": "1rem",
                                                                                        }
                              }
                              type="loading"
/>,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": "waiting_for_deposit_to_be {\\"ratio\\":\\"2/2\\"} mined...",
                              "large": true,
                            },
                            "ref": null,
                            "rendered": "waiting_for_deposit_to_be {\\"ratio\\":\\"2/2\\"} mined...",
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "style": Object {
                                "color": "white",
                                "fontSize": "1.5rem",
                                "marginLeft": "1rem",
                              },
                              "type": "loading",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                        ],
                        "type": "span",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Track progress on Etherscan",
                          "onClick": [Function],
                          "role": "link",
                          "tabIndex": 0,
                        },
                        "ref": null,
                        "rendered": "Track progress on Etherscan",
                        "type": "a",
                      },
                    ],
                    "type": "div",
                  },
                  "type": "div",
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "deposits_note",
                "style": Object {
                  "marginTop": "2rem",
                  "maxWidth": "25rem",
                },
              },
              "ref": null,
              "rendered": "deposits_note",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          style={
                    Object {
                              "display": "flex",
                              "flex": "1",
                              "flexWrap": "wrap",
                              "marginTop": "0.5rem",
                            }
          }
>
          <div
                    style={
                              Object {
                                        "flex": "1",
                                        "marginBottom": "3rem",
                                        "marginRight": "2rem",
                                      }
                    }
          >
                    <Form__FlexForm>
                              <Form__FormItem
                                        colon={false}
                                        label={
                                                  <Form__FormItemLabel>
                                                            select_asset_to_deposit
                                                  </Form__FormItemLabel>
                                        }
                              >
                                        <style__Image
                                                  alt="logo"
                                                  onError={[Function]}
                                                  src="/public/images/assets/ETH.svg"
                                        />
                                        <Select
                                                  defaultValue="ETH"
                                                  onSelect={[Function]}
                                                  style={
                                                            Object {
                                                                      "paddingLeft": "0.5rem",
                                                                    }
                                                  }
                                        >
                                                  <Option
                                                            value="ETH"
                                                  >
                                                            ETH
                                                  </Option>
                                                  <Option
                                                            value="BOKKY"
                                                  >
                                                            BOKKY
                                                  </Option>
                                        </Select>
                              </Form__FormItem>
                              <Form__FormItem
                                        colon={false}
                                        help={
                                                  <HelperTextComponent
                                                            left="$0.00"
                                                            right="usd"
                                                  />
                                        }
                                        label={
                                                  <Form__FormItemLabel>
                                                            enter_amount
                                                  </Form__FormItemLabel>
                                        }
                              >
                                        <Input
                                                  defaultValue="0"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  value="0"
                                        />
                              </Form__FormItem>
                              <GasOptions
                                        defaultGasLimit={600000}
                                        defaultGasPrice={10}
                                        defaultOption="average"
                                        gasStatistics={undefined}
                                        intl={
                                                  Object {
                                                            "formatMessage": [Function],
                                                            "formatNumber": [Function],
                                                          }
                                        }
                                        onChange={[Function]}
                              />
                              <style__DollarPrice>
                                        1 ETH = 
                                        <style__StyledNumericText
                                                  type="currency"
                                                  value="412"
                                        />
                              </style__DollarPrice>
                    </Form__FlexForm>
          </div>
          <div
                    style={
                              Object {
                                        "minWidth": "34rem",
                                      }
                    }
          >
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        deposit
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main={
                                                  <SelectableText>
                                                            <NumericText
                                                                      maxDecimalPlaces={18}
                                                                      value="0"
                                                            />
                                                             
                                                            ETH
                                                  </SelectableText>
                                        }
                                        subtitle={
                                                  <NumericText
                                                            type="currency"
                                                            value="0"
                                                  />
                                        }
                              />
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        <TooltipText
                                                  details="max_base_layer_fee_explain"
                                        >
                                                  max_base_layer_fee
                                        </TooltipText>
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main={
                                                  <SelectableText>
                                                            <NumericText
                                                                      maxDecimalPlaces={18}
                                                                      value="0.006"
                                                            />
                                                             
                                                            ETH
                                                  </SelectableText>
                                        }
                                        subtitle={
                                                  <NumericText
                                                            type="currency"
                                                            value="2.472"
                                                  />
                                        }
                              />
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        base_layer
                                         ETH 
                                        balance_before
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main={
                                                  <SelectableText>
                                                            <NumericText
                                                                      maxDecimalPlaces={18}
                                                                      value="0.198937"
                                                            />
                                                             
                                                            ETH
                                                  </SelectableText>
                                        }
                                        subtitle={
                                                  <NumericText
                                                            type="currency"
                                                            value="81.962044"
                                                  />
                                        }
                              />
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        base_layer
                                         ETH 
                                        balance_after
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main={
                                                  <SelectableText>
                                                            <NumericText
                                                                      maxDecimalPlaces={18}
                                                                      value="0.192937"
                                                            />
                                                             
                                                            ETH
                                                  </SelectableText>
                                        }
                                        subtitle={
                                                  <NumericText
                                                            type="currency"
                                                            value="79.490044"
                                                  />
                                        }
                              />
                    </Row>
                    <div>
                              <Row
                                        gutter={0}
                              >
                                        <style__StyledCol
                                                  span={12}
                                        >
                                                  nahmii_available
                                                   ETH 
                                                  balance_before
                                        </style__StyledCol>
                              </Row>
                              <Row
                                        gutter={0}
                              >
                                        <TransferDescriptionItem
                                                  main={
                                                            <SelectableText>
                                                                      <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.1"
                                                                      />
                                                                       
                                                                      ETH
                                                            </SelectableText>
                                                  }
                                                  subtitle={
                                                            <NumericText
                                                                      type="currency"
                                                                      value="41.2"
                                                            />
                                                  }
                                        />
                              </Row>
                              <Row
                                        gutter={0}
                              >
                                        <style__StyledCol
                                                  span={12}
                                        >
                                                  nahmii_available
                                                   ETH 
                                                  balance_after
                                        </style__StyledCol>
                              </Row>
                              <Row
                                        gutter={0}
                              >
                                        <TransferDescriptionItem
                                                  main={
                                                            <SelectableText>
                                                                      <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.1"
                                                                      />
                                                                       
                                                                      ETH
                                                            </SelectableText>
                                                  }
                                                  subtitle={
                                                            <NumericText
                                                                      type="currency"
                                                                      value="41.2"
                                                            />
                                                  }
                                        />
                              </Row>
                    </div>
                    <Row
                              gutter={0}
                    >
                              <style__HWPromptWrapper>
                                        <Connect(HWPromptContainer) />
                              </style__HWPromptWrapper>
                              <div
                                        style={
                                                  Object {
                                                            "display": "flex",
                                                            "flexDirection": "column",
                                                            "marginTop": "2rem",
                                                          }
                                        }
                              >
                                        <div
                                                  style={
                                                            Object {
                                                                      "display": "flex",
                                                                      "flexDirection": "column",
                                                                    }
                                                  }
                                        >
                                                  <span>
                                                            <Text
                                                                      large={true}
                                                            >
                                                                      waiting_for_deposit_to_be {"ratio":"2/2"} mined...
                                                            </Text>
                                                            <Icon
                                                                      style={
                                                                                Object {
                                                                                          "color": "white",
                                                                                          "fontSize": "1.5rem",
                                                                                          "marginLeft": "1rem",
                                                                                        }
                                                                      }
                                                                      type="loading"
                                                            />
                                                  </span>
                                                  <a
                                                            onClick={[Function]}
                                                            role="link"
                                                            tabIndex={0}
                                                  >
                                                            Track progress on Etherscan
                                                  </a>
                                        </div>
                              </div>
                    </Row>
                    <SectionHeading
                              style={
                                        Object {
                                                  "marginTop": "2rem",
                                                  "maxWidth": "25rem",
                                                }
                              }
                    >
                              deposits_note
                    </SectionHeading>
          </div>
</div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              style={
                            Object {
                                          "flex": "1",
                                          "marginBottom": "3rem",
                                          "marginRight": "2rem",
                                        }
              }
>
              <Form__FlexForm>
                            <Form__FormItem
                                          colon={false}
                                          label={
                                                        <Form__FormItemLabel>
                                                                      select_asset_to_deposit
                                                        </Form__FormItemLabel>
                                          }
                            >
                                          <style__Image
                                                        alt="logo"
                                                        onError={[Function]}
                                                        src="/public/images/assets/ETH.svg"
                                          />
                                          <Select
                                                        defaultValue="ETH"
                                                        onSelect={[Function]}
                                                        style={
                                                                      Object {
                                                                                    "paddingLeft": "0.5rem",
                                                                                  }
                                                        }
                                          >
                                                        <Option
                                                                      value="ETH"
                                                        >
                                                                      ETH
                                                        </Option>
                                                        <Option
                                                                      value="BOKKY"
                                                        >
                                                                      BOKKY
                                                        </Option>
                                          </Select>
                            </Form__FormItem>
                            <Form__FormItem
                                          colon={false}
                                          help={
                                                        <HelperTextComponent
                                                                      left="$0.00"
                                                                      right="usd"
                                                        />
                                          }
                                          label={
                                                        <Form__FormItemLabel>
                                                                      enter_amount
                                                        </Form__FormItemLabel>
                                          }
                            >
                                          <Input
                                                        defaultValue="0"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        value="0"
                                          />
                            </Form__FormItem>
                            <GasOptions
                                          defaultGasLimit={600000}
                                          defaultGasPrice={10}
                                          defaultOption="average"
                                          gasStatistics={undefined}
                                          intl={
                                                        Object {
                                                                      "formatMessage": [Function],
                                                                      "formatNumber": [Function],
                                                                    }
                                          }
                                          onChange={[Function]}
                            />
                            <style__DollarPrice>
                                          1 ETH = 
                                          <style__StyledNumericText
                                                        type="currency"
                                                        value="412"
                                          />
                            </style__DollarPrice>
              </Form__FlexForm>
</div>,
            <div
              style={
                            Object {
                                          "minWidth": "34rem",
                                        }
              }
>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          deposit
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main={
                                                        <SelectableText>
                                                                      <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0"
                                                                      />
                                                                       
                                                                      ETH
                                                        </SelectableText>
                                          }
                                          subtitle={
                                                        <NumericText
                                                                      type="currency"
                                                                      value="0"
                                                        />
                                          }
                            />
              </Row>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          <TooltipText
                                                        details="max_base_layer_fee_explain"
                                          >
                                                        max_base_layer_fee
                                          </TooltipText>
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main={
                                                        <SelectableText>
                                                                      <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.006"
                                                                      />
                                                                       
                                                                      ETH
                                                        </SelectableText>
                                          }
                                          subtitle={
                                                        <NumericText
                                                                      type="currency"
                                                                      value="2.472"
                                                        />
                                          }
                            />
              </Row>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          base_layer
                                           ETH 
                                          balance_before
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main={
                                                        <SelectableText>
                                                                      <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.198937"
                                                                      />
                                                                       
                                                                      ETH
                                                        </SelectableText>
                                          }
                                          subtitle={
                                                        <NumericText
                                                                      type="currency"
                                                                      value="81.962044"
                                                        />
                                          }
                            />
              </Row>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          base_layer
                                           ETH 
                                          balance_after
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main={
                                                        <SelectableText>
                                                                      <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.192937"
                                                                      />
                                                                       
                                                                      ETH
                                                        </SelectableText>
                                          }
                                          subtitle={
                                                        <NumericText
                                                                      type="currency"
                                                                      value="79.490044"
                                                        />
                                          }
                            />
              </Row>
              <div>
                            <Row
                                          gutter={0}
                            >
                                          <style__StyledCol
                                                        span={12}
                                          >
                                                        nahmii_available
                                                         ETH 
                                                        balance_before
                                          </style__StyledCol>
                            </Row>
                            <Row
                                          gutter={0}
                            >
                                          <TransferDescriptionItem
                                                        main={
                                                                      <SelectableText>
                                                                                    <NumericText
                                                                                                  maxDecimalPlaces={18}
                                                                                                  value="0.1"
                                                                                    />
                                                                                     
                                                                                    ETH
                                                                      </SelectableText>
                                                        }
                                                        subtitle={
                                                                      <NumericText
                                                                                    type="currency"
                                                                                    value="41.2"
                                                                      />
                                                        }
                                          />
                            </Row>
                            <Row
                                          gutter={0}
                            >
                                          <style__StyledCol
                                                        span={12}
                                          >
                                                        nahmii_available
                                                         ETH 
                                                        balance_after
                                          </style__StyledCol>
                            </Row>
                            <Row
                                          gutter={0}
                            >
                                          <TransferDescriptionItem
                                                        main={
                                                                      <SelectableText>
                                                                                    <NumericText
                                                                                                  maxDecimalPlaces={18}
                                                                                                  value="0.1"
                                                                                    />
                                                                                     
                                                                                    ETH
                                                                      </SelectableText>
                                                        }
                                                        subtitle={
                                                                      <NumericText
                                                                                    type="currency"
                                                                                    value="41.2"
                                                                      />
                                                        }
                                          />
                            </Row>
              </div>
              <Row
                            gutter={0}
              >
                            <style__HWPromptWrapper>
                                          <Connect(HWPromptContainer) />
                            </style__HWPromptWrapper>
                            <div
                                          style={
                                                        Object {
                                                                      "display": "flex",
                                                                      "flexDirection": "column",
                                                                      "marginTop": "2rem",
                                                                    }
                                          }
                            >
                                          <div
                                                        style={
                                                                      Object {
                                                                                    "display": "flex",
                                                                                    "flexDirection": "column",
                                                                                  }
                                                        }
                                          >
                                                        <span>
                                                                      <Text
                                                                                    large={true}
                                                                      >
                                                                                    waiting_for_deposit_to_be {"ratio":"2/2"} mined...
                                                                      </Text>
                                                                      <Icon
                                                                                    style={
                                                                                                  Object {
                                                                                                                "color": "white",
                                                                                                                "fontSize": "1.5rem",
                                                                                                                "marginLeft": "1rem",
                                                                                                              }
                                                                                    }
                                                                                    type="loading"
                                                                      />
                                                        </span>
                                                        <a
                                                                      onClick={[Function]}
                                                                      role="link"
                                                                      tabIndex={0}
                                                        >
                                                                      Track progress on Etherscan
                                                        </a>
                                          </div>
                            </div>
              </Row>
              <SectionHeading
                            style={
                                          Object {
                                                        "marginTop": "2rem",
                                                        "maxWidth": "25rem",
                                                      }
                            }
              >
                            deposits_note
              </SectionHeading>
</div>,
          ],
          "style": Object {
            "display": "flex",
            "flex": "1",
            "flexWrap": "wrap",
            "marginTop": "0.5rem",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Form__FlexForm>
                <Form__FormItem
                                colon={false}
                                label={
                                                <Form__FormItemLabel>
                                                                select_asset_to_deposit
                                                </Form__FormItemLabel>
                                }
                >
                                <style__Image
                                                alt="logo"
                                                onError={[Function]}
                                                src="/public/images/assets/ETH.svg"
                                />
                                <Select
                                                defaultValue="ETH"
                                                onSelect={[Function]}
                                                style={
                                                                Object {
                                                                                "paddingLeft": "0.5rem",
                                                                              }
                                                }
                                >
                                                <Option
                                                                value="ETH"
                                                >
                                                                ETH
                                                </Option>
                                                <Option
                                                                value="BOKKY"
                                                >
                                                                BOKKY
                                                </Option>
                                </Select>
                </Form__FormItem>
                <Form__FormItem
                                colon={false}
                                help={
                                                <HelperTextComponent
                                                                left="$0.00"
                                                                right="usd"
                                                />
                                }
                                label={
                                                <Form__FormItemLabel>
                                                                enter_amount
                                                </Form__FormItemLabel>
                                }
                >
                                <Input
                                                defaultValue="0"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value="0"
                                />
                </Form__FormItem>
                <GasOptions
                                defaultGasLimit={600000}
                                defaultGasPrice={10}
                                defaultOption="average"
                                gasStatistics={undefined}
                                intl={
                                                Object {
                                                                "formatMessage": [Function],
                                                                "formatNumber": [Function],
                                                              }
                                }
                                onChange={[Function]}
                />
                <style__DollarPrice>
                                1 ETH = 
                                <style__StyledNumericText
                                                type="currency"
                                                value="412"
                                />
                </style__DollarPrice>
</Form__FlexForm>,
              "style": Object {
                "flex": "1",
                "marginBottom": "3rem",
                "marginRight": "2rem",
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Form__FormItem
                    colon={false}
                    label={
                                        <Form__FormItemLabel>
                                                            select_asset_to_deposit
                                        </Form__FormItemLabel>
                    }
>
                    <style__Image
                                        alt="logo"
                                        onError={[Function]}
                                        src="/public/images/assets/ETH.svg"
                    />
                    <Select
                                        defaultValue="ETH"
                                        onSelect={[Function]}
                                        style={
                                                            Object {
                                                                                "paddingLeft": "0.5rem",
                                                                              }
                                        }
                    >
                                        <Option
                                                            value="ETH"
                                        >
                                                            ETH
                                        </Option>
                                        <Option
                                                            value="BOKKY"
                                        >
                                                            BOKKY
                                        </Option>
                    </Select>
</Form__FormItem>,
                  <Form__FormItem
                    colon={false}
                    help={
                                        <HelperTextComponent
                                                            left="$0.00"
                                                            right="usd"
                                        />
                    }
                    label={
                                        <Form__FormItemLabel>
                                                            enter_amount
                                        </Form__FormItemLabel>
                    }
>
                    <Input
                                        defaultValue="0"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        value="0"
                    />
</Form__FormItem>,
                  <GasOptions
                    defaultGasLimit={600000}
                    defaultGasPrice={10}
                    defaultOption="average"
                    gasStatistics={undefined}
                    intl={
                                        Object {
                                                            "formatMessage": [Function],
                                                            "formatNumber": [Function],
                                                          }
                    }
                    onChange={[Function]}
/>,
                  <style__DollarPrice>
                    1 ETH = 
                    <style__StyledNumericText
                                        type="currency"
                                        value="412"
                    />
</style__DollarPrice>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <style__Image
                        alt="logo"
                        onError={[Function]}
                        src="/public/images/assets/ETH.svg"
/>,
                      <Select
                        defaultValue="ETH"
                        onSelect={[Function]}
                        style={
                                                Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                        }
>
                        <Option
                                                value="ETH"
                        >
                                                ETH
                        </Option>
                        <Option
                                                value="BOKKY"
                        >
                                                BOKKY
                        </Option>
</Select>,
                    ],
                    "colon": false,
                    "label": <Form__FormItemLabel>
                      select_asset_to_deposit
</Form__FormItemLabel>,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "alt": "logo",
                        "onError": [Function],
                        "src": "/public/images/assets/ETH.svg",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <Option
                            value="ETH"
>
                            ETH
</Option>,
                          <Option
                            value="BOKKY"
>
                            BOKKY
</Option>,
                        ],
                        "defaultValue": "ETH",
                        "onSelect": [Function],
                        "style": Object {
                          "paddingLeft": "0.5rem",
                        },
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": "ETH",
                          "nodeType": "class",
                          "props": Object {
                            "children": "ETH",
                            "value": "ETH",
                          },
                          "ref": null,
                          "rendered": "ETH",
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": "BOKKY",
                          "nodeType": "class",
                          "props": Object {
                            "children": "BOKKY",
                            "value": "BOKKY",
                          },
                          "ref": null,
                          "rendered": "BOKKY",
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Input
                      defaultValue="0"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      value="0"
/>,
                    "colon": false,
                    "help": <HelperTextComponent
                      left="$0.00"
                      right="usd"
/>,
                    "label": <Form__FormItemLabel>
                      enter_amount
</Form__FormItemLabel>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "defaultValue": "0",
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "value": "0",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "defaultGasLimit": 600000,
                    "defaultGasPrice": 10,
                    "defaultOption": "average",
                    "gasStatistics": undefined,
                    "intl": Object {
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                    },
                    "onChange": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "1 ETH = ",
                      <style__StyledNumericText
                        type="currency"
                        value="412"
/>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    "1 ETH = ",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "type": "currency",
                        "value": "412",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    deposit
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main={
                                                      <SelectableText>
                                                                        <NumericText
                                                                                          maxDecimalPlaces={18}
                                                                                          value="0"
                                                                        />
                                                                         
                                                                        ETH
                                                      </SelectableText>
                                    }
                                    subtitle={
                                                      <NumericText
                                                                        type="currency"
                                                                        value="0"
                                                      />
                                    }
                  />
</Row>,
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    <TooltipText
                                                      details="max_base_layer_fee_explain"
                                    >
                                                      max_base_layer_fee
                                    </TooltipText>
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main={
                                                      <SelectableText>
                                                                        <NumericText
                                                                                          maxDecimalPlaces={18}
                                                                                          value="0.006"
                                                                        />
                                                                         
                                                                        ETH
                                                      </SelectableText>
                                    }
                                    subtitle={
                                                      <NumericText
                                                                        type="currency"
                                                                        value="2.472"
                                                      />
                                    }
                  />
</Row>,
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    base_layer
                                     ETH 
                                    balance_before
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main={
                                                      <SelectableText>
                                                                        <NumericText
                                                                                          maxDecimalPlaces={18}
                                                                                          value="0.198937"
                                                                        />
                                                                         
                                                                        ETH
                                                      </SelectableText>
                                    }
                                    subtitle={
                                                      <NumericText
                                                                        type="currency"
                                                                        value="81.962044"
                                                      />
                                    }
                  />
</Row>,
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    base_layer
                                     ETH 
                                    balance_after
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main={
                                                      <SelectableText>
                                                                        <NumericText
                                                                                          maxDecimalPlaces={18}
                                                                                          value="0.192937"
                                                                        />
                                                                         
                                                                        ETH
                                                      </SelectableText>
                                    }
                                    subtitle={
                                                      <NumericText
                                                                        type="currency"
                                                                        value="79.490044"
                                                      />
                                    }
                  />
</Row>,
                <div>
                  <Row
                                    gutter={0}
                  >
                                    <style__StyledCol
                                                      span={12}
                                    >
                                                      nahmii_available
                                                       ETH 
                                                      balance_before
                                    </style__StyledCol>
                  </Row>
                  <Row
                                    gutter={0}
                  >
                                    <TransferDescriptionItem
                                                      main={
                                                                        <SelectableText>
                                                                                          <NumericText
                                                                                                            maxDecimalPlaces={18}
                                                                                                            value="0.1"
                                                                                          />
                                                                                           
                                                                                          ETH
                                                                        </SelectableText>
                                                      }
                                                      subtitle={
                                                                        <NumericText
                                                                                          type="currency"
                                                                                          value="41.2"
                                                                        />
                                                      }
                                    />
                  </Row>
                  <Row
                                    gutter={0}
                  >
                                    <style__StyledCol
                                                      span={12}
                                    >
                                                      nahmii_available
                                                       ETH 
                                                      balance_after
                                    </style__StyledCol>
                  </Row>
                  <Row
                                    gutter={0}
                  >
                                    <TransferDescriptionItem
                                                      main={
                                                                        <SelectableText>
                                                                                          <NumericText
                                                                                                            maxDecimalPlaces={18}
                                                                                                            value="0.1"
                                                                                          />
                                                                                           
                                                                                          ETH
                                                                        </SelectableText>
                                                      }
                                                      subtitle={
                                                                        <NumericText
                                                                                          type="currency"
                                                                                          value="41.2"
                                                                        />
                                                      }
                                    />
                  </Row>
</div>,
                false,
                <Row
                  gutter={0}
>
                  <style__HWPromptWrapper>
                                    <Connect(HWPromptContainer) />
                  </style__HWPromptWrapper>
                  <div
                                    style={
                                                      Object {
                                                                        "display": "flex",
                                                                        "flexDirection": "column",
                                                                        "marginTop": "2rem",
                                                                      }
                                    }
                  >
                                    <div
                                                      style={
                                                                        Object {
                                                                                          "display": "flex",
                                                                                          "flexDirection": "column",
                                                                                        }
                                                      }
                                    >
                                                      <span>
                                                                        <Text
                                                                                          large={true}
                                                                        >
                                                                                          waiting_for_deposit_to_be {"ratio":"2/2"} mined...
                                                                        </Text>
                                                                        <Icon
                                                                                          style={
                                                                                                            Object {
                                                                                                                              "color": "white",
                                                                                                                              "fontSize": "1.5rem",
                                                                                                                              "marginLeft": "1rem",
                                                                                                                            }
                                                                                          }
                                                                                          type="loading"
                                                                        />
                                                      </span>
                                                      <a
                                                                        onClick={[Function]}
                                                                        role="link"
                                                                        tabIndex={0}
                                                      >
                                                                        Track progress on Etherscan
                                                      </a>
                                    </div>
                  </div>
</Row>,
                <SectionHeading
                  style={
                                    Object {
                                                      "marginTop": "2rem",
                                                      "maxWidth": "25rem",
                                                    }
                  }
>
                  deposits_note
</SectionHeading>,
              ],
              "style": Object {
                "minWidth": "34rem",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    deposit
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "deposit",
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": "deposit",
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main={
                                        <SelectableText>
                                                            <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0"
                                                            />
                                                             
                                                            ETH
                                        </SelectableText>
                    }
                    subtitle={
                                        <NumericText
                                                            type="currency"
                                                            value="0"
                                        />
                    }
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": <SelectableText>
                      <NumericText
                                            maxDecimalPlaces={18}
                                            value="0"
                      />
                       
                      ETH
</SelectableText>,
                    "subtitle": <NumericText
                      type="currency"
                      value="0"
/>,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    <TooltipText
                                        details="max_base_layer_fee_explain"
                    >
                                        max_base_layer_fee
                    </TooltipText>
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TooltipText
                      details="max_base_layer_fee_explain"
>
                      max_base_layer_fee
</TooltipText>,
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "max_base_layer_fee",
                      "details": "max_base_layer_fee_explain",
                    },
                    "ref": null,
                    "rendered": "max_base_layer_fee",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main={
                                        <SelectableText>
                                                            <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.006"
                                                            />
                                                             
                                                            ETH
                                        </SelectableText>
                    }
                    subtitle={
                                        <NumericText
                                                            type="currency"
                                                            value="2.472"
                                        />
                    }
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": <SelectableText>
                      <NumericText
                                            maxDecimalPlaces={18}
                                            value="0.006"
                      />
                       
                      ETH
</SelectableText>,
                    "subtitle": <NumericText
                      type="currency"
                      value="2.472"
/>,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    base_layer
                     ETH 
                    balance_before
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "base_layer",
                      " ETH ",
                      "balance_before",
                    ],
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Array [
                    "base_layer",
                    " ETH ",
                    "balance_before",
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main={
                                        <SelectableText>
                                                            <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.198937"
                                                            />
                                                             
                                                            ETH
                                        </SelectableText>
                    }
                    subtitle={
                                        <NumericText
                                                            type="currency"
                                                            value="81.962044"
                                        />
                    }
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": <SelectableText>
                      <NumericText
                                            maxDecimalPlaces={18}
                                            value="0.198937"
                      />
                       
                      ETH
</SelectableText>,
                    "subtitle": <NumericText
                      type="currency"
                      value="81.962044"
/>,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    base_layer
                     ETH 
                    balance_after
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "base_layer",
                      " ETH ",
                      "balance_after",
                    ],
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Array [
                    "base_layer",
                    " ETH ",
                    "balance_after",
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main={
                                        <SelectableText>
                                                            <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.192937"
                                                            />
                                                             
                                                            ETH
                                        </SelectableText>
                    }
                    subtitle={
                                        <NumericText
                                                            type="currency"
                                                            value="79.490044"
                                        />
                    }
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": <SelectableText>
                      <NumericText
                                            maxDecimalPlaces={18}
                                            value="0.192937"
                      />
                       
                      ETH
</SelectableText>,
                    "subtitle": <NumericText
                      type="currency"
                      value="79.490044"
/>,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Row
                      gutter={0}
>
                      <style__StyledCol
                                            span={12}
                      >
                                            nahmii_available
                                             ETH 
                                            balance_before
                      </style__StyledCol>
</Row>,
                    <Row
                      gutter={0}
>
                      <TransferDescriptionItem
                                            main={
                                                                  <SelectableText>
                                                                                        <NumericText
                                                                                                              maxDecimalPlaces={18}
                                                                                                              value="0.1"
                                                                                        />
                                                                                         
                                                                                        ETH
                                                                  </SelectableText>
                                            }
                                            subtitle={
                                                                  <NumericText
                                                                                        type="currency"
                                                                                        value="41.2"
                                                                  />
                                            }
                      />
</Row>,
                    <Row
                      gutter={0}
>
                      <style__StyledCol
                                            span={12}
                      >
                                            nahmii_available
                                             ETH 
                                            balance_after
                      </style__StyledCol>
</Row>,
                    <Row
                      gutter={0}
>
                      <TransferDescriptionItem
                                            main={
                                                                  <SelectableText>
                                                                                        <NumericText
                                                                                                              maxDecimalPlaces={18}
                                                                                                              value="0.1"
                                                                                        />
                                                                                         
                                                                                        ETH
                                                                  </SelectableText>
                                            }
                                            subtitle={
                                                                  <NumericText
                                                                                        type="currency"
                                                                                        value="41.2"
                                                                  />
                                            }
                      />
</Row>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <style__StyledCol
                        span={12}
>
                        nahmii_available
                         ETH 
                        balance_before
</style__StyledCol>,
                      "gutter": 0,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          "nahmii_available",
                          " ETH ",
                          "balance_before",
                        ],
                        "span": 12,
                      },
                      "ref": null,
                      "rendered": Array [
                        "nahmii_available",
                        " ETH ",
                        "balance_before",
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <TransferDescriptionItem
                        main={
                                                <SelectableText>
                                                                        <NumericText
                                                                                                maxDecimalPlaces={18}
                                                                                                value="0.1"
                                                                        />
                                                                         
                                                                        ETH
                                                </SelectableText>
                        }
                        subtitle={
                                                <NumericText
                                                                        type="currency"
                                                                        value="41.2"
                                                />
                        }
/>,
                      "gutter": 0,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "main": <SelectableText>
                          <NumericText
                                                    maxDecimalPlaces={18}
                                                    value="0.1"
                          />
                           
                          ETH
</SelectableText>,
                        "subtitle": <NumericText
                          type="currency"
                          value="41.2"
/>,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <style__StyledCol
                        span={12}
>
                        nahmii_available
                         ETH 
                        balance_after
</style__StyledCol>,
                      "gutter": 0,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          "nahmii_available",
                          " ETH ",
                          "balance_after",
                        ],
                        "span": 12,
                      },
                      "ref": null,
                      "rendered": Array [
                        "nahmii_available",
                        " ETH ",
                        "balance_after",
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <TransferDescriptionItem
                        main={
                                                <SelectableText>
                                                                        <NumericText
                                                                                                maxDecimalPlaces={18}
                                                                                                value="0.1"
                                                                        />
                                                                         
                                                                        ETH
                                                </SelectableText>
                        }
                        subtitle={
                                                <NumericText
                                                                        type="currency"
                                                                        value="41.2"
                                                />
                        }
/>,
                      "gutter": 0,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "main": <SelectableText>
                          <NumericText
                                                    maxDecimalPlaces={18}
                                                    value="0.1"
                          />
                           
                          ETH
</SelectableText>,
                        "subtitle": <NumericText
                          type="currency"
                          value="41.2"
/>,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              false,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <style__HWPromptWrapper>
                      <Connect(HWPromptContainer) />
</style__HWPromptWrapper>,
                    <div
                      style={
                                            Object {
                                                                  "display": "flex",
                                                                  "flexDirection": "column",
                                                                  "marginTop": "2rem",
                                                                }
                      }
>
                      <div
                                            style={
                                                                  Object {
                                                                                        "display": "flex",
                                                                                        "flexDirection": "column",
                                                                                      }
                                            }
                      >
                                            <span>
                                                                  <Text
                                                                                        large={true}
                                                                  >
                                                                                        waiting_for_deposit_to_be {"ratio":"2/2"} mined...
                                                                  </Text>
                                                                  <Icon
                                                                                        style={
                                                                                                              Object {
                                                                                                                                    "color": "white",
                                                                                                                                    "fontSize": "1.5rem",
                                                                                                                                    "marginLeft": "1rem",
                                                                                                                                  }
                                                                                        }
                                                                                        type="loading"
                                                                  />
                                            </span>
                                            <a
                                                                  onClick={[Function]}
                                                                  role="link"
                                                                  tabIndex={0}
                                            >
                                                                  Track progress on Etherscan
                                            </a>
                      </div>
</div>,
                  ],
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Connect(HWPromptContainer) />,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <div
                        style={
                                                Object {
                                                                        "display": "flex",
                                                                        "flexDirection": "column",
                                                                      }
                        }
>
                        <span>
                                                <Text
                                                                        large={true}
                                                >
                                                                        waiting_for_deposit_to_be {"ratio":"2/2"} mined...
                                                </Text>
                                                <Icon
                                                                        style={
                                                                                                Object {
                                                                                                                        "color": "white",
                                                                                                                        "fontSize": "1.5rem",
                                                                                                                        "marginLeft": "1rem",
                                                                                                                      }
                                                                        }
                                                                        type="loading"
                                                />
                        </span>
                        <a
                                                onClick={[Function]}
                                                role="link"
                                                tabIndex={0}
                        >
                                                Track progress on Etherscan
                        </a>
</div>,
                      "style": Object {
                        "display": "flex",
                        "flexDirection": "column",
                        "marginTop": "2rem",
                      },
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <span>
                            <Text
                                                        large={true}
                            >
                                                        waiting_for_deposit_to_be {"ratio":"2/2"} mined...
                            </Text>
                            <Icon
                                                        style={
                                                                                    Object {
                                                                                                                "color": "white",
                                                                                                                "fontSize": "1.5rem",
                                                                                                                "marginLeft": "1rem",
                                                                                                              }
                                                        }
                                                        type="loading"
                            />
</span>,
                          <a
                            onClick={[Function]}
                            role="link"
                            tabIndex={0}
>
                            Track progress on Etherscan
</a>,
                        ],
                        "style": Object {
                          "display": "flex",
                          "flexDirection": "column",
                        },
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <Text
                                large={true}
>
                                waiting_for_deposit_to_be {"ratio":"2/2"} mined...
</Text>,
                              <Icon
                                style={
                                                                Object {
                                                                                                "color": "white",
                                                                                                "fontSize": "1.5rem",
                                                                                                "marginLeft": "1rem",
                                                                                              }
                                }
                                type="loading"
/>,
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {
                                "children": "waiting_for_deposit_to_be {\\"ratio\\":\\"2/2\\"} mined...",
                                "large": true,
                              },
                              "ref": null,
                              "rendered": "waiting_for_deposit_to_be {\\"ratio\\":\\"2/2\\"} mined...",
                              "type": [Function],
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "function",
                              "props": Object {
                                "style": Object {
                                  "color": "white",
                                  "fontSize": "1.5rem",
                                  "marginLeft": "1rem",
                                },
                                "type": "loading",
                              },
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                          ],
                          "type": "span",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Track progress on Etherscan",
                            "onClick": [Function],
                            "role": "link",
                            "tabIndex": 0,
                          },
                          "ref": null,
                          "rendered": "Track progress on Etherscan",
                          "type": "a",
                        },
                      ],
                      "type": "div",
                    },
                    "type": "div",
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "deposits_note",
                  "style": Object {
                    "marginTop": "2rem",
                    "maxWidth": "25rem",
                  },
                },
                "ref": null,
                "rendered": "deposits_note",
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<NahmiiDeposit /> should render correctly when depositing eth 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NahmiiDeposit
    currentNetwork={
        Object {
            "apiDomain": "api2.dev.hubii.net",
            "defaultNahmiiProvider": NahmiiProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "connection": Object {
                "url": "http://geth-ropsten.dev.hubii.net",
              },
              "ready": Promise {},
            },
            "identityServiceAppId": "appid",
            "identityServiceSecret": "secret",
            "nahmiiProvider": NahmiiProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "connection": Object {
                "url": "http://geth-ropsten.dev.hubii.net",
              },
              "ready": Promise {},
            },
            "name": "ropsten",
            "provider": FallbackProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "_providers": Array [
                InfuraProvider {
                  "_balances": Object {},
                  "_emitted": Object {
                    "block": -2,
                  },
                  "_events": Array [],
                  "_fastQueryDate": 0,
                  "_lastBlockNumber": -2,
                  "_network": Object {
                    "_defaultProvider": [Function],
                    "chainId": 3,
                    "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                    "name": "ropsten",
                  },
                  "_pollingInterval": 4000,
                  "apiAccessToken": null,
                  "connection": Object {
                    "url": "https://ropsten.infura.io/",
                  },
                  "ready": Promise {},
                },
                EtherscanProvider {
                  "_balances": Object {},
                  "_emitted": Object {
                    "block": -2,
                  },
                  "_events": Array [],
                  "_fastQueryDate": 0,
                  "_lastBlockNumber": -2,
                  "_network": Object {
                    "_defaultProvider": [Function],
                    "chainId": 3,
                    "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                    "name": "ropsten",
                  },
                  "_pollingInterval": 4000,
                  "apiKey": undefined,
                  "baseUrl": "https://api-ropsten.etherscan.io",
                  "ready": Promise {},
                },
              ],
              "ready": Promise {},
            },
            "walletApiEndpoint": [Function],
          }
    }
    currentWalletWithInfo={
        Immutable.Map {
            deviceId: "041ca8e96420e95a106e8c9bb3c9fb9e8c00d4b11cac562888c898000b5cec366c03a0f84574716fac6c7a7df47a925f0e30f5286546adf3179b5a08dc9d8e09da",
            address: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
            type: "lns",
            name: "lns",
            derivationPath: "m/44'/60'/0'/0",
            transactions: Immutable.Map {
                loading: false,
                error: null,
                transactions: Immutable.List [
                    Immutable.Map {
                        transfers: Immutable.Map {
                            single: "2111000000",
                            total: "3111000000",
                        },
                        created: "2018-12-17T01:59:03.718Z",
                        decimalAmount: "0.000000002111",
                        counterpartyAddress: "0x4231676a35483638796e2af8ed2af0a41b097524",
                        nonce: 21,
                        currency: "0x0000000000000000000000000000000000000000",
                        layer: "nahmii",
                        sender: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                    Immutable.Map {
                                        originId: "0",
                                        figure: Immutable.Map {
                                            currency: Immutable.Map {
                                                ct: "0x0000000000000000000000000000000000000000",
                                                id: "0",
                                            },
                                            amount: "4121100",
                                        },
                                    },
                                ],
                                single: Immutable.Map {
                                    currency: Immutable.Map {
                                        ct: "0x0000000000000000000000000000000000000000",
                                        id: "0",
                                    },
                                    amount: "2111000",
                                },
                            },
                            wallet: "0x4231676a35483638796e2af8ed2af0a41b097524",
                            nonce: 7,
                            balances: Immutable.Map {
                                current: "999995875778900",
                                previous: "999997988889900",
                            },
                        },
                        timestamp: "2018-12-17T01:59:03.776Z",
                        seals: Immutable.Map {
                            wallet: Immutable.Map {
                                hash: "0x57d9cf4ffc4b2aecce23d2e56083c7b437f5e105be74c1cd17d8522999b5d0be",
                                signature: Immutable.Map {
                                    s: "0x395b632dab03b34321c1aed7dcbac4a1b87582904d2898645b3ec90505c44348",
                                    r: "0x01cda7bddbc7c2194dd395aac73eaf1ca6760bfef83689c5a1240f936f0200d4",
                                    v: 28,
                                },
                            },
                            operator: Immutable.Map {
                                hash: "0x99c1a3a1cd8b15cdb969270f6e8f7fdce5b9c8377a00c38d800b9982c98eec5a",
                                signature: Immutable.Map {
                                    s: "0x129c9e071467ee98ddd799fa1ed7b3cbda11486955b9360afd22ce0ff4d91aab",
                                    r: "0x4d22165ff7382f998107a87e800a11581e7b99fa67ab613656706105157e5ab9",
                                    v: 28,
                                },
                            },
                        },
                        blockNumber: 4643058,
                        amount: "2111000000",
                        symbol: "ETH",
                        recipient: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                ],
                            },
                            wallet: "0x1c7429f62595097315289cebac1fdbda587ad512",
                            nonce: 4,
                            balances: Immutable.Map {
                                current: "10013111000000",
                                previous: "10011000000000",
                            },
                        },
                        type: "received",
                        updated: "2018-12-17T01:59:03.776Z",
                        id: "5c1702e78d9ea3000ea459d9",
                        operatorId: "0",
                        confirmed: true,
                    },
                    Immutable.Map {
                        decimalAmount: "0.0000000001",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780091,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x0000000000000000000000000000000000000000",
                        layer: "baseLayer",
                        sender: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        timestamp: "2018-08-06T02:32:00.000Z",
                        amount: "100000000",
                        symbol: "ETH",
                        recipient: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        type: "received",
                    },
                    Immutable.Map {
                        transfers: Immutable.Map {
                            single: "10000000000000000",
                            total: "10000000000000000",
                        },
                        created: "2018-11-16T22:40:54.951Z",
                        decimalAmount: "0.01",
                        counterpartyAddress: "0xc5768cdeda275fe5536147a3fbc8cfb6b0d8ac48",
                        nonce: 18,
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        layer: "nahmii",
                        sender: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                    Immutable.Map {
                                        originId: "0",
                                        figure: Immutable.Map {
                                            currency: Immutable.Map {
                                                ct: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                                                id: "0",
                                            },
                                            amount: "10000000000000",
                                        },
                                    },
                                ],
                                single: Immutable.Map {
                                    currency: Immutable.Map {
                                        ct: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                                        id: "0",
                                    },
                                    amount: "10000000000000",
                                },
                            },
                            wallet: "0x1c7429f62595097315289cebac1fdbda587ad512",
                            nonce: 3,
                            balances: Immutable.Map {
                                current: "89990000000000000",
                                previous: "100000000000000000",
                            },
                        },
                        timestamp: "2018-11-16T22:40:55.049Z",
                        seals: Immutable.Map {
                            wallet: Immutable.Map {
                                hash: "0x0b7d6d30e9665016246e6370e82579a35bc4d9c0cf88c65b38d538f7ad8ee828",
                                signature: Immutable.Map {
                                    s: "0x7d60c93b9037be6d880bbe86f258d0e371ad4015fc2528cf1312d924f9e76245",
                                    r: "0x9c11c2a5244a741f67837eb6efc1f12396c19d2490ff2bd872dbd9643a7c1013",
                                    v: 27,
                                },
                            },
                            operator: Immutable.Map {
                                hash: "0x92b0e8b3c705449eea1bce2e517468cec521e6451d4a7e6c4fe4c4efe7df6ab4",
                                signature: Immutable.Map {
                                    s: "0x09ad154d886899b36f15a2be68ddb61c15afe185acd498a9b6bb2577f317a942",
                                    r: "0x80d8f5e899f16c9a4abcc72d23399d4ddd3c08a29dae8233a46179ef54cc189c",
                                    v: 27,
                                },
                            },
                        },
                        blockNumber: 3780090,
                        amount: "10000000000000000",
                        symbol: "BOKKY",
                        recipient: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                ],
                            },
                            wallet: "0xc5768cdeda275fe5536147a3fbc8cfb6b0d8ac48",
                            nonce: 2,
                            balances: Immutable.Map {
                                current: "10000000000000000",
                                previous: "0",
                            },
                        },
                        type: "sent",
                        updated: "2018-11-16T22:40:55.049Z",
                        id: "5c16d4768d9ea3000ea45690",
                        operatorId: "0",
                        confirmed: true,
                    },
                    Immutable.Map {
                        decimalAmount: "0.000000000000000005",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780089,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        layer: "baseLayer",
                        sender: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        timestamp: "2018-08-06T02:32:00.000Z",
                        amount: "5",
                        symbol: "BOKKY",
                        recipient: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        type: "sent",
                    },
                ],
            },
            balances: Immutable.Map {
                baseLayer: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.198937",
                            currency: "0x0000000000000000000000000000000000000000",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.198937",
                                btc: "0.00198937",
                                usd: "81.962044",
                            },
                        },
                        Immutable.Map {
                            balance: "1.231288e-12",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "1.231288e-13",
                                btc: "1.231288e-15",
                                usd: "1.231288e-12",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1989370000001231288",
                        btc: "0.001989370000001231288",
                        usd: "81.962044000001231288",
                    },
                },
                nahmiiAvailable: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.113",
                        btc: "0.00113",
                        usd: "41.33",
                    },
                },
                nahmiiStaging: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1",
                        btc: "0.001",
                        usd: "41.2",
                    },
                },
                nahmiiStaged: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                    ],
                    total: Immutable.Map {
                        eth: "0",
                        btc: "0",
                        usd: "0",
                    },
                },
                nahmiiCombined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.2",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.2",
                                btc: "0.002",
                                usd: "82.4",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.213",
                        btc: "0.00213",
                        usd: "82.53",
                    },
                },
                combined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.398937",
                            currency: "0x0000000000000000000000000000000000000000",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.398937",
                                btc: "0.00398937",
                                usd: "164.362044",
                            },
                        },
                        Immutable.Map {
                            balance: "0.130000000001231288",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.0130000000001231288",
                                btc: "0.000130000000001231288",
                                usd: "0.130000000001231288",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.4119370000001231288",
                        btc: "0.004119370000001231288",
                        usd: "164.492044000001231288",
                    },
                },
            },
        }
    }
    depositStatus={
        Immutable.Map {
            depositingEth: true,
            approvingTokenDeposit: false,
            completingTokenDeposit: false,
            error: null,
        }
    }
    gasStatistics={
        Immutable.Map {
        }
    }
    goWalletDetails={[Function]}
    intl={
        Object {
            "formatMessage": [Function],
            "formatNumber": [Function],
          }
    }
    ledgerNanoSInfo={
        Immutable.Map {
            status: "disconnected",
            addresses: Immutable.Map {
            },
            id: null,
            confTxOnDevice: false,
        }
    }
    nahmiiDeposit={[Function]}
    prices={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    eth: 0.1,
                    btc: 0.001,
                    usd: 1,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x0000000000000000000000000000000000000000",
                    eth: 1,
                    btc: 0.01,
                    usd: 412,
                },
            ],
        }
    }
    supportedAssets={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    symbol: "My20",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    symbol: "HBT",
                    decimals: 15,
                    color: "0063A5",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    symbol: "SBT",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    symbol: "WETH",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    symbol: "BOKKY",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x0000000000000000000000000000000000000000",
                    symbol: "ETH",
                    decimals: 18,
                    color: "5C78E4",
                },
            ],
        }
    }
    trezorInfo={
        Immutable.Map {
            status: "disconnected",
            connected: false,
            addresses: Immutable.Map {
            },
            id: "ajlsdfkjas",
            confTxOnDevice: false,
        }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <div
        style={
                Object {
                        "display": "flex",
                        "flex": "1",
                        "flexWrap": "wrap",
                        "marginTop": "0.5rem",
                      }
        }
>
        <div
                style={
                        Object {
                                "flex": "1",
                                "marginBottom": "3rem",
                                "marginRight": "2rem",
                              }
                }
        >
                <Form__FlexForm>
                        <Form__FormItem
                                colon={false}
                                label={
                                        <Form__FormItemLabel>
                                                select_asset_to_deposit
                                        </Form__FormItemLabel>
                                }
                        >
                                <style__Image
                                        alt="logo"
                                        onError={[Function]}
                                        src="/public/images/assets/ETH.svg"
                                />
                                <Select
                                        defaultValue="ETH"
                                        onSelect={[Function]}
                                        style={
                                                Object {
                                                        "paddingLeft": "0.5rem",
                                                      }
                                        }
                                >
                                        <Option
                                                value="ETH"
                                        >
                                                ETH
                                        </Option>
                                        <Option
                                                value="BOKKY"
                                        >
                                                BOKKY
                                        </Option>
                                </Select>
                        </Form__FormItem>
                        <Form__FormItem
                                colon={false}
                                help={
                                        <HelperTextComponent
                                                left="$0.00"
                                                right="usd"
                                        />
                                }
                                label={
                                        <Form__FormItemLabel>
                                                enter_amount
                                        </Form__FormItemLabel>
                                }
                        >
                                <Input
                                        defaultValue="0"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        value="0"
                                />
                        </Form__FormItem>
                        <GasOptions
                                defaultGasLimit={600000}
                                defaultGasPrice={10}
                                defaultOption="average"
                                gasStatistics={undefined}
                                intl={
                                        Object {
                                                "formatMessage": [Function],
                                                "formatNumber": [Function],
                                              }
                                }
                                onChange={[Function]}
                        />
                        <style__DollarPrice>
                                1 ETH = 
                                <style__StyledNumericText
                                        type="currency"
                                        value="412"
                                />
                        </style__DollarPrice>
                </Form__FlexForm>
        </div>
        <div
                style={
                        Object {
                                "minWidth": "34rem",
                              }
                }
        >
                <Row
                        gutter={0}
                >
                        <style__StyledCol
                                span={12}
                        >
                                deposit
                        </style__StyledCol>
                </Row>
                <Row
                        gutter={0}
                >
                        <TransferDescriptionItem
                                main={
                                        <SelectableText>
                                                <NumericText
                                                        maxDecimalPlaces={18}
                                                        value="0"
                                                />
                                                 
                                                ETH
                                        </SelectableText>
                                }
                                subtitle={
                                        <NumericText
                                                type="currency"
                                                value="0"
                                        />
                                }
                        />
                </Row>
                <Row
                        gutter={0}
                >
                        <style__StyledCol
                                span={12}
                        >
                                <TooltipText
                                        details="max_base_layer_fee_explain"
                                >
                                        max_base_layer_fee
                                </TooltipText>
                        </style__StyledCol>
                </Row>
                <Row
                        gutter={0}
                >
                        <TransferDescriptionItem
                                main={
                                        <SelectableText>
                                                <NumericText
                                                        maxDecimalPlaces={18}
                                                        value="0.006"
                                                />
                                                 
                                                ETH
                                        </SelectableText>
                                }
                                subtitle={
                                        <NumericText
                                                type="currency"
                                                value="2.472"
                                        />
                                }
                        />
                </Row>
                <Row
                        gutter={0}
                >
                        <style__StyledCol
                                span={12}
                        >
                                base_layer
                                 ETH 
                                balance_before
                        </style__StyledCol>
                </Row>
                <Row
                        gutter={0}
                >
                        <TransferDescriptionItem
                                main={
                                        <SelectableText>
                                                <NumericText
                                                        maxDecimalPlaces={18}
                                                        value="0.198937"
                                                />
                                                 
                                                ETH
                                        </SelectableText>
                                }
                                subtitle={
                                        <NumericText
                                                type="currency"
                                                value="81.962044"
                                        />
                                }
                        />
                </Row>
                <Row
                        gutter={0}
                >
                        <style__StyledCol
                                span={12}
                        >
                                base_layer
                                 ETH 
                                balance_after
                        </style__StyledCol>
                </Row>
                <Row
                        gutter={0}
                >
                        <TransferDescriptionItem
                                main={
                                        <SelectableText>
                                                <NumericText
                                                        maxDecimalPlaces={18}
                                                        value="0.192937"
                                                />
                                                 
                                                ETH
                                        </SelectableText>
                                }
                                subtitle={
                                        <NumericText
                                                type="currency"
                                                value="79.490044"
                                        />
                                }
                        />
                </Row>
                <div>
                        <Row
                                gutter={0}
                        >
                                <style__StyledCol
                                        span={12}
                                >
                                        nahmii_available
                                         ETH 
                                        balance_before
                                </style__StyledCol>
                        </Row>
                        <Row
                                gutter={0}
                        >
                                <TransferDescriptionItem
                                        main={
                                                <SelectableText>
                                                        <NumericText
                                                                maxDecimalPlaces={18}
                                                                value="0.1"
                                                        />
                                                         
                                                        ETH
                                                </SelectableText>
                                        }
                                        subtitle={
                                                <NumericText
                                                        type="currency"
                                                        value="41.2"
                                                />
                                        }
                                />
                        </Row>
                        <Row
                                gutter={0}
                        >
                                <style__StyledCol
                                        span={12}
                                >
                                        nahmii_available
                                         ETH 
                                        balance_after
                                </style__StyledCol>
                        </Row>
                        <Row
                                gutter={0}
                        >
                                <TransferDescriptionItem
                                        main={
                                                <SelectableText>
                                                        <NumericText
                                                                maxDecimalPlaces={18}
                                                                value="0.1"
                                                        />
                                                         
                                                        ETH
                                                </SelectableText>
                                        }
                                        subtitle={
                                                <NumericText
                                                        type="currency"
                                                        value="41.2"
                                                />
                                        }
                                />
                        </Row>
                </div>
                <Row
                        gutter={0}
                >
                        <style__HWPromptWrapper>
                                <Connect(HWPromptContainer) />
                        </style__HWPromptWrapper>
                        <div
                                style={
                                        Object {
                                                "display": "flex",
                                                "flexDirection": "column",
                                                "marginTop": "2rem",
                                              }
                                }
                        >
                                <div
                                        style={
                                                Object {
                                                        "display": "flex",
                                                        "flexDirection": "column",
                                                      }
                                        }
                                >
                                        <span>
                                                <Text
                                                        large={true}
                                                >
                                                        waiting_for_deposit_to_be {"ratio":"1/1"} mined...
                                                </Text>
                                                <Icon
                                                        style={
                                                                Object {
                                                                        "color": "white",
                                                                        "fontSize": "1.5rem",
                                                                        "marginLeft": "1rem",
                                                                      }
                                                        }
                                                        type="loading"
                                                />
                                        </span>
                                        <a
                                                onClick={[Function]}
                                                role="link"
                                                tabIndex={0}
                                        >
                                                Track progress on Etherscan
                                        </a>
                                </div>
                        </div>
                </Row>
                <SectionHeading
                        style={
                                Object {
                                        "marginTop": "2rem",
                                        "maxWidth": "25rem",
                                      }
                        }
                >
                        deposits_note
                </SectionHeading>
        </div>
</div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            style={
                        Object {
                                    "flex": "1",
                                    "marginBottom": "3rem",
                                    "marginRight": "2rem",
                                  }
            }
>
            <Form__FlexForm>
                        <Form__FormItem
                                    colon={false}
                                    label={
                                                <Form__FormItemLabel>
                                                            select_asset_to_deposit
                                                </Form__FormItemLabel>
                                    }
                        >
                                    <style__Image
                                                alt="logo"
                                                onError={[Function]}
                                                src="/public/images/assets/ETH.svg"
                                    />
                                    <Select
                                                defaultValue="ETH"
                                                onSelect={[Function]}
                                                style={
                                                            Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                                                }
                                    >
                                                <Option
                                                            value="ETH"
                                                >
                                                            ETH
                                                </Option>
                                                <Option
                                                            value="BOKKY"
                                                >
                                                            BOKKY
                                                </Option>
                                    </Select>
                        </Form__FormItem>
                        <Form__FormItem
                                    colon={false}
                                    help={
                                                <HelperTextComponent
                                                            left="$0.00"
                                                            right="usd"
                                                />
                                    }
                                    label={
                                                <Form__FormItemLabel>
                                                            enter_amount
                                                </Form__FormItemLabel>
                                    }
                        >
                                    <Input
                                                defaultValue="0"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value="0"
                                    />
                        </Form__FormItem>
                        <GasOptions
                                    defaultGasLimit={600000}
                                    defaultGasPrice={10}
                                    defaultOption="average"
                                    gasStatistics={undefined}
                                    intl={
                                                Object {
                                                            "formatMessage": [Function],
                                                            "formatNumber": [Function],
                                                          }
                                    }
                                    onChange={[Function]}
                        />
                        <style__DollarPrice>
                                    1 ETH = 
                                    <style__StyledNumericText
                                                type="currency"
                                                value="412"
                                    />
                        </style__DollarPrice>
            </Form__FlexForm>
</div>,
          <div
            style={
                        Object {
                                    "minWidth": "34rem",
                                  }
            }
>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    deposit
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main={
                                                <SelectableText>
                                                            <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0"
                                                            />
                                                             
                                                            ETH
                                                </SelectableText>
                                    }
                                    subtitle={
                                                <NumericText
                                                            type="currency"
                                                            value="0"
                                                />
                                    }
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    <TooltipText
                                                details="max_base_layer_fee_explain"
                                    >
                                                max_base_layer_fee
                                    </TooltipText>
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main={
                                                <SelectableText>
                                                            <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.006"
                                                            />
                                                             
                                                            ETH
                                                </SelectableText>
                                    }
                                    subtitle={
                                                <NumericText
                                                            type="currency"
                                                            value="2.472"
                                                />
                                    }
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    base_layer
                                     ETH 
                                    balance_before
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main={
                                                <SelectableText>
                                                            <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.198937"
                                                            />
                                                             
                                                            ETH
                                                </SelectableText>
                                    }
                                    subtitle={
                                                <NumericText
                                                            type="currency"
                                                            value="81.962044"
                                                />
                                    }
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    base_layer
                                     ETH 
                                    balance_after
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main={
                                                <SelectableText>
                                                            <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.192937"
                                                            />
                                                             
                                                            ETH
                                                </SelectableText>
                                    }
                                    subtitle={
                                                <NumericText
                                                            type="currency"
                                                            value="79.490044"
                                                />
                                    }
                        />
            </Row>
            <div>
                        <Row
                                    gutter={0}
                        >
                                    <style__StyledCol
                                                span={12}
                                    >
                                                nahmii_available
                                                 ETH 
                                                balance_before
                                    </style__StyledCol>
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <TransferDescriptionItem
                                                main={
                                                            <SelectableText>
                                                                        <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.1"
                                                                        />
                                                                         
                                                                        ETH
                                                            </SelectableText>
                                                }
                                                subtitle={
                                                            <NumericText
                                                                        type="currency"
                                                                        value="41.2"
                                                            />
                                                }
                                    />
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <style__StyledCol
                                                span={12}
                                    >
                                                nahmii_available
                                                 ETH 
                                                balance_after
                                    </style__StyledCol>
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <TransferDescriptionItem
                                                main={
                                                            <SelectableText>
                                                                        <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.1"
                                                                        />
                                                                         
                                                                        ETH
                                                            </SelectableText>
                                                }
                                                subtitle={
                                                            <NumericText
                                                                        type="currency"
                                                                        value="41.2"
                                                            />
                                                }
                                    />
                        </Row>
            </div>
            <Row
                        gutter={0}
            >
                        <style__HWPromptWrapper>
                                    <Connect(HWPromptContainer) />
                        </style__HWPromptWrapper>
                        <div
                                    style={
                                                Object {
                                                            "display": "flex",
                                                            "flexDirection": "column",
                                                            "marginTop": "2rem",
                                                          }
                                    }
                        >
                                    <div
                                                style={
                                                            Object {
                                                                        "display": "flex",
                                                                        "flexDirection": "column",
                                                                      }
                                                }
                                    >
                                                <span>
                                                            <Text
                                                                        large={true}
                                                            >
                                                                        waiting_for_deposit_to_be {"ratio":"1/1"} mined...
                                                            </Text>
                                                            <Icon
                                                                        style={
                                                                                    Object {
                                                                                                "color": "white",
                                                                                                "fontSize": "1.5rem",
                                                                                                "marginLeft": "1rem",
                                                                                              }
                                                                        }
                                                                        type="loading"
                                                            />
                                                </span>
                                                <a
                                                            onClick={[Function]}
                                                            role="link"
                                                            tabIndex={0}
                                                >
                                                            Track progress on Etherscan
                                                </a>
                                    </div>
                        </div>
            </Row>
            <SectionHeading
                        style={
                                    Object {
                                                "marginTop": "2rem",
                                                "maxWidth": "25rem",
                                              }
                        }
            >
                        deposits_note
            </SectionHeading>
</div>,
        ],
        "style": Object {
          "display": "flex",
          "flex": "1",
          "flexWrap": "wrap",
          "marginTop": "0.5rem",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Form__FlexForm>
              <Form__FormItem
                            colon={false}
                            label={
                                          <Form__FormItemLabel>
                                                        select_asset_to_deposit
                                          </Form__FormItemLabel>
                            }
              >
                            <style__Image
                                          alt="logo"
                                          onError={[Function]}
                                          src="/public/images/assets/ETH.svg"
                            />
                            <Select
                                          defaultValue="ETH"
                                          onSelect={[Function]}
                                          style={
                                                        Object {
                                                                      "paddingLeft": "0.5rem",
                                                                    }
                                          }
                            >
                                          <Option
                                                        value="ETH"
                                          >
                                                        ETH
                                          </Option>
                                          <Option
                                                        value="BOKKY"
                                          >
                                                        BOKKY
                                          </Option>
                            </Select>
              </Form__FormItem>
              <Form__FormItem
                            colon={false}
                            help={
                                          <HelperTextComponent
                                                        left="$0.00"
                                                        right="usd"
                                          />
                            }
                            label={
                                          <Form__FormItemLabel>
                                                        enter_amount
                                          </Form__FormItemLabel>
                            }
              >
                            <Input
                                          defaultValue="0"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          value="0"
                            />
              </Form__FormItem>
              <GasOptions
                            defaultGasLimit={600000}
                            defaultGasPrice={10}
                            defaultOption="average"
                            gasStatistics={undefined}
                            intl={
                                          Object {
                                                        "formatMessage": [Function],
                                                        "formatNumber": [Function],
                                                      }
                            }
                            onChange={[Function]}
              />
              <style__DollarPrice>
                            1 ETH = 
                            <style__StyledNumericText
                                          type="currency"
                                          value="412"
                            />
              </style__DollarPrice>
</Form__FlexForm>,
            "style": Object {
              "flex": "1",
              "marginBottom": "3rem",
              "marginRight": "2rem",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Form__FormItem
                  colon={false}
                  label={
                                    <Form__FormItemLabel>
                                                      select_asset_to_deposit
                                    </Form__FormItemLabel>
                  }
>
                  <style__Image
                                    alt="logo"
                                    onError={[Function]}
                                    src="/public/images/assets/ETH.svg"
                  />
                  <Select
                                    defaultValue="ETH"
                                    onSelect={[Function]}
                                    style={
                                                      Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                                    }
                  >
                                    <Option
                                                      value="ETH"
                                    >
                                                      ETH
                                    </Option>
                                    <Option
                                                      value="BOKKY"
                                    >
                                                      BOKKY
                                    </Option>
                  </Select>
</Form__FormItem>,
                <Form__FormItem
                  colon={false}
                  help={
                                    <HelperTextComponent
                                                      left="$0.00"
                                                      right="usd"
                                    />
                  }
                  label={
                                    <Form__FormItemLabel>
                                                      enter_amount
                                    </Form__FormItemLabel>
                  }
>
                  <Input
                                    defaultValue="0"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    value="0"
                  />
</Form__FormItem>,
                <GasOptions
                  defaultGasLimit={600000}
                  defaultGasPrice={10}
                  defaultOption="average"
                  gasStatistics={undefined}
                  intl={
                                    Object {
                                                      "formatMessage": [Function],
                                                      "formatNumber": [Function],
                                                    }
                  }
                  onChange={[Function]}
/>,
                <style__DollarPrice>
                  1 ETH = 
                  <style__StyledNumericText
                                    type="currency"
                                    value="412"
                  />
</style__DollarPrice>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <style__Image
                      alt="logo"
                      onError={[Function]}
                      src="/public/images/assets/ETH.svg"
/>,
                    <Select
                      defaultValue="ETH"
                      onSelect={[Function]}
                      style={
                                            Object {
                                                                  "paddingLeft": "0.5rem",
                                                                }
                      }
>
                      <Option
                                            value="ETH"
                      >
                                            ETH
                      </Option>
                      <Option
                                            value="BOKKY"
                      >
                                            BOKKY
                      </Option>
</Select>,
                  ],
                  "colon": false,
                  "label": <Form__FormItemLabel>
                    select_asset_to_deposit
</Form__FormItemLabel>,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "alt": "logo",
                      "onError": [Function],
                      "src": "/public/images/assets/ETH.svg",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <Option
                          value="ETH"
>
                          ETH
</Option>,
                        <Option
                          value="BOKKY"
>
                          BOKKY
</Option>,
                      ],
                      "defaultValue": "ETH",
                      "onSelect": [Function],
                      "style": Object {
                        "paddingLeft": "0.5rem",
                      },
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": "ETH",
                        "nodeType": "class",
                        "props": Object {
                          "children": "ETH",
                          "value": "ETH",
                        },
                        "ref": null,
                        "rendered": "ETH",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": "BOKKY",
                        "nodeType": "class",
                        "props": Object {
                          "children": "BOKKY",
                          "value": "BOKKY",
                        },
                        "ref": null,
                        "rendered": "BOKKY",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Input
                    defaultValue="0"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    value="0"
/>,
                  "colon": false,
                  "help": <HelperTextComponent
                    left="$0.00"
                    right="usd"
/>,
                  "label": <Form__FormItemLabel>
                    enter_amount
</Form__FormItemLabel>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "defaultValue": "0",
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "0",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "defaultGasLimit": 600000,
                  "defaultGasPrice": 10,
                  "defaultOption": "average",
                  "gasStatistics": undefined,
                  "intl": Object {
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                  },
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "1 ETH = ",
                    <style__StyledNumericText
                      type="currency"
                      value="412"
/>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "1 ETH = ",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "type": "currency",
                      "value": "412",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                deposit
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main={
                                                <SelectableText>
                                                                <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0"
                                                                />
                                                                 
                                                                ETH
                                                </SelectableText>
                                }
                                subtitle={
                                                <NumericText
                                                                type="currency"
                                                                value="0"
                                                />
                                }
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                <TooltipText
                                                details="max_base_layer_fee_explain"
                                >
                                                max_base_layer_fee
                                </TooltipText>
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main={
                                                <SelectableText>
                                                                <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.006"
                                                                />
                                                                 
                                                                ETH
                                                </SelectableText>
                                }
                                subtitle={
                                                <NumericText
                                                                type="currency"
                                                                value="2.472"
                                                />
                                }
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                base_layer
                                 ETH 
                                balance_before
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main={
                                                <SelectableText>
                                                                <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.198937"
                                                                />
                                                                 
                                                                ETH
                                                </SelectableText>
                                }
                                subtitle={
                                                <NumericText
                                                                type="currency"
                                                                value="81.962044"
                                                />
                                }
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                base_layer
                                 ETH 
                                balance_after
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main={
                                                <SelectableText>
                                                                <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.192937"
                                                                />
                                                                 
                                                                ETH
                                                </SelectableText>
                                }
                                subtitle={
                                                <NumericText
                                                                type="currency"
                                                                value="79.490044"
                                                />
                                }
                />
</Row>,
              <div>
                <Row
                                gutter={0}
                >
                                <style__StyledCol
                                                span={12}
                                >
                                                nahmii_available
                                                 ETH 
                                                balance_before
                                </style__StyledCol>
                </Row>
                <Row
                                gutter={0}
                >
                                <TransferDescriptionItem
                                                main={
                                                                <SelectableText>
                                                                                <NumericText
                                                                                                maxDecimalPlaces={18}
                                                                                                value="0.1"
                                                                                />
                                                                                 
                                                                                ETH
                                                                </SelectableText>
                                                }
                                                subtitle={
                                                                <NumericText
                                                                                type="currency"
                                                                                value="41.2"
                                                                />
                                                }
                                />
                </Row>
                <Row
                                gutter={0}
                >
                                <style__StyledCol
                                                span={12}
                                >
                                                nahmii_available
                                                 ETH 
                                                balance_after
                                </style__StyledCol>
                </Row>
                <Row
                                gutter={0}
                >
                                <TransferDescriptionItem
                                                main={
                                                                <SelectableText>
                                                                                <NumericText
                                                                                                maxDecimalPlaces={18}
                                                                                                value="0.1"
                                                                                />
                                                                                 
                                                                                ETH
                                                                </SelectableText>
                                                }
                                                subtitle={
                                                                <NumericText
                                                                                type="currency"
                                                                                value="41.2"
                                                                />
                                                }
                                />
                </Row>
</div>,
              false,
              <Row
                gutter={0}
>
                <style__HWPromptWrapper>
                                <Connect(HWPromptContainer) />
                </style__HWPromptWrapper>
                <div
                                style={
                                                Object {
                                                                "display": "flex",
                                                                "flexDirection": "column",
                                                                "marginTop": "2rem",
                                                              }
                                }
                >
                                <div
                                                style={
                                                                Object {
                                                                                "display": "flex",
                                                                                "flexDirection": "column",
                                                                              }
                                                }
                                >
                                                <span>
                                                                <Text
                                                                                large={true}
                                                                >
                                                                                waiting_for_deposit_to_be {"ratio":"1/1"} mined...
                                                                </Text>
                                                                <Icon
                                                                                style={
                                                                                                Object {
                                                                                                                "color": "white",
                                                                                                                "fontSize": "1.5rem",
                                                                                                                "marginLeft": "1rem",
                                                                                                              }
                                                                                }
                                                                                type="loading"
                                                                />
                                                </span>
                                                <a
                                                                onClick={[Function]}
                                                                role="link"
                                                                tabIndex={0}
                                                >
                                                                Track progress on Etherscan
                                                </a>
                                </div>
                </div>
</Row>,
              <SectionHeading
                style={
                                Object {
                                                "marginTop": "2rem",
                                                "maxWidth": "25rem",
                                              }
                }
>
                deposits_note
</SectionHeading>,
            ],
            "style": Object {
              "minWidth": "34rem",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  deposit
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "deposit",
                  "span": 12,
                },
                "ref": null,
                "rendered": "deposit",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main={
                                    <SelectableText>
                                                      <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0"
                                                      />
                                                       
                                                      ETH
                                    </SelectableText>
                  }
                  subtitle={
                                    <NumericText
                                                      type="currency"
                                                      value="0"
                                    />
                  }
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": <SelectableText>
                    <NumericText
                                        maxDecimalPlaces={18}
                                        value="0"
                    />
                     
                    ETH
</SelectableText>,
                  "subtitle": <NumericText
                    type="currency"
                    value="0"
/>,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  <TooltipText
                                    details="max_base_layer_fee_explain"
                  >
                                    max_base_layer_fee
                  </TooltipText>
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TooltipText
                    details="max_base_layer_fee_explain"
>
                    max_base_layer_fee
</TooltipText>,
                  "span": 12,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "max_base_layer_fee",
                    "details": "max_base_layer_fee_explain",
                  },
                  "ref": null,
                  "rendered": "max_base_layer_fee",
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main={
                                    <SelectableText>
                                                      <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.006"
                                                      />
                                                       
                                                      ETH
                                    </SelectableText>
                  }
                  subtitle={
                                    <NumericText
                                                      type="currency"
                                                      value="2.472"
                                    />
                  }
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": <SelectableText>
                    <NumericText
                                        maxDecimalPlaces={18}
                                        value="0.006"
                    />
                     
                    ETH
</SelectableText>,
                  "subtitle": <NumericText
                    type="currency"
                    value="2.472"
/>,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  base_layer
                   ETH 
                  balance_before
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "base_layer",
                    " ETH ",
                    "balance_before",
                  ],
                  "span": 12,
                },
                "ref": null,
                "rendered": Array [
                  "base_layer",
                  " ETH ",
                  "balance_before",
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main={
                                    <SelectableText>
                                                      <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.198937"
                                                      />
                                                       
                                                      ETH
                                    </SelectableText>
                  }
                  subtitle={
                                    <NumericText
                                                      type="currency"
                                                      value="81.962044"
                                    />
                  }
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": <SelectableText>
                    <NumericText
                                        maxDecimalPlaces={18}
                                        value="0.198937"
                    />
                     
                    ETH
</SelectableText>,
                  "subtitle": <NumericText
                    type="currency"
                    value="81.962044"
/>,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  base_layer
                   ETH 
                  balance_after
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "base_layer",
                    " ETH ",
                    "balance_after",
                  ],
                  "span": 12,
                },
                "ref": null,
                "rendered": Array [
                  "base_layer",
                  " ETH ",
                  "balance_after",
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main={
                                    <SelectableText>
                                                      <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.192937"
                                                      />
                                                       
                                                      ETH
                                    </SelectableText>
                  }
                  subtitle={
                                    <NumericText
                                                      type="currency"
                                                      value="79.490044"
                                    />
                  }
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": <SelectableText>
                    <NumericText
                                        maxDecimalPlaces={18}
                                        value="0.192937"
                    />
                     
                    ETH
</SelectableText>,
                  "subtitle": <NumericText
                    type="currency"
                    value="79.490044"
/>,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Row
                    gutter={0}
>
                    <style__StyledCol
                                        span={12}
                    >
                                        nahmii_available
                                         ETH 
                                        balance_before
                    </style__StyledCol>
</Row>,
                  <Row
                    gutter={0}
>
                    <TransferDescriptionItem
                                        main={
                                                            <SelectableText>
                                                                                <NumericText
                                                                                                    maxDecimalPlaces={18}
                                                                                                    value="0.1"
                                                                                />
                                                                                 
                                                                                ETH
                                                            </SelectableText>
                                        }
                                        subtitle={
                                                            <NumericText
                                                                                type="currency"
                                                                                value="41.2"
                                                            />
                                        }
                    />
</Row>,
                  <Row
                    gutter={0}
>
                    <style__StyledCol
                                        span={12}
                    >
                                        nahmii_available
                                         ETH 
                                        balance_after
                    </style__StyledCol>
</Row>,
                  <Row
                    gutter={0}
>
                    <TransferDescriptionItem
                                        main={
                                                            <SelectableText>
                                                                                <NumericText
                                                                                                    maxDecimalPlaces={18}
                                                                                                    value="0.1"
                                                                                />
                                                                                 
                                                                                ETH
                                                            </SelectableText>
                                        }
                                        subtitle={
                                                            <NumericText
                                                                                type="currency"
                                                                                value="41.2"
                                                            />
                                        }
                    />
</Row>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <style__StyledCol
                      span={12}
>
                      nahmii_available
                       ETH 
                      balance_before
</style__StyledCol>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "nahmii_available",
                        " ETH ",
                        "balance_before",
                      ],
                      "span": 12,
                    },
                    "ref": null,
                    "rendered": Array [
                      "nahmii_available",
                      " ETH ",
                      "balance_before",
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TransferDescriptionItem
                      main={
                                            <SelectableText>
                                                                  <NumericText
                                                                                        maxDecimalPlaces={18}
                                                                                        value="0.1"
                                                                  />
                                                                   
                                                                  ETH
                                            </SelectableText>
                      }
                      subtitle={
                                            <NumericText
                                                                  type="currency"
                                                                  value="41.2"
                                            />
                      }
/>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "main": <SelectableText>
                        <NumericText
                                                maxDecimalPlaces={18}
                                                value="0.1"
                        />
                         
                        ETH
</SelectableText>,
                      "subtitle": <NumericText
                        type="currency"
                        value="41.2"
/>,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <style__StyledCol
                      span={12}
>
                      nahmii_available
                       ETH 
                      balance_after
</style__StyledCol>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "nahmii_available",
                        " ETH ",
                        "balance_after",
                      ],
                      "span": 12,
                    },
                    "ref": null,
                    "rendered": Array [
                      "nahmii_available",
                      " ETH ",
                      "balance_after",
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TransferDescriptionItem
                      main={
                                            <SelectableText>
                                                                  <NumericText
                                                                                        maxDecimalPlaces={18}
                                                                                        value="0.1"
                                                                  />
                                                                   
                                                                  ETH
                                            </SelectableText>
                      }
                      subtitle={
                                            <NumericText
                                                                  type="currency"
                                                                  value="41.2"
                                            />
                      }
/>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "main": <SelectableText>
                        <NumericText
                                                maxDecimalPlaces={18}
                                                value="0.1"
                        />
                         
                        ETH
</SelectableText>,
                      "subtitle": <NumericText
                        type="currency"
                        value="41.2"
/>,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <style__HWPromptWrapper>
                    <Connect(HWPromptContainer) />
</style__HWPromptWrapper>,
                  <div
                    style={
                                        Object {
                                                            "display": "flex",
                                                            "flexDirection": "column",
                                                            "marginTop": "2rem",
                                                          }
                    }
>
                    <div
                                        style={
                                                            Object {
                                                                                "display": "flex",
                                                                                "flexDirection": "column",
                                                                              }
                                        }
                    >
                                        <span>
                                                            <Text
                                                                                large={true}
                                                            >
                                                                                waiting_for_deposit_to_be {"ratio":"1/1"} mined...
                                                            </Text>
                                                            <Icon
                                                                                style={
                                                                                                    Object {
                                                                                                                        "color": "white",
                                                                                                                        "fontSize": "1.5rem",
                                                                                                                        "marginLeft": "1rem",
                                                                                                                      }
                                                                                }
                                                                                type="loading"
                                                            />
                                        </span>
                                        <a
                                                            onClick={[Function]}
                                                            role="link"
                                                            tabIndex={0}
                                        >
                                                            Track progress on Etherscan
                                        </a>
                    </div>
</div>,
                ],
                "gutter": 0,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Connect(HWPromptContainer) />,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      style={
                                            Object {
                                                                  "display": "flex",
                                                                  "flexDirection": "column",
                                                                }
                      }
>
                      <span>
                                            <Text
                                                                  large={true}
                                            >
                                                                  waiting_for_deposit_to_be {"ratio":"1/1"} mined...
                                            </Text>
                                            <Icon
                                                                  style={
                                                                                        Object {
                                                                                                              "color": "white",
                                                                                                              "fontSize": "1.5rem",
                                                                                                              "marginLeft": "1rem",
                                                                                                            }
                                                                  }
                                                                  type="loading"
                                            />
                      </span>
                      <a
                                            onClick={[Function]}
                                            role="link"
                                            tabIndex={0}
                      >
                                            Track progress on Etherscan
                      </a>
</div>,
                    "style": Object {
                      "display": "flex",
                      "flexDirection": "column",
                      "marginTop": "2rem",
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <span>
                          <Text
                                                    large={true}
                          >
                                                    waiting_for_deposit_to_be {"ratio":"1/1"} mined...
                          </Text>
                          <Icon
                                                    style={
                                                                              Object {
                                                                                                        "color": "white",
                                                                                                        "fontSize": "1.5rem",
                                                                                                        "marginLeft": "1rem",
                                                                                                      }
                                                    }
                                                    type="loading"
                          />
</span>,
                        <a
                          onClick={[Function]}
                          role="link"
                          tabIndex={0}
>
                          Track progress on Etherscan
</a>,
                      ],
                      "style": Object {
                        "display": "flex",
                        "flexDirection": "column",
                      },
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <Text
                              large={true}
>
                              waiting_for_deposit_to_be {"ratio":"1/1"} mined...
</Text>,
                            <Icon
                              style={
                                                            Object {
                                                                                          "color": "white",
                                                                                          "fontSize": "1.5rem",
                                                                                          "marginLeft": "1rem",
                                                                                        }
                              }
                              type="loading"
/>,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": "waiting_for_deposit_to_be {\\"ratio\\":\\"1/1\\"} mined...",
                              "large": true,
                            },
                            "ref": null,
                            "rendered": "waiting_for_deposit_to_be {\\"ratio\\":\\"1/1\\"} mined...",
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "style": Object {
                                "color": "white",
                                "fontSize": "1.5rem",
                                "marginLeft": "1rem",
                              },
                              "type": "loading",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                        ],
                        "type": "span",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Track progress on Etherscan",
                          "onClick": [Function],
                          "role": "link",
                          "tabIndex": 0,
                        },
                        "ref": null,
                        "rendered": "Track progress on Etherscan",
                        "type": "a",
                      },
                    ],
                    "type": "div",
                  },
                  "type": "div",
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "deposits_note",
                "style": Object {
                  "marginTop": "2rem",
                  "maxWidth": "25rem",
                },
              },
              "ref": null,
              "rendered": "deposits_note",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          style={
                    Object {
                              "display": "flex",
                              "flex": "1",
                              "flexWrap": "wrap",
                              "marginTop": "0.5rem",
                            }
          }
>
          <div
                    style={
                              Object {
                                        "flex": "1",
                                        "marginBottom": "3rem",
                                        "marginRight": "2rem",
                                      }
                    }
          >
                    <Form__FlexForm>
                              <Form__FormItem
                                        colon={false}
                                        label={
                                                  <Form__FormItemLabel>
                                                            select_asset_to_deposit
                                                  </Form__FormItemLabel>
                                        }
                              >
                                        <style__Image
                                                  alt="logo"
                                                  onError={[Function]}
                                                  src="/public/images/assets/ETH.svg"
                                        />
                                        <Select
                                                  defaultValue="ETH"
                                                  onSelect={[Function]}
                                                  style={
                                                            Object {
                                                                      "paddingLeft": "0.5rem",
                                                                    }
                                                  }
                                        >
                                                  <Option
                                                            value="ETH"
                                                  >
                                                            ETH
                                                  </Option>
                                                  <Option
                                                            value="BOKKY"
                                                  >
                                                            BOKKY
                                                  </Option>
                                        </Select>
                              </Form__FormItem>
                              <Form__FormItem
                                        colon={false}
                                        help={
                                                  <HelperTextComponent
                                                            left="$0.00"
                                                            right="usd"
                                                  />
                                        }
                                        label={
                                                  <Form__FormItemLabel>
                                                            enter_amount
                                                  </Form__FormItemLabel>
                                        }
                              >
                                        <Input
                                                  defaultValue="0"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  value="0"
                                        />
                              </Form__FormItem>
                              <GasOptions
                                        defaultGasLimit={600000}
                                        defaultGasPrice={10}
                                        defaultOption="average"
                                        gasStatistics={undefined}
                                        intl={
                                                  Object {
                                                            "formatMessage": [Function],
                                                            "formatNumber": [Function],
                                                          }
                                        }
                                        onChange={[Function]}
                              />
                              <style__DollarPrice>
                                        1 ETH = 
                                        <style__StyledNumericText
                                                  type="currency"
                                                  value="412"
                                        />
                              </style__DollarPrice>
                    </Form__FlexForm>
          </div>
          <div
                    style={
                              Object {
                                        "minWidth": "34rem",
                                      }
                    }
          >
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        deposit
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main={
                                                  <SelectableText>
                                                            <NumericText
                                                                      maxDecimalPlaces={18}
                                                                      value="0"
                                                            />
                                                             
                                                            ETH
                                                  </SelectableText>
                                        }
                                        subtitle={
                                                  <NumericText
                                                            type="currency"
                                                            value="0"
                                                  />
                                        }
                              />
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        <TooltipText
                                                  details="max_base_layer_fee_explain"
                                        >
                                                  max_base_layer_fee
                                        </TooltipText>
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main={
                                                  <SelectableText>
                                                            <NumericText
                                                                      maxDecimalPlaces={18}
                                                                      value="0.006"
                                                            />
                                                             
                                                            ETH
                                                  </SelectableText>
                                        }
                                        subtitle={
                                                  <NumericText
                                                            type="currency"
                                                            value="2.472"
                                                  />
                                        }
                              />
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        base_layer
                                         ETH 
                                        balance_before
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main={
                                                  <SelectableText>
                                                            <NumericText
                                                                      maxDecimalPlaces={18}
                                                                      value="0.198937"
                                                            />
                                                             
                                                            ETH
                                                  </SelectableText>
                                        }
                                        subtitle={
                                                  <NumericText
                                                            type="currency"
                                                            value="81.962044"
                                                  />
                                        }
                              />
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        base_layer
                                         ETH 
                                        balance_after
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main={
                                                  <SelectableText>
                                                            <NumericText
                                                                      maxDecimalPlaces={18}
                                                                      value="0.192937"
                                                            />
                                                             
                                                            ETH
                                                  </SelectableText>
                                        }
                                        subtitle={
                                                  <NumericText
                                                            type="currency"
                                                            value="79.490044"
                                                  />
                                        }
                              />
                    </Row>
                    <div>
                              <Row
                                        gutter={0}
                              >
                                        <style__StyledCol
                                                  span={12}
                                        >
                                                  nahmii_available
                                                   ETH 
                                                  balance_before
                                        </style__StyledCol>
                              </Row>
                              <Row
                                        gutter={0}
                              >
                                        <TransferDescriptionItem
                                                  main={
                                                            <SelectableText>
                                                                      <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.1"
                                                                      />
                                                                       
                                                                      ETH
                                                            </SelectableText>
                                                  }
                                                  subtitle={
                                                            <NumericText
                                                                      type="currency"
                                                                      value="41.2"
                                                            />
                                                  }
                                        />
                              </Row>
                              <Row
                                        gutter={0}
                              >
                                        <style__StyledCol
                                                  span={12}
                                        >
                                                  nahmii_available
                                                   ETH 
                                                  balance_after
                                        </style__StyledCol>
                              </Row>
                              <Row
                                        gutter={0}
                              >
                                        <TransferDescriptionItem
                                                  main={
                                                            <SelectableText>
                                                                      <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.1"
                                                                      />
                                                                       
                                                                      ETH
                                                            </SelectableText>
                                                  }
                                                  subtitle={
                                                            <NumericText
                                                                      type="currency"
                                                                      value="41.2"
                                                            />
                                                  }
                                        />
                              </Row>
                    </div>
                    <Row
                              gutter={0}
                    >
                              <style__HWPromptWrapper>
                                        <Connect(HWPromptContainer) />
                              </style__HWPromptWrapper>
                              <div
                                        style={
                                                  Object {
                                                            "display": "flex",
                                                            "flexDirection": "column",
                                                            "marginTop": "2rem",
                                                          }
                                        }
                              >
                                        <div
                                                  style={
                                                            Object {
                                                                      "display": "flex",
                                                                      "flexDirection": "column",
                                                                    }
                                                  }
                                        >
                                                  <span>
                                                            <Text
                                                                      large={true}
                                                            >
                                                                      waiting_for_deposit_to_be {"ratio":"1/1"} mined...
                                                            </Text>
                                                            <Icon
                                                                      style={
                                                                                Object {
                                                                                          "color": "white",
                                                                                          "fontSize": "1.5rem",
                                                                                          "marginLeft": "1rem",
                                                                                        }
                                                                      }
                                                                      type="loading"
                                                            />
                                                  </span>
                                                  <a
                                                            onClick={[Function]}
                                                            role="link"
                                                            tabIndex={0}
                                                  >
                                                            Track progress on Etherscan
                                                  </a>
                                        </div>
                              </div>
                    </Row>
                    <SectionHeading
                              style={
                                        Object {
                                                  "marginTop": "2rem",
                                                  "maxWidth": "25rem",
                                                }
                              }
                    >
                              deposits_note
                    </SectionHeading>
          </div>
</div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              style={
                            Object {
                                          "flex": "1",
                                          "marginBottom": "3rem",
                                          "marginRight": "2rem",
                                        }
              }
>
              <Form__FlexForm>
                            <Form__FormItem
                                          colon={false}
                                          label={
                                                        <Form__FormItemLabel>
                                                                      select_asset_to_deposit
                                                        </Form__FormItemLabel>
                                          }
                            >
                                          <style__Image
                                                        alt="logo"
                                                        onError={[Function]}
                                                        src="/public/images/assets/ETH.svg"
                                          />
                                          <Select
                                                        defaultValue="ETH"
                                                        onSelect={[Function]}
                                                        style={
                                                                      Object {
                                                                                    "paddingLeft": "0.5rem",
                                                                                  }
                                                        }
                                          >
                                                        <Option
                                                                      value="ETH"
                                                        >
                                                                      ETH
                                                        </Option>
                                                        <Option
                                                                      value="BOKKY"
                                                        >
                                                                      BOKKY
                                                        </Option>
                                          </Select>
                            </Form__FormItem>
                            <Form__FormItem
                                          colon={false}
                                          help={
                                                        <HelperTextComponent
                                                                      left="$0.00"
                                                                      right="usd"
                                                        />
                                          }
                                          label={
                                                        <Form__FormItemLabel>
                                                                      enter_amount
                                                        </Form__FormItemLabel>
                                          }
                            >
                                          <Input
                                                        defaultValue="0"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        value="0"
                                          />
                            </Form__FormItem>
                            <GasOptions
                                          defaultGasLimit={600000}
                                          defaultGasPrice={10}
                                          defaultOption="average"
                                          gasStatistics={undefined}
                                          intl={
                                                        Object {
                                                                      "formatMessage": [Function],
                                                                      "formatNumber": [Function],
                                                                    }
                                          }
                                          onChange={[Function]}
                            />
                            <style__DollarPrice>
                                          1 ETH = 
                                          <style__StyledNumericText
                                                        type="currency"
                                                        value="412"
                                          />
                            </style__DollarPrice>
              </Form__FlexForm>
</div>,
            <div
              style={
                            Object {
                                          "minWidth": "34rem",
                                        }
              }
>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          deposit
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main={
                                                        <SelectableText>
                                                                      <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0"
                                                                      />
                                                                       
                                                                      ETH
                                                        </SelectableText>
                                          }
                                          subtitle={
                                                        <NumericText
                                                                      type="currency"
                                                                      value="0"
                                                        />
                                          }
                            />
              </Row>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          <TooltipText
                                                        details="max_base_layer_fee_explain"
                                          >
                                                        max_base_layer_fee
                                          </TooltipText>
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main={
                                                        <SelectableText>
                                                                      <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.006"
                                                                      />
                                                                       
                                                                      ETH
                                                        </SelectableText>
                                          }
                                          subtitle={
                                                        <NumericText
                                                                      type="currency"
                                                                      value="2.472"
                                                        />
                                          }
                            />
              </Row>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          base_layer
                                           ETH 
                                          balance_before
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main={
                                                        <SelectableText>
                                                                      <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.198937"
                                                                      />
                                                                       
                                                                      ETH
                                                        </SelectableText>
                                          }
                                          subtitle={
                                                        <NumericText
                                                                      type="currency"
                                                                      value="81.962044"
                                                        />
                                          }
                            />
              </Row>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          base_layer
                                           ETH 
                                          balance_after
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main={
                                                        <SelectableText>
                                                                      <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.192937"
                                                                      />
                                                                       
                                                                      ETH
                                                        </SelectableText>
                                          }
                                          subtitle={
                                                        <NumericText
                                                                      type="currency"
                                                                      value="79.490044"
                                                        />
                                          }
                            />
              </Row>
              <div>
                            <Row
                                          gutter={0}
                            >
                                          <style__StyledCol
                                                        span={12}
                                          >
                                                        nahmii_available
                                                         ETH 
                                                        balance_before
                                          </style__StyledCol>
                            </Row>
                            <Row
                                          gutter={0}
                            >
                                          <TransferDescriptionItem
                                                        main={
                                                                      <SelectableText>
                                                                                    <NumericText
                                                                                                  maxDecimalPlaces={18}
                                                                                                  value="0.1"
                                                                                    />
                                                                                     
                                                                                    ETH
                                                                      </SelectableText>
                                                        }
                                                        subtitle={
                                                                      <NumericText
                                                                                    type="currency"
                                                                                    value="41.2"
                                                                      />
                                                        }
                                          />
                            </Row>
                            <Row
                                          gutter={0}
                            >
                                          <style__StyledCol
                                                        span={12}
                                          >
                                                        nahmii_available
                                                         ETH 
                                                        balance_after
                                          </style__StyledCol>
                            </Row>
                            <Row
                                          gutter={0}
                            >
                                          <TransferDescriptionItem
                                                        main={
                                                                      <SelectableText>
                                                                                    <NumericText
                                                                                                  maxDecimalPlaces={18}
                                                                                                  value="0.1"
                                                                                    />
                                                                                     
                                                                                    ETH
                                                                      </SelectableText>
                                                        }
                                                        subtitle={
                                                                      <NumericText
                                                                                    type="currency"
                                                                                    value="41.2"
                                                                      />
                                                        }
                                          />
                            </Row>
              </div>
              <Row
                            gutter={0}
              >
                            <style__HWPromptWrapper>
                                          <Connect(HWPromptContainer) />
                            </style__HWPromptWrapper>
                            <div
                                          style={
                                                        Object {
                                                                      "display": "flex",
                                                                      "flexDirection": "column",
                                                                      "marginTop": "2rem",
                                                                    }
                                          }
                            >
                                          <div
                                                        style={
                                                                      Object {
                                                                                    "display": "flex",
                                                                                    "flexDirection": "column",
                                                                                  }
                                                        }
                                          >
                                                        <span>
                                                                      <Text
                                                                                    large={true}
                                                                      >
                                                                                    waiting_for_deposit_to_be {"ratio":"1/1"} mined...
                                                                      </Text>
                                                                      <Icon
                                                                                    style={
                                                                                                  Object {
                                                                                                                "color": "white",
                                                                                                                "fontSize": "1.5rem",
                                                                                                                "marginLeft": "1rem",
                                                                                                              }
                                                                                    }
                                                                                    type="loading"
                                                                      />
                                                        </span>
                                                        <a
                                                                      onClick={[Function]}
                                                                      role="link"
                                                                      tabIndex={0}
                                                        >
                                                                      Track progress on Etherscan
                                                        </a>
                                          </div>
                            </div>
              </Row>
              <SectionHeading
                            style={
                                          Object {
                                                        "marginTop": "2rem",
                                                        "maxWidth": "25rem",
                                                      }
                            }
              >
                            deposits_note
              </SectionHeading>
</div>,
          ],
          "style": Object {
            "display": "flex",
            "flex": "1",
            "flexWrap": "wrap",
            "marginTop": "0.5rem",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Form__FlexForm>
                <Form__FormItem
                                colon={false}
                                label={
                                                <Form__FormItemLabel>
                                                                select_asset_to_deposit
                                                </Form__FormItemLabel>
                                }
                >
                                <style__Image
                                                alt="logo"
                                                onError={[Function]}
                                                src="/public/images/assets/ETH.svg"
                                />
                                <Select
                                                defaultValue="ETH"
                                                onSelect={[Function]}
                                                style={
                                                                Object {
                                                                                "paddingLeft": "0.5rem",
                                                                              }
                                                }
                                >
                                                <Option
                                                                value="ETH"
                                                >
                                                                ETH
                                                </Option>
                                                <Option
                                                                value="BOKKY"
                                                >
                                                                BOKKY
                                                </Option>
                                </Select>
                </Form__FormItem>
                <Form__FormItem
                                colon={false}
                                help={
                                                <HelperTextComponent
                                                                left="$0.00"
                                                                right="usd"
                                                />
                                }
                                label={
                                                <Form__FormItemLabel>
                                                                enter_amount
                                                </Form__FormItemLabel>
                                }
                >
                                <Input
                                                defaultValue="0"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value="0"
                                />
                </Form__FormItem>
                <GasOptions
                                defaultGasLimit={600000}
                                defaultGasPrice={10}
                                defaultOption="average"
                                gasStatistics={undefined}
                                intl={
                                                Object {
                                                                "formatMessage": [Function],
                                                                "formatNumber": [Function],
                                                              }
                                }
                                onChange={[Function]}
                />
                <style__DollarPrice>
                                1 ETH = 
                                <style__StyledNumericText
                                                type="currency"
                                                value="412"
                                />
                </style__DollarPrice>
</Form__FlexForm>,
              "style": Object {
                "flex": "1",
                "marginBottom": "3rem",
                "marginRight": "2rem",
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Form__FormItem
                    colon={false}
                    label={
                                        <Form__FormItemLabel>
                                                            select_asset_to_deposit
                                        </Form__FormItemLabel>
                    }
>
                    <style__Image
                                        alt="logo"
                                        onError={[Function]}
                                        src="/public/images/assets/ETH.svg"
                    />
                    <Select
                                        defaultValue="ETH"
                                        onSelect={[Function]}
                                        style={
                                                            Object {
                                                                                "paddingLeft": "0.5rem",
                                                                              }
                                        }
                    >
                                        <Option
                                                            value="ETH"
                                        >
                                                            ETH
                                        </Option>
                                        <Option
                                                            value="BOKKY"
                                        >
                                                            BOKKY
                                        </Option>
                    </Select>
</Form__FormItem>,
                  <Form__FormItem
                    colon={false}
                    help={
                                        <HelperTextComponent
                                                            left="$0.00"
                                                            right="usd"
                                        />
                    }
                    label={
                                        <Form__FormItemLabel>
                                                            enter_amount
                                        </Form__FormItemLabel>
                    }
>
                    <Input
                                        defaultValue="0"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        value="0"
                    />
</Form__FormItem>,
                  <GasOptions
                    defaultGasLimit={600000}
                    defaultGasPrice={10}
                    defaultOption="average"
                    gasStatistics={undefined}
                    intl={
                                        Object {
                                                            "formatMessage": [Function],
                                                            "formatNumber": [Function],
                                                          }
                    }
                    onChange={[Function]}
/>,
                  <style__DollarPrice>
                    1 ETH = 
                    <style__StyledNumericText
                                        type="currency"
                                        value="412"
                    />
</style__DollarPrice>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <style__Image
                        alt="logo"
                        onError={[Function]}
                        src="/public/images/assets/ETH.svg"
/>,
                      <Select
                        defaultValue="ETH"
                        onSelect={[Function]}
                        style={
                                                Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                        }
>
                        <Option
                                                value="ETH"
                        >
                                                ETH
                        </Option>
                        <Option
                                                value="BOKKY"
                        >
                                                BOKKY
                        </Option>
</Select>,
                    ],
                    "colon": false,
                    "label": <Form__FormItemLabel>
                      select_asset_to_deposit
</Form__FormItemLabel>,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "alt": "logo",
                        "onError": [Function],
                        "src": "/public/images/assets/ETH.svg",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <Option
                            value="ETH"
>
                            ETH
</Option>,
                          <Option
                            value="BOKKY"
>
                            BOKKY
</Option>,
                        ],
                        "defaultValue": "ETH",
                        "onSelect": [Function],
                        "style": Object {
                          "paddingLeft": "0.5rem",
                        },
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": "ETH",
                          "nodeType": "class",
                          "props": Object {
                            "children": "ETH",
                            "value": "ETH",
                          },
                          "ref": null,
                          "rendered": "ETH",
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": "BOKKY",
                          "nodeType": "class",
                          "props": Object {
                            "children": "BOKKY",
                            "value": "BOKKY",
                          },
                          "ref": null,
                          "rendered": "BOKKY",
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Input
                      defaultValue="0"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      value="0"
/>,
                    "colon": false,
                    "help": <HelperTextComponent
                      left="$0.00"
                      right="usd"
/>,
                    "label": <Form__FormItemLabel>
                      enter_amount
</Form__FormItemLabel>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "defaultValue": "0",
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "value": "0",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "defaultGasLimit": 600000,
                    "defaultGasPrice": 10,
                    "defaultOption": "average",
                    "gasStatistics": undefined,
                    "intl": Object {
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                    },
                    "onChange": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "1 ETH = ",
                      <style__StyledNumericText
                        type="currency"
                        value="412"
/>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    "1 ETH = ",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "type": "currency",
                        "value": "412",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    deposit
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main={
                                                      <SelectableText>
                                                                        <NumericText
                                                                                          maxDecimalPlaces={18}
                                                                                          value="0"
                                                                        />
                                                                         
                                                                        ETH
                                                      </SelectableText>
                                    }
                                    subtitle={
                                                      <NumericText
                                                                        type="currency"
                                                                        value="0"
                                                      />
                                    }
                  />
</Row>,
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    <TooltipText
                                                      details="max_base_layer_fee_explain"
                                    >
                                                      max_base_layer_fee
                                    </TooltipText>
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main={
                                                      <SelectableText>
                                                                        <NumericText
                                                                                          maxDecimalPlaces={18}
                                                                                          value="0.006"
                                                                        />
                                                                         
                                                                        ETH
                                                      </SelectableText>
                                    }
                                    subtitle={
                                                      <NumericText
                                                                        type="currency"
                                                                        value="2.472"
                                                      />
                                    }
                  />
</Row>,
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    base_layer
                                     ETH 
                                    balance_before
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main={
                                                      <SelectableText>
                                                                        <NumericText
                                                                                          maxDecimalPlaces={18}
                                                                                          value="0.198937"
                                                                        />
                                                                         
                                                                        ETH
                                                      </SelectableText>
                                    }
                                    subtitle={
                                                      <NumericText
                                                                        type="currency"
                                                                        value="81.962044"
                                                      />
                                    }
                  />
</Row>,
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    base_layer
                                     ETH 
                                    balance_after
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main={
                                                      <SelectableText>
                                                                        <NumericText
                                                                                          maxDecimalPlaces={18}
                                                                                          value="0.192937"
                                                                        />
                                                                         
                                                                        ETH
                                                      </SelectableText>
                                    }
                                    subtitle={
                                                      <NumericText
                                                                        type="currency"
                                                                        value="79.490044"
                                                      />
                                    }
                  />
</Row>,
                <div>
                  <Row
                                    gutter={0}
                  >
                                    <style__StyledCol
                                                      span={12}
                                    >
                                                      nahmii_available
                                                       ETH 
                                                      balance_before
                                    </style__StyledCol>
                  </Row>
                  <Row
                                    gutter={0}
                  >
                                    <TransferDescriptionItem
                                                      main={
                                                                        <SelectableText>
                                                                                          <NumericText
                                                                                                            maxDecimalPlaces={18}
                                                                                                            value="0.1"
                                                                                          />
                                                                                           
                                                                                          ETH
                                                                        </SelectableText>
                                                      }
                                                      subtitle={
                                                                        <NumericText
                                                                                          type="currency"
                                                                                          value="41.2"
                                                                        />
                                                      }
                                    />
                  </Row>
                  <Row
                                    gutter={0}
                  >
                                    <style__StyledCol
                                                      span={12}
                                    >
                                                      nahmii_available
                                                       ETH 
                                                      balance_after
                                    </style__StyledCol>
                  </Row>
                  <Row
                                    gutter={0}
                  >
                                    <TransferDescriptionItem
                                                      main={
                                                                        <SelectableText>
                                                                                          <NumericText
                                                                                                            maxDecimalPlaces={18}
                                                                                                            value="0.1"
                                                                                          />
                                                                                           
                                                                                          ETH
                                                                        </SelectableText>
                                                      }
                                                      subtitle={
                                                                        <NumericText
                                                                                          type="currency"
                                                                                          value="41.2"
                                                                        />
                                                      }
                                    />
                  </Row>
</div>,
                false,
                <Row
                  gutter={0}
>
                  <style__HWPromptWrapper>
                                    <Connect(HWPromptContainer) />
                  </style__HWPromptWrapper>
                  <div
                                    style={
                                                      Object {
                                                                        "display": "flex",
                                                                        "flexDirection": "column",
                                                                        "marginTop": "2rem",
                                                                      }
                                    }
                  >
                                    <div
                                                      style={
                                                                        Object {
                                                                                          "display": "flex",
                                                                                          "flexDirection": "column",
                                                                                        }
                                                      }
                                    >
                                                      <span>
                                                                        <Text
                                                                                          large={true}
                                                                        >
                                                                                          waiting_for_deposit_to_be {"ratio":"1/1"} mined...
                                                                        </Text>
                                                                        <Icon
                                                                                          style={
                                                                                                            Object {
                                                                                                                              "color": "white",
                                                                                                                              "fontSize": "1.5rem",
                                                                                                                              "marginLeft": "1rem",
                                                                                                                            }
                                                                                          }
                                                                                          type="loading"
                                                                        />
                                                      </span>
                                                      <a
                                                                        onClick={[Function]}
                                                                        role="link"
                                                                        tabIndex={0}
                                                      >
                                                                        Track progress on Etherscan
                                                      </a>
                                    </div>
                  </div>
</Row>,
                <SectionHeading
                  style={
                                    Object {
                                                      "marginTop": "2rem",
                                                      "maxWidth": "25rem",
                                                    }
                  }
>
                  deposits_note
</SectionHeading>,
              ],
              "style": Object {
                "minWidth": "34rem",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    deposit
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "deposit",
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": "deposit",
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main={
                                        <SelectableText>
                                                            <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0"
                                                            />
                                                             
                                                            ETH
                                        </SelectableText>
                    }
                    subtitle={
                                        <NumericText
                                                            type="currency"
                                                            value="0"
                                        />
                    }
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": <SelectableText>
                      <NumericText
                                            maxDecimalPlaces={18}
                                            value="0"
                      />
                       
                      ETH
</SelectableText>,
                    "subtitle": <NumericText
                      type="currency"
                      value="0"
/>,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    <TooltipText
                                        details="max_base_layer_fee_explain"
                    >
                                        max_base_layer_fee
                    </TooltipText>
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TooltipText
                      details="max_base_layer_fee_explain"
>
                      max_base_layer_fee
</TooltipText>,
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "max_base_layer_fee",
                      "details": "max_base_layer_fee_explain",
                    },
                    "ref": null,
                    "rendered": "max_base_layer_fee",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main={
                                        <SelectableText>
                                                            <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.006"
                                                            />
                                                             
                                                            ETH
                                        </SelectableText>
                    }
                    subtitle={
                                        <NumericText
                                                            type="currency"
                                                            value="2.472"
                                        />
                    }
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": <SelectableText>
                      <NumericText
                                            maxDecimalPlaces={18}
                                            value="0.006"
                      />
                       
                      ETH
</SelectableText>,
                    "subtitle": <NumericText
                      type="currency"
                      value="2.472"
/>,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    base_layer
                     ETH 
                    balance_before
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "base_layer",
                      " ETH ",
                      "balance_before",
                    ],
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Array [
                    "base_layer",
                    " ETH ",
                    "balance_before",
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main={
                                        <SelectableText>
                                                            <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.198937"
                                                            />
                                                             
                                                            ETH
                                        </SelectableText>
                    }
                    subtitle={
                                        <NumericText
                                                            type="currency"
                                                            value="81.962044"
                                        />
                    }
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": <SelectableText>
                      <NumericText
                                            maxDecimalPlaces={18}
                                            value="0.198937"
                      />
                       
                      ETH
</SelectableText>,
                    "subtitle": <NumericText
                      type="currency"
                      value="81.962044"
/>,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    base_layer
                     ETH 
                    balance_after
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "base_layer",
                      " ETH ",
                      "balance_after",
                    ],
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Array [
                    "base_layer",
                    " ETH ",
                    "balance_after",
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main={
                                        <SelectableText>
                                                            <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.192937"
                                                            />
                                                             
                                                            ETH
                                        </SelectableText>
                    }
                    subtitle={
                                        <NumericText
                                                            type="currency"
                                                            value="79.490044"
                                        />
                    }
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": <SelectableText>
                      <NumericText
                                            maxDecimalPlaces={18}
                                            value="0.192937"
                      />
                       
                      ETH
</SelectableText>,
                    "subtitle": <NumericText
                      type="currency"
                      value="79.490044"
/>,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Row
                      gutter={0}
>
                      <style__StyledCol
                                            span={12}
                      >
                                            nahmii_available
                                             ETH 
                                            balance_before
                      </style__StyledCol>
</Row>,
                    <Row
                      gutter={0}
>
                      <TransferDescriptionItem
                                            main={
                                                                  <SelectableText>
                                                                                        <NumericText
                                                                                                              maxDecimalPlaces={18}
                                                                                                              value="0.1"
                                                                                        />
                                                                                         
                                                                                        ETH
                                                                  </SelectableText>
                                            }
                                            subtitle={
                                                                  <NumericText
                                                                                        type="currency"
                                                                                        value="41.2"
                                                                  />
                                            }
                      />
</Row>,
                    <Row
                      gutter={0}
>
                      <style__StyledCol
                                            span={12}
                      >
                                            nahmii_available
                                             ETH 
                                            balance_after
                      </style__StyledCol>
</Row>,
                    <Row
                      gutter={0}
>
                      <TransferDescriptionItem
                                            main={
                                                                  <SelectableText>
                                                                                        <NumericText
                                                                                                              maxDecimalPlaces={18}
                                                                                                              value="0.1"
                                                                                        />
                                                                                         
                                                                                        ETH
                                                                  </SelectableText>
                                            }
                                            subtitle={
                                                                  <NumericText
                                                                                        type="currency"
                                                                                        value="41.2"
                                                                  />
                                            }
                      />
</Row>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <style__StyledCol
                        span={12}
>
                        nahmii_available
                         ETH 
                        balance_before
</style__StyledCol>,
                      "gutter": 0,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          "nahmii_available",
                          " ETH ",
                          "balance_before",
                        ],
                        "span": 12,
                      },
                      "ref": null,
                      "rendered": Array [
                        "nahmii_available",
                        " ETH ",
                        "balance_before",
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <TransferDescriptionItem
                        main={
                                                <SelectableText>
                                                                        <NumericText
                                                                                                maxDecimalPlaces={18}
                                                                                                value="0.1"
                                                                        />
                                                                         
                                                                        ETH
                                                </SelectableText>
                        }
                        subtitle={
                                                <NumericText
                                                                        type="currency"
                                                                        value="41.2"
                                                />
                        }
/>,
                      "gutter": 0,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "main": <SelectableText>
                          <NumericText
                                                    maxDecimalPlaces={18}
                                                    value="0.1"
                          />
                           
                          ETH
</SelectableText>,
                        "subtitle": <NumericText
                          type="currency"
                          value="41.2"
/>,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <style__StyledCol
                        span={12}
>
                        nahmii_available
                         ETH 
                        balance_after
</style__StyledCol>,
                      "gutter": 0,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          "nahmii_available",
                          " ETH ",
                          "balance_after",
                        ],
                        "span": 12,
                      },
                      "ref": null,
                      "rendered": Array [
                        "nahmii_available",
                        " ETH ",
                        "balance_after",
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <TransferDescriptionItem
                        main={
                                                <SelectableText>
                                                                        <NumericText
                                                                                                maxDecimalPlaces={18}
                                                                                                value="0.1"
                                                                        />
                                                                         
                                                                        ETH
                                                </SelectableText>
                        }
                        subtitle={
                                                <NumericText
                                                                        type="currency"
                                                                        value="41.2"
                                                />
                        }
/>,
                      "gutter": 0,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "main": <SelectableText>
                          <NumericText
                                                    maxDecimalPlaces={18}
                                                    value="0.1"
                          />
                           
                          ETH
</SelectableText>,
                        "subtitle": <NumericText
                          type="currency"
                          value="41.2"
/>,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              false,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <style__HWPromptWrapper>
                      <Connect(HWPromptContainer) />
</style__HWPromptWrapper>,
                    <div
                      style={
                                            Object {
                                                                  "display": "flex",
                                                                  "flexDirection": "column",
                                                                  "marginTop": "2rem",
                                                                }
                      }
>
                      <div
                                            style={
                                                                  Object {
                                                                                        "display": "flex",
                                                                                        "flexDirection": "column",
                                                                                      }
                                            }
                      >
                                            <span>
                                                                  <Text
                                                                                        large={true}
                                                                  >
                                                                                        waiting_for_deposit_to_be {"ratio":"1/1"} mined...
                                                                  </Text>
                                                                  <Icon
                                                                                        style={
                                                                                                              Object {
                                                                                                                                    "color": "white",
                                                                                                                                    "fontSize": "1.5rem",
                                                                                                                                    "marginLeft": "1rem",
                                                                                                                                  }
                                                                                        }
                                                                                        type="loading"
                                                                  />
                                            </span>
                                            <a
                                                                  onClick={[Function]}
                                                                  role="link"
                                                                  tabIndex={0}
                                            >
                                                                  Track progress on Etherscan
                                            </a>
                      </div>
</div>,
                  ],
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Connect(HWPromptContainer) />,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <div
                        style={
                                                Object {
                                                                        "display": "flex",
                                                                        "flexDirection": "column",
                                                                      }
                        }
>
                        <span>
                                                <Text
                                                                        large={true}
                                                >
                                                                        waiting_for_deposit_to_be {"ratio":"1/1"} mined...
                                                </Text>
                                                <Icon
                                                                        style={
                                                                                                Object {
                                                                                                                        "color": "white",
                                                                                                                        "fontSize": "1.5rem",
                                                                                                                        "marginLeft": "1rem",
                                                                                                                      }
                                                                        }
                                                                        type="loading"
                                                />
                        </span>
                        <a
                                                onClick={[Function]}
                                                role="link"
                                                tabIndex={0}
                        >
                                                Track progress on Etherscan
                        </a>
</div>,
                      "style": Object {
                        "display": "flex",
                        "flexDirection": "column",
                        "marginTop": "2rem",
                      },
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <span>
                            <Text
                                                        large={true}
                            >
                                                        waiting_for_deposit_to_be {"ratio":"1/1"} mined...
                            </Text>
                            <Icon
                                                        style={
                                                                                    Object {
                                                                                                                "color": "white",
                                                                                                                "fontSize": "1.5rem",
                                                                                                                "marginLeft": "1rem",
                                                                                                              }
                                                        }
                                                        type="loading"
                            />
</span>,
                          <a
                            onClick={[Function]}
                            role="link"
                            tabIndex={0}
>
                            Track progress on Etherscan
</a>,
                        ],
                        "style": Object {
                          "display": "flex",
                          "flexDirection": "column",
                        },
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <Text
                                large={true}
>
                                waiting_for_deposit_to_be {"ratio":"1/1"} mined...
</Text>,
                              <Icon
                                style={
                                                                Object {
                                                                                                "color": "white",
                                                                                                "fontSize": "1.5rem",
                                                                                                "marginLeft": "1rem",
                                                                                              }
                                }
                                type="loading"
/>,
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {
                                "children": "waiting_for_deposit_to_be {\\"ratio\\":\\"1/1\\"} mined...",
                                "large": true,
                              },
                              "ref": null,
                              "rendered": "waiting_for_deposit_to_be {\\"ratio\\":\\"1/1\\"} mined...",
                              "type": [Function],
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "function",
                              "props": Object {
                                "style": Object {
                                  "color": "white",
                                  "fontSize": "1.5rem",
                                  "marginLeft": "1rem",
                                },
                                "type": "loading",
                              },
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                          ],
                          "type": "span",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Track progress on Etherscan",
                            "onClick": [Function],
                            "role": "link",
                            "tabIndex": 0,
                          },
                          "ref": null,
                          "rendered": "Track progress on Etherscan",
                          "type": "a",
                        },
                      ],
                      "type": "div",
                    },
                    "type": "div",
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "deposits_note",
                  "style": Object {
                    "marginTop": "2rem",
                    "maxWidth": "25rem",
                  },
                },
                "ref": null,
                "rendered": "deposits_note",
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<NahmiiDeposit /> should render correctly when depositstatus is errored 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NahmiiDeposit
    currentNetwork={
        Object {
            "apiDomain": "api2.dev.hubii.net",
            "defaultNahmiiProvider": NahmiiProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "connection": Object {
                "url": "http://geth-ropsten.dev.hubii.net",
              },
              "ready": Promise {},
            },
            "identityServiceAppId": "appid",
            "identityServiceSecret": "secret",
            "nahmiiProvider": NahmiiProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "connection": Object {
                "url": "http://geth-ropsten.dev.hubii.net",
              },
              "ready": Promise {},
            },
            "name": "ropsten",
            "provider": FallbackProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "_providers": Array [
                InfuraProvider {
                  "_balances": Object {},
                  "_emitted": Object {
                    "block": -2,
                  },
                  "_events": Array [],
                  "_fastQueryDate": 0,
                  "_lastBlockNumber": -2,
                  "_network": Object {
                    "_defaultProvider": [Function],
                    "chainId": 3,
                    "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                    "name": "ropsten",
                  },
                  "_pollingInterval": 4000,
                  "apiAccessToken": null,
                  "connection": Object {
                    "url": "https://ropsten.infura.io/",
                  },
                  "ready": Promise {},
                },
                EtherscanProvider {
                  "_balances": Object {},
                  "_emitted": Object {
                    "block": -2,
                  },
                  "_events": Array [],
                  "_fastQueryDate": 0,
                  "_lastBlockNumber": -2,
                  "_network": Object {
                    "_defaultProvider": [Function],
                    "chainId": 3,
                    "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                    "name": "ropsten",
                  },
                  "_pollingInterval": 4000,
                  "apiKey": undefined,
                  "baseUrl": "https://api-ropsten.etherscan.io",
                  "ready": Promise {},
                },
              ],
              "ready": Promise {},
            },
            "walletApiEndpoint": [Function],
          }
    }
    currentWalletWithInfo={
        Immutable.Map {
            deviceId: "041ca8e96420e95a106e8c9bb3c9fb9e8c00d4b11cac562888c898000b5cec366c03a0f84574716fac6c7a7df47a925f0e30f5286546adf3179b5a08dc9d8e09da",
            address: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
            type: "lns",
            name: "lns",
            derivationPath: "m/44'/60'/0'/0",
            transactions: Immutable.Map {
                loading: false,
                error: null,
                transactions: Immutable.List [
                    Immutable.Map {
                        transfers: Immutable.Map {
                            single: "2111000000",
                            total: "3111000000",
                        },
                        created: "2018-12-17T01:59:03.718Z",
                        decimalAmount: "0.000000002111",
                        counterpartyAddress: "0x4231676a35483638796e2af8ed2af0a41b097524",
                        nonce: 21,
                        currency: "0x0000000000000000000000000000000000000000",
                        layer: "nahmii",
                        sender: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                    Immutable.Map {
                                        originId: "0",
                                        figure: Immutable.Map {
                                            currency: Immutable.Map {
                                                ct: "0x0000000000000000000000000000000000000000",
                                                id: "0",
                                            },
                                            amount: "4121100",
                                        },
                                    },
                                ],
                                single: Immutable.Map {
                                    currency: Immutable.Map {
                                        ct: "0x0000000000000000000000000000000000000000",
                                        id: "0",
                                    },
                                    amount: "2111000",
                                },
                            },
                            wallet: "0x4231676a35483638796e2af8ed2af0a41b097524",
                            nonce: 7,
                            balances: Immutable.Map {
                                current: "999995875778900",
                                previous: "999997988889900",
                            },
                        },
                        timestamp: "2018-12-17T01:59:03.776Z",
                        seals: Immutable.Map {
                            wallet: Immutable.Map {
                                hash: "0x57d9cf4ffc4b2aecce23d2e56083c7b437f5e105be74c1cd17d8522999b5d0be",
                                signature: Immutable.Map {
                                    s: "0x395b632dab03b34321c1aed7dcbac4a1b87582904d2898645b3ec90505c44348",
                                    r: "0x01cda7bddbc7c2194dd395aac73eaf1ca6760bfef83689c5a1240f936f0200d4",
                                    v: 28,
                                },
                            },
                            operator: Immutable.Map {
                                hash: "0x99c1a3a1cd8b15cdb969270f6e8f7fdce5b9c8377a00c38d800b9982c98eec5a",
                                signature: Immutable.Map {
                                    s: "0x129c9e071467ee98ddd799fa1ed7b3cbda11486955b9360afd22ce0ff4d91aab",
                                    r: "0x4d22165ff7382f998107a87e800a11581e7b99fa67ab613656706105157e5ab9",
                                    v: 28,
                                },
                            },
                        },
                        blockNumber: 4643058,
                        amount: "2111000000",
                        symbol: "ETH",
                        recipient: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                ],
                            },
                            wallet: "0x1c7429f62595097315289cebac1fdbda587ad512",
                            nonce: 4,
                            balances: Immutable.Map {
                                current: "10013111000000",
                                previous: "10011000000000",
                            },
                        },
                        type: "received",
                        updated: "2018-12-17T01:59:03.776Z",
                        id: "5c1702e78d9ea3000ea459d9",
                        operatorId: "0",
                        confirmed: true,
                    },
                    Immutable.Map {
                        decimalAmount: "0.0000000001",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780091,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x0000000000000000000000000000000000000000",
                        layer: "baseLayer",
                        sender: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        timestamp: "2018-08-06T02:32:00.000Z",
                        amount: "100000000",
                        symbol: "ETH",
                        recipient: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        type: "received",
                    },
                    Immutable.Map {
                        transfers: Immutable.Map {
                            single: "10000000000000000",
                            total: "10000000000000000",
                        },
                        created: "2018-11-16T22:40:54.951Z",
                        decimalAmount: "0.01",
                        counterpartyAddress: "0xc5768cdeda275fe5536147a3fbc8cfb6b0d8ac48",
                        nonce: 18,
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        layer: "nahmii",
                        sender: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                    Immutable.Map {
                                        originId: "0",
                                        figure: Immutable.Map {
                                            currency: Immutable.Map {
                                                ct: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                                                id: "0",
                                            },
                                            amount: "10000000000000",
                                        },
                                    },
                                ],
                                single: Immutable.Map {
                                    currency: Immutable.Map {
                                        ct: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                                        id: "0",
                                    },
                                    amount: "10000000000000",
                                },
                            },
                            wallet: "0x1c7429f62595097315289cebac1fdbda587ad512",
                            nonce: 3,
                            balances: Immutable.Map {
                                current: "89990000000000000",
                                previous: "100000000000000000",
                            },
                        },
                        timestamp: "2018-11-16T22:40:55.049Z",
                        seals: Immutable.Map {
                            wallet: Immutable.Map {
                                hash: "0x0b7d6d30e9665016246e6370e82579a35bc4d9c0cf88c65b38d538f7ad8ee828",
                                signature: Immutable.Map {
                                    s: "0x7d60c93b9037be6d880bbe86f258d0e371ad4015fc2528cf1312d924f9e76245",
                                    r: "0x9c11c2a5244a741f67837eb6efc1f12396c19d2490ff2bd872dbd9643a7c1013",
                                    v: 27,
                                },
                            },
                            operator: Immutable.Map {
                                hash: "0x92b0e8b3c705449eea1bce2e517468cec521e6451d4a7e6c4fe4c4efe7df6ab4",
                                signature: Immutable.Map {
                                    s: "0x09ad154d886899b36f15a2be68ddb61c15afe185acd498a9b6bb2577f317a942",
                                    r: "0x80d8f5e899f16c9a4abcc72d23399d4ddd3c08a29dae8233a46179ef54cc189c",
                                    v: 27,
                                },
                            },
                        },
                        blockNumber: 3780090,
                        amount: "10000000000000000",
                        symbol: "BOKKY",
                        recipient: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                ],
                            },
                            wallet: "0xc5768cdeda275fe5536147a3fbc8cfb6b0d8ac48",
                            nonce: 2,
                            balances: Immutable.Map {
                                current: "10000000000000000",
                                previous: "0",
                            },
                        },
                        type: "sent",
                        updated: "2018-11-16T22:40:55.049Z",
                        id: "5c16d4768d9ea3000ea45690",
                        operatorId: "0",
                        confirmed: true,
                    },
                    Immutable.Map {
                        decimalAmount: "0.000000000000000005",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780089,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        layer: "baseLayer",
                        sender: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        timestamp: "2018-08-06T02:32:00.000Z",
                        amount: "5",
                        symbol: "BOKKY",
                        recipient: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        type: "sent",
                    },
                ],
            },
            balances: Immutable.Map {
                baseLayer: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.198937",
                            currency: "0x0000000000000000000000000000000000000000",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.198937",
                                btc: "0.00198937",
                                usd: "81.962044",
                            },
                        },
                        Immutable.Map {
                            balance: "1.231288e-12",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "1.231288e-13",
                                btc: "1.231288e-15",
                                usd: "1.231288e-12",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1989370000001231288",
                        btc: "0.001989370000001231288",
                        usd: "81.962044000001231288",
                    },
                },
                nahmiiAvailable: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.113",
                        btc: "0.00113",
                        usd: "41.33",
                    },
                },
                nahmiiStaging: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1",
                        btc: "0.001",
                        usd: "41.2",
                    },
                },
                nahmiiStaged: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                    ],
                    total: Immutable.Map {
                        eth: "0",
                        btc: "0",
                        usd: "0",
                    },
                },
                nahmiiCombined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.2",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.2",
                                btc: "0.002",
                                usd: "82.4",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.213",
                        btc: "0.00213",
                        usd: "82.53",
                    },
                },
                combined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.398937",
                            currency: "0x0000000000000000000000000000000000000000",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.398937",
                                btc: "0.00398937",
                                usd: "164.362044",
                            },
                        },
                        Immutable.Map {
                            balance: "0.130000000001231288",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.0130000000001231288",
                                btc: "0.000130000000001231288",
                                usd: "0.130000000001231288",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.4119370000001231288",
                        btc: "0.004119370000001231288",
                        usd: "164.492044000001231288",
                    },
                },
            },
        }
    }
    depositStatus={
        Immutable.Map {
            depositingEth: false,
            approvingTokenDeposit: false,
            completingTokenDeposit: false,
            error: "some error message",
        }
    }
    gasStatistics={
        Immutable.Map {
        }
    }
    goWalletDetails={[Function]}
    intl={
        Object {
            "formatMessage": [Function],
            "formatNumber": [Function],
          }
    }
    ledgerNanoSInfo={
        Immutable.Map {
            status: "disconnected",
            addresses: Immutable.Map {
            },
            id: null,
            confTxOnDevice: false,
        }
    }
    nahmiiDeposit={[Function]}
    prices={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    eth: 0.1,
                    btc: 0.001,
                    usd: 1,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x0000000000000000000000000000000000000000",
                    eth: 1,
                    btc: 0.01,
                    usd: 412,
                },
            ],
        }
    }
    supportedAssets={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    symbol: "My20",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    symbol: "HBT",
                    decimals: 15,
                    color: "0063A5",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    symbol: "SBT",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    symbol: "WETH",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    symbol: "BOKKY",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x0000000000000000000000000000000000000000",
                    symbol: "ETH",
                    decimals: 18,
                    color: "5C78E4",
                },
            ],
        }
    }
    trezorInfo={
        Immutable.Map {
            status: "disconnected",
            connected: false,
            addresses: Immutable.Map {
            },
            id: "ajlsdfkjas",
            confTxOnDevice: false,
        }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <div
        style={
                Object {
                        "display": "flex",
                        "flex": "1",
                        "flexWrap": "wrap",
                        "marginTop": "0.5rem",
                      }
        }
>
        <div
                style={
                        Object {
                                "flex": "1",
                                "marginBottom": "3rem",
                                "marginRight": "2rem",
                              }
                }
        >
                <Form__FlexForm>
                        <Form__FormItem
                                colon={false}
                                label={
                                        <Form__FormItemLabel>
                                                select_asset_to_deposit
                                        </Form__FormItemLabel>
                                }
                        >
                                <style__Image
                                        alt="logo"
                                        onError={[Function]}
                                        src="/public/images/assets/ETH.svg"
                                />
                                <Select
                                        defaultValue="ETH"
                                        onSelect={[Function]}
                                        style={
                                                Object {
                                                        "paddingLeft": "0.5rem",
                                                      }
                                        }
                                >
                                        <Option
                                                value="ETH"
                                        >
                                                ETH
                                        </Option>
                                        <Option
                                                value="BOKKY"
                                        >
                                                BOKKY
                                        </Option>
                                </Select>
                        </Form__FormItem>
                        <Form__FormItem
                                colon={false}
                                help={
                                        <HelperTextComponent
                                                left="$0.00"
                                                right="usd"
                                        />
                                }
                                label={
                                        <Form__FormItemLabel>
                                                enter_amount
                                        </Form__FormItemLabel>
                                }
                        >
                                <Input
                                        defaultValue="0"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        value="0"
                                />
                        </Form__FormItem>
                        <GasOptions
                                defaultGasLimit={600000}
                                defaultGasPrice={10}
                                defaultOption="average"
                                gasStatistics={undefined}
                                intl={
                                        Object {
                                                "formatMessage": [Function],
                                                "formatNumber": [Function],
                                              }
                                }
                                onChange={[Function]}
                        />
                        <style__DollarPrice>
                                1 ETH = 
                                <style__StyledNumericText
                                        type="currency"
                                        value="412"
                                />
                        </style__DollarPrice>
                </Form__FlexForm>
        </div>
        <div
                style={
                        Object {
                                "minWidth": "34rem",
                              }
                }
        >
                <Row
                        gutter={0}
                >
                        <style__StyledCol
                                span={12}
                        >
                                deposit
                        </style__StyledCol>
                </Row>
                <Row
                        gutter={0}
                >
                        <TransferDescriptionItem
                                main={
                                        <SelectableText>
                                                <NumericText
                                                        maxDecimalPlaces={18}
                                                        value="0"
                                                />
                                                 
                                                ETH
                                        </SelectableText>
                                }
                                subtitle={
                                        <NumericText
                                                type="currency"
                                                value="0"
                                        />
                                }
                        />
                </Row>
                <Row
                        gutter={0}
                >
                        <style__StyledCol
                                span={12}
                        >
                                <TooltipText
                                        details="max_base_layer_fee_explain"
                                >
                                        max_base_layer_fee
                                </TooltipText>
                        </style__StyledCol>
                </Row>
                <Row
                        gutter={0}
                >
                        <TransferDescriptionItem
                                main={
                                        <SelectableText>
                                                <NumericText
                                                        maxDecimalPlaces={18}
                                                        value="0.006"
                                                />
                                                 
                                                ETH
                                        </SelectableText>
                                }
                                subtitle={
                                        <NumericText
                                                type="currency"
                                                value="2.472"
                                        />
                                }
                        />
                </Row>
                <Row
                        gutter={0}
                >
                        <style__StyledCol
                                span={12}
                        >
                                base_layer
                                 ETH 
                                balance_before
                        </style__StyledCol>
                </Row>
                <Row
                        gutter={0}
                >
                        <TransferDescriptionItem
                                main={
                                        <SelectableText>
                                                <NumericText
                                                        maxDecimalPlaces={18}
                                                        value="0.198937"
                                                />
                                                 
                                                ETH
                                        </SelectableText>
                                }
                                subtitle={
                                        <NumericText
                                                type="currency"
                                                value="81.962044"
                                        />
                                }
                        />
                </Row>
                <Row
                        gutter={0}
                >
                        <style__StyledCol
                                span={12}
                        >
                                base_layer
                                 ETH 
                                balance_after
                        </style__StyledCol>
                </Row>
                <Row
                        gutter={0}
                >
                        <TransferDescriptionItem
                                main={
                                        <SelectableText>
                                                <NumericText
                                                        maxDecimalPlaces={18}
                                                        value="0.192937"
                                                />
                                                 
                                                ETH
                                        </SelectableText>
                                }
                                subtitle={
                                        <NumericText
                                                type="currency"
                                                value="79.490044"
                                        />
                                }
                        />
                </Row>
                <div>
                        <Row
                                gutter={0}
                        >
                                <style__StyledCol
                                        span={12}
                                >
                                        nahmii_available
                                         ETH 
                                        balance_before
                                </style__StyledCol>
                        </Row>
                        <Row
                                gutter={0}
                        >
                                <TransferDescriptionItem
                                        main={
                                                <SelectableText>
                                                        <NumericText
                                                                maxDecimalPlaces={18}
                                                                value="0.1"
                                                        />
                                                         
                                                        ETH
                                                </SelectableText>
                                        }
                                        subtitle={
                                                <NumericText
                                                        type="currency"
                                                        value="41.2"
                                                />
                                        }
                                />
                        </Row>
                        <Row
                                gutter={0}
                        >
                                <style__StyledCol
                                        span={12}
                                >
                                        nahmii_available
                                         ETH 
                                        balance_after
                                </style__StyledCol>
                        </Row>
                        <Row
                                gutter={0}
                        >
                                <TransferDescriptionItem
                                        main={
                                                <SelectableText>
                                                        <NumericText
                                                                maxDecimalPlaces={18}
                                                                value="0.1"
                                                        />
                                                         
                                                        ETH
                                                </SelectableText>
                                        }
                                        subtitle={
                                                <NumericText
                                                        type="currency"
                                                        value="41.2"
                                                />
                                        }
                                />
                        </Row>
                </div>
                <Row
                        gutter={0}
                >
                        <style__HWPromptWrapper>
                                <Connect(HWPromptContainer) />
                        </style__HWPromptWrapper>
                        <div
                                style={
                                        Object {
                                                "width": "fit-content",
                                              }
                                }
                        >
                                <style__StyledButton
                                        disabled={true}
                                        onClick={[Function]}
                                        type="primary"
                                >
                                        <span>
                                                deposit
                                        </span>
                                </style__StyledButton>
                        </div>
                </Row>
                <SectionHeading
                        style={
                                Object {
                                        "marginTop": "2rem",
                                        "maxWidth": "25rem",
                                      }
                        }
                >
                        deposits_note
                </SectionHeading>
        </div>
</div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            style={
                        Object {
                                    "flex": "1",
                                    "marginBottom": "3rem",
                                    "marginRight": "2rem",
                                  }
            }
>
            <Form__FlexForm>
                        <Form__FormItem
                                    colon={false}
                                    label={
                                                <Form__FormItemLabel>
                                                            select_asset_to_deposit
                                                </Form__FormItemLabel>
                                    }
                        >
                                    <style__Image
                                                alt="logo"
                                                onError={[Function]}
                                                src="/public/images/assets/ETH.svg"
                                    />
                                    <Select
                                                defaultValue="ETH"
                                                onSelect={[Function]}
                                                style={
                                                            Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                                                }
                                    >
                                                <Option
                                                            value="ETH"
                                                >
                                                            ETH
                                                </Option>
                                                <Option
                                                            value="BOKKY"
                                                >
                                                            BOKKY
                                                </Option>
                                    </Select>
                        </Form__FormItem>
                        <Form__FormItem
                                    colon={false}
                                    help={
                                                <HelperTextComponent
                                                            left="$0.00"
                                                            right="usd"
                                                />
                                    }
                                    label={
                                                <Form__FormItemLabel>
                                                            enter_amount
                                                </Form__FormItemLabel>
                                    }
                        >
                                    <Input
                                                defaultValue="0"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value="0"
                                    />
                        </Form__FormItem>
                        <GasOptions
                                    defaultGasLimit={600000}
                                    defaultGasPrice={10}
                                    defaultOption="average"
                                    gasStatistics={undefined}
                                    intl={
                                                Object {
                                                            "formatMessage": [Function],
                                                            "formatNumber": [Function],
                                                          }
                                    }
                                    onChange={[Function]}
                        />
                        <style__DollarPrice>
                                    1 ETH = 
                                    <style__StyledNumericText
                                                type="currency"
                                                value="412"
                                    />
                        </style__DollarPrice>
            </Form__FlexForm>
</div>,
          <div
            style={
                        Object {
                                    "minWidth": "34rem",
                                  }
            }
>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    deposit
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main={
                                                <SelectableText>
                                                            <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0"
                                                            />
                                                             
                                                            ETH
                                                </SelectableText>
                                    }
                                    subtitle={
                                                <NumericText
                                                            type="currency"
                                                            value="0"
                                                />
                                    }
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    <TooltipText
                                                details="max_base_layer_fee_explain"
                                    >
                                                max_base_layer_fee
                                    </TooltipText>
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main={
                                                <SelectableText>
                                                            <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.006"
                                                            />
                                                             
                                                            ETH
                                                </SelectableText>
                                    }
                                    subtitle={
                                                <NumericText
                                                            type="currency"
                                                            value="2.472"
                                                />
                                    }
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    base_layer
                                     ETH 
                                    balance_before
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main={
                                                <SelectableText>
                                                            <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.198937"
                                                            />
                                                             
                                                            ETH
                                                </SelectableText>
                                    }
                                    subtitle={
                                                <NumericText
                                                            type="currency"
                                                            value="81.962044"
                                                />
                                    }
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    base_layer
                                     ETH 
                                    balance_after
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main={
                                                <SelectableText>
                                                            <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.192937"
                                                            />
                                                             
                                                            ETH
                                                </SelectableText>
                                    }
                                    subtitle={
                                                <NumericText
                                                            type="currency"
                                                            value="79.490044"
                                                />
                                    }
                        />
            </Row>
            <div>
                        <Row
                                    gutter={0}
                        >
                                    <style__StyledCol
                                                span={12}
                                    >
                                                nahmii_available
                                                 ETH 
                                                balance_before
                                    </style__StyledCol>
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <TransferDescriptionItem
                                                main={
                                                            <SelectableText>
                                                                        <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.1"
                                                                        />
                                                                         
                                                                        ETH
                                                            </SelectableText>
                                                }
                                                subtitle={
                                                            <NumericText
                                                                        type="currency"
                                                                        value="41.2"
                                                            />
                                                }
                                    />
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <style__StyledCol
                                                span={12}
                                    >
                                                nahmii_available
                                                 ETH 
                                                balance_after
                                    </style__StyledCol>
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <TransferDescriptionItem
                                                main={
                                                            <SelectableText>
                                                                        <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.1"
                                                                        />
                                                                         
                                                                        ETH
                                                            </SelectableText>
                                                }
                                                subtitle={
                                                            <NumericText
                                                                        type="currency"
                                                                        value="41.2"
                                                            />
                                                }
                                    />
                        </Row>
            </div>
            <Row
                        gutter={0}
            >
                        <style__HWPromptWrapper>
                                    <Connect(HWPromptContainer) />
                        </style__HWPromptWrapper>
                        <div
                                    style={
                                                Object {
                                                            "width": "fit-content",
                                                          }
                                    }
                        >
                                    <style__StyledButton
                                                disabled={true}
                                                onClick={[Function]}
                                                type="primary"
                                    >
                                                <span>
                                                            deposit
                                                </span>
                                    </style__StyledButton>
                        </div>
            </Row>
            <SectionHeading
                        style={
                                    Object {
                                                "marginTop": "2rem",
                                                "maxWidth": "25rem",
                                              }
                        }
            >
                        deposits_note
            </SectionHeading>
</div>,
        ],
        "style": Object {
          "display": "flex",
          "flex": "1",
          "flexWrap": "wrap",
          "marginTop": "0.5rem",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Form__FlexForm>
              <Form__FormItem
                            colon={false}
                            label={
                                          <Form__FormItemLabel>
                                                        select_asset_to_deposit
                                          </Form__FormItemLabel>
                            }
              >
                            <style__Image
                                          alt="logo"
                                          onError={[Function]}
                                          src="/public/images/assets/ETH.svg"
                            />
                            <Select
                                          defaultValue="ETH"
                                          onSelect={[Function]}
                                          style={
                                                        Object {
                                                                      "paddingLeft": "0.5rem",
                                                                    }
                                          }
                            >
                                          <Option
                                                        value="ETH"
                                          >
                                                        ETH
                                          </Option>
                                          <Option
                                                        value="BOKKY"
                                          >
                                                        BOKKY
                                          </Option>
                            </Select>
              </Form__FormItem>
              <Form__FormItem
                            colon={false}
                            help={
                                          <HelperTextComponent
                                                        left="$0.00"
                                                        right="usd"
                                          />
                            }
                            label={
                                          <Form__FormItemLabel>
                                                        enter_amount
                                          </Form__FormItemLabel>
                            }
              >
                            <Input
                                          defaultValue="0"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          value="0"
                            />
              </Form__FormItem>
              <GasOptions
                            defaultGasLimit={600000}
                            defaultGasPrice={10}
                            defaultOption="average"
                            gasStatistics={undefined}
                            intl={
                                          Object {
                                                        "formatMessage": [Function],
                                                        "formatNumber": [Function],
                                                      }
                            }
                            onChange={[Function]}
              />
              <style__DollarPrice>
                            1 ETH = 
                            <style__StyledNumericText
                                          type="currency"
                                          value="412"
                            />
              </style__DollarPrice>
</Form__FlexForm>,
            "style": Object {
              "flex": "1",
              "marginBottom": "3rem",
              "marginRight": "2rem",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Form__FormItem
                  colon={false}
                  label={
                                    <Form__FormItemLabel>
                                                      select_asset_to_deposit
                                    </Form__FormItemLabel>
                  }
>
                  <style__Image
                                    alt="logo"
                                    onError={[Function]}
                                    src="/public/images/assets/ETH.svg"
                  />
                  <Select
                                    defaultValue="ETH"
                                    onSelect={[Function]}
                                    style={
                                                      Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                                    }
                  >
                                    <Option
                                                      value="ETH"
                                    >
                                                      ETH
                                    </Option>
                                    <Option
                                                      value="BOKKY"
                                    >
                                                      BOKKY
                                    </Option>
                  </Select>
</Form__FormItem>,
                <Form__FormItem
                  colon={false}
                  help={
                                    <HelperTextComponent
                                                      left="$0.00"
                                                      right="usd"
                                    />
                  }
                  label={
                                    <Form__FormItemLabel>
                                                      enter_amount
                                    </Form__FormItemLabel>
                  }
>
                  <Input
                                    defaultValue="0"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    value="0"
                  />
</Form__FormItem>,
                <GasOptions
                  defaultGasLimit={600000}
                  defaultGasPrice={10}
                  defaultOption="average"
                  gasStatistics={undefined}
                  intl={
                                    Object {
                                                      "formatMessage": [Function],
                                                      "formatNumber": [Function],
                                                    }
                  }
                  onChange={[Function]}
/>,
                <style__DollarPrice>
                  1 ETH = 
                  <style__StyledNumericText
                                    type="currency"
                                    value="412"
                  />
</style__DollarPrice>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <style__Image
                      alt="logo"
                      onError={[Function]}
                      src="/public/images/assets/ETH.svg"
/>,
                    <Select
                      defaultValue="ETH"
                      onSelect={[Function]}
                      style={
                                            Object {
                                                                  "paddingLeft": "0.5rem",
                                                                }
                      }
>
                      <Option
                                            value="ETH"
                      >
                                            ETH
                      </Option>
                      <Option
                                            value="BOKKY"
                      >
                                            BOKKY
                      </Option>
</Select>,
                  ],
                  "colon": false,
                  "label": <Form__FormItemLabel>
                    select_asset_to_deposit
</Form__FormItemLabel>,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "alt": "logo",
                      "onError": [Function],
                      "src": "/public/images/assets/ETH.svg",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <Option
                          value="ETH"
>
                          ETH
</Option>,
                        <Option
                          value="BOKKY"
>
                          BOKKY
</Option>,
                      ],
                      "defaultValue": "ETH",
                      "onSelect": [Function],
                      "style": Object {
                        "paddingLeft": "0.5rem",
                      },
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": "ETH",
                        "nodeType": "class",
                        "props": Object {
                          "children": "ETH",
                          "value": "ETH",
                        },
                        "ref": null,
                        "rendered": "ETH",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": "BOKKY",
                        "nodeType": "class",
                        "props": Object {
                          "children": "BOKKY",
                          "value": "BOKKY",
                        },
                        "ref": null,
                        "rendered": "BOKKY",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Input
                    defaultValue="0"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    value="0"
/>,
                  "colon": false,
                  "help": <HelperTextComponent
                    left="$0.00"
                    right="usd"
/>,
                  "label": <Form__FormItemLabel>
                    enter_amount
</Form__FormItemLabel>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "defaultValue": "0",
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "0",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "defaultGasLimit": 600000,
                  "defaultGasPrice": 10,
                  "defaultOption": "average",
                  "gasStatistics": undefined,
                  "intl": Object {
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                  },
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "1 ETH = ",
                    <style__StyledNumericText
                      type="currency"
                      value="412"
/>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "1 ETH = ",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "type": "currency",
                      "value": "412",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                deposit
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main={
                                                <SelectableText>
                                                                <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0"
                                                                />
                                                                 
                                                                ETH
                                                </SelectableText>
                                }
                                subtitle={
                                                <NumericText
                                                                type="currency"
                                                                value="0"
                                                />
                                }
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                <TooltipText
                                                details="max_base_layer_fee_explain"
                                >
                                                max_base_layer_fee
                                </TooltipText>
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main={
                                                <SelectableText>
                                                                <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.006"
                                                                />
                                                                 
                                                                ETH
                                                </SelectableText>
                                }
                                subtitle={
                                                <NumericText
                                                                type="currency"
                                                                value="2.472"
                                                />
                                }
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                base_layer
                                 ETH 
                                balance_before
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main={
                                                <SelectableText>
                                                                <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.198937"
                                                                />
                                                                 
                                                                ETH
                                                </SelectableText>
                                }
                                subtitle={
                                                <NumericText
                                                                type="currency"
                                                                value="81.962044"
                                                />
                                }
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                base_layer
                                 ETH 
                                balance_after
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main={
                                                <SelectableText>
                                                                <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.192937"
                                                                />
                                                                 
                                                                ETH
                                                </SelectableText>
                                }
                                subtitle={
                                                <NumericText
                                                                type="currency"
                                                                value="79.490044"
                                                />
                                }
                />
</Row>,
              <div>
                <Row
                                gutter={0}
                >
                                <style__StyledCol
                                                span={12}
                                >
                                                nahmii_available
                                                 ETH 
                                                balance_before
                                </style__StyledCol>
                </Row>
                <Row
                                gutter={0}
                >
                                <TransferDescriptionItem
                                                main={
                                                                <SelectableText>
                                                                                <NumericText
                                                                                                maxDecimalPlaces={18}
                                                                                                value="0.1"
                                                                                />
                                                                                 
                                                                                ETH
                                                                </SelectableText>
                                                }
                                                subtitle={
                                                                <NumericText
                                                                                type="currency"
                                                                                value="41.2"
                                                                />
                                                }
                                />
                </Row>
                <Row
                                gutter={0}
                >
                                <style__StyledCol
                                                span={12}
                                >
                                                nahmii_available
                                                 ETH 
                                                balance_after
                                </style__StyledCol>
                </Row>
                <Row
                                gutter={0}
                >
                                <TransferDescriptionItem
                                                main={
                                                                <SelectableText>
                                                                                <NumericText
                                                                                                maxDecimalPlaces={18}
                                                                                                value="0.1"
                                                                                />
                                                                                 
                                                                                ETH
                                                                </SelectableText>
                                                }
                                                subtitle={
                                                                <NumericText
                                                                                type="currency"
                                                                                value="41.2"
                                                                />
                                                }
                                />
                </Row>
</div>,
              false,
              <Row
                gutter={0}
>
                <style__HWPromptWrapper>
                                <Connect(HWPromptContainer) />
                </style__HWPromptWrapper>
                <div
                                style={
                                                Object {
                                                                "width": "fit-content",
                                                              }
                                }
                >
                                <style__StyledButton
                                                disabled={true}
                                                onClick={[Function]}
                                                type="primary"
                                >
                                                <span>
                                                                deposit
                                                </span>
                                </style__StyledButton>
                </div>
</Row>,
              <SectionHeading
                style={
                                Object {
                                                "marginTop": "2rem",
                                                "maxWidth": "25rem",
                                              }
                }
>
                deposits_note
</SectionHeading>,
            ],
            "style": Object {
              "minWidth": "34rem",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  deposit
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "deposit",
                  "span": 12,
                },
                "ref": null,
                "rendered": "deposit",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main={
                                    <SelectableText>
                                                      <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0"
                                                      />
                                                       
                                                      ETH
                                    </SelectableText>
                  }
                  subtitle={
                                    <NumericText
                                                      type="currency"
                                                      value="0"
                                    />
                  }
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": <SelectableText>
                    <NumericText
                                        maxDecimalPlaces={18}
                                        value="0"
                    />
                     
                    ETH
</SelectableText>,
                  "subtitle": <NumericText
                    type="currency"
                    value="0"
/>,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  <TooltipText
                                    details="max_base_layer_fee_explain"
                  >
                                    max_base_layer_fee
                  </TooltipText>
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TooltipText
                    details="max_base_layer_fee_explain"
>
                    max_base_layer_fee
</TooltipText>,
                  "span": 12,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "max_base_layer_fee",
                    "details": "max_base_layer_fee_explain",
                  },
                  "ref": null,
                  "rendered": "max_base_layer_fee",
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main={
                                    <SelectableText>
                                                      <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.006"
                                                      />
                                                       
                                                      ETH
                                    </SelectableText>
                  }
                  subtitle={
                                    <NumericText
                                                      type="currency"
                                                      value="2.472"
                                    />
                  }
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": <SelectableText>
                    <NumericText
                                        maxDecimalPlaces={18}
                                        value="0.006"
                    />
                     
                    ETH
</SelectableText>,
                  "subtitle": <NumericText
                    type="currency"
                    value="2.472"
/>,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  base_layer
                   ETH 
                  balance_before
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "base_layer",
                    " ETH ",
                    "balance_before",
                  ],
                  "span": 12,
                },
                "ref": null,
                "rendered": Array [
                  "base_layer",
                  " ETH ",
                  "balance_before",
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main={
                                    <SelectableText>
                                                      <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.198937"
                                                      />
                                                       
                                                      ETH
                                    </SelectableText>
                  }
                  subtitle={
                                    <NumericText
                                                      type="currency"
                                                      value="81.962044"
                                    />
                  }
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": <SelectableText>
                    <NumericText
                                        maxDecimalPlaces={18}
                                        value="0.198937"
                    />
                     
                    ETH
</SelectableText>,
                  "subtitle": <NumericText
                    type="currency"
                    value="81.962044"
/>,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  base_layer
                   ETH 
                  balance_after
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "base_layer",
                    " ETH ",
                    "balance_after",
                  ],
                  "span": 12,
                },
                "ref": null,
                "rendered": Array [
                  "base_layer",
                  " ETH ",
                  "balance_after",
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main={
                                    <SelectableText>
                                                      <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.192937"
                                                      />
                                                       
                                                      ETH
                                    </SelectableText>
                  }
                  subtitle={
                                    <NumericText
                                                      type="currency"
                                                      value="79.490044"
                                    />
                  }
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": <SelectableText>
                    <NumericText
                                        maxDecimalPlaces={18}
                                        value="0.192937"
                    />
                     
                    ETH
</SelectableText>,
                  "subtitle": <NumericText
                    type="currency"
                    value="79.490044"
/>,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Row
                    gutter={0}
>
                    <style__StyledCol
                                        span={12}
                    >
                                        nahmii_available
                                         ETH 
                                        balance_before
                    </style__StyledCol>
</Row>,
                  <Row
                    gutter={0}
>
                    <TransferDescriptionItem
                                        main={
                                                            <SelectableText>
                                                                                <NumericText
                                                                                                    maxDecimalPlaces={18}
                                                                                                    value="0.1"
                                                                                />
                                                                                 
                                                                                ETH
                                                            </SelectableText>
                                        }
                                        subtitle={
                                                            <NumericText
                                                                                type="currency"
                                                                                value="41.2"
                                                            />
                                        }
                    />
</Row>,
                  <Row
                    gutter={0}
>
                    <style__StyledCol
                                        span={12}
                    >
                                        nahmii_available
                                         ETH 
                                        balance_after
                    </style__StyledCol>
</Row>,
                  <Row
                    gutter={0}
>
                    <TransferDescriptionItem
                                        main={
                                                            <SelectableText>
                                                                                <NumericText
                                                                                                    maxDecimalPlaces={18}
                                                                                                    value="0.1"
                                                                                />
                                                                                 
                                                                                ETH
                                                            </SelectableText>
                                        }
                                        subtitle={
                                                            <NumericText
                                                                                type="currency"
                                                                                value="41.2"
                                                            />
                                        }
                    />
</Row>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <style__StyledCol
                      span={12}
>
                      nahmii_available
                       ETH 
                      balance_before
</style__StyledCol>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "nahmii_available",
                        " ETH ",
                        "balance_before",
                      ],
                      "span": 12,
                    },
                    "ref": null,
                    "rendered": Array [
                      "nahmii_available",
                      " ETH ",
                      "balance_before",
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TransferDescriptionItem
                      main={
                                            <SelectableText>
                                                                  <NumericText
                                                                                        maxDecimalPlaces={18}
                                                                                        value="0.1"
                                                                  />
                                                                   
                                                                  ETH
                                            </SelectableText>
                      }
                      subtitle={
                                            <NumericText
                                                                  type="currency"
                                                                  value="41.2"
                                            />
                      }
/>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "main": <SelectableText>
                        <NumericText
                                                maxDecimalPlaces={18}
                                                value="0.1"
                        />
                         
                        ETH
</SelectableText>,
                      "subtitle": <NumericText
                        type="currency"
                        value="41.2"
/>,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <style__StyledCol
                      span={12}
>
                      nahmii_available
                       ETH 
                      balance_after
</style__StyledCol>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "nahmii_available",
                        " ETH ",
                        "balance_after",
                      ],
                      "span": 12,
                    },
                    "ref": null,
                    "rendered": Array [
                      "nahmii_available",
                      " ETH ",
                      "balance_after",
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TransferDescriptionItem
                      main={
                                            <SelectableText>
                                                                  <NumericText
                                                                                        maxDecimalPlaces={18}
                                                                                        value="0.1"
                                                                  />
                                                                   
                                                                  ETH
                                            </SelectableText>
                      }
                      subtitle={
                                            <NumericText
                                                                  type="currency"
                                                                  value="41.2"
                                            />
                      }
/>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "main": <SelectableText>
                        <NumericText
                                                maxDecimalPlaces={18}
                                                value="0.1"
                        />
                         
                        ETH
</SelectableText>,
                      "subtitle": <NumericText
                        type="currency"
                        value="41.2"
/>,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <style__HWPromptWrapper>
                    <Connect(HWPromptContainer) />
</style__HWPromptWrapper>,
                  <div
                    style={
                                        Object {
                                                            "width": "fit-content",
                                                          }
                    }
>
                    <style__StyledButton
                                        disabled={true}
                                        onClick={[Function]}
                                        type="primary"
                    >
                                        <span>
                                                            deposit
                                        </span>
                    </style__StyledButton>
</div>,
                ],
                "gutter": 0,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Connect(HWPromptContainer) />,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <style__StyledButton
                      disabled={true}
                      onClick={[Function]}
                      type="primary"
>
                      <span>
                                            deposit
                      </span>
</style__StyledButton>,
                    "style": Object {
                      "width": "fit-content",
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <span>
                        deposit
</span>,
                      "disabled": true,
                      "onClick": [Function],
                      "type": "primary",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "deposit",
                      },
                      "ref": null,
                      "rendered": "deposit",
                      "type": "span",
                    },
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "deposits_note",
                "style": Object {
                  "marginTop": "2rem",
                  "maxWidth": "25rem",
                },
              },
              "ref": null,
              "rendered": "deposits_note",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          style={
                    Object {
                              "display": "flex",
                              "flex": "1",
                              "flexWrap": "wrap",
                              "marginTop": "0.5rem",
                            }
          }
>
          <div
                    style={
                              Object {
                                        "flex": "1",
                                        "marginBottom": "3rem",
                                        "marginRight": "2rem",
                                      }
                    }
          >
                    <Form__FlexForm>
                              <Form__FormItem
                                        colon={false}
                                        label={
                                                  <Form__FormItemLabel>
                                                            select_asset_to_deposit
                                                  </Form__FormItemLabel>
                                        }
                              >
                                        <style__Image
                                                  alt="logo"
                                                  onError={[Function]}
                                                  src="/public/images/assets/ETH.svg"
                                        />
                                        <Select
                                                  defaultValue="ETH"
                                                  onSelect={[Function]}
                                                  style={
                                                            Object {
                                                                      "paddingLeft": "0.5rem",
                                                                    }
                                                  }
                                        >
                                                  <Option
                                                            value="ETH"
                                                  >
                                                            ETH
                                                  </Option>
                                                  <Option
                                                            value="BOKKY"
                                                  >
                                                            BOKKY
                                                  </Option>
                                        </Select>
                              </Form__FormItem>
                              <Form__FormItem
                                        colon={false}
                                        help={
                                                  <HelperTextComponent
                                                            left="$0.00"
                                                            right="usd"
                                                  />
                                        }
                                        label={
                                                  <Form__FormItemLabel>
                                                            enter_amount
                                                  </Form__FormItemLabel>
                                        }
                              >
                                        <Input
                                                  defaultValue="0"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  value="0"
                                        />
                              </Form__FormItem>
                              <GasOptions
                                        defaultGasLimit={600000}
                                        defaultGasPrice={10}
                                        defaultOption="average"
                                        gasStatistics={undefined}
                                        intl={
                                                  Object {
                                                            "formatMessage": [Function],
                                                            "formatNumber": [Function],
                                                          }
                                        }
                                        onChange={[Function]}
                              />
                              <style__DollarPrice>
                                        1 ETH = 
                                        <style__StyledNumericText
                                                  type="currency"
                                                  value="412"
                                        />
                              </style__DollarPrice>
                    </Form__FlexForm>
          </div>
          <div
                    style={
                              Object {
                                        "minWidth": "34rem",
                                      }
                    }
          >
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        deposit
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main={
                                                  <SelectableText>
                                                            <NumericText
                                                                      maxDecimalPlaces={18}
                                                                      value="0"
                                                            />
                                                             
                                                            ETH
                                                  </SelectableText>
                                        }
                                        subtitle={
                                                  <NumericText
                                                            type="currency"
                                                            value="0"
                                                  />
                                        }
                              />
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        <TooltipText
                                                  details="max_base_layer_fee_explain"
                                        >
                                                  max_base_layer_fee
                                        </TooltipText>
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main={
                                                  <SelectableText>
                                                            <NumericText
                                                                      maxDecimalPlaces={18}
                                                                      value="0.006"
                                                            />
                                                             
                                                            ETH
                                                  </SelectableText>
                                        }
                                        subtitle={
                                                  <NumericText
                                                            type="currency"
                                                            value="2.472"
                                                  />
                                        }
                              />
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        base_layer
                                         ETH 
                                        balance_before
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main={
                                                  <SelectableText>
                                                            <NumericText
                                                                      maxDecimalPlaces={18}
                                                                      value="0.198937"
                                                            />
                                                             
                                                            ETH
                                                  </SelectableText>
                                        }
                                        subtitle={
                                                  <NumericText
                                                            type="currency"
                                                            value="81.962044"
                                                  />
                                        }
                              />
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        base_layer
                                         ETH 
                                        balance_after
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main={
                                                  <SelectableText>
                                                            <NumericText
                                                                      maxDecimalPlaces={18}
                                                                      value="0.192937"
                                                            />
                                                             
                                                            ETH
                                                  </SelectableText>
                                        }
                                        subtitle={
                                                  <NumericText
                                                            type="currency"
                                                            value="79.490044"
                                                  />
                                        }
                              />
                    </Row>
                    <div>
                              <Row
                                        gutter={0}
                              >
                                        <style__StyledCol
                                                  span={12}
                                        >
                                                  nahmii_available
                                                   ETH 
                                                  balance_before
                                        </style__StyledCol>
                              </Row>
                              <Row
                                        gutter={0}
                              >
                                        <TransferDescriptionItem
                                                  main={
                                                            <SelectableText>
                                                                      <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.1"
                                                                      />
                                                                       
                                                                      ETH
                                                            </SelectableText>
                                                  }
                                                  subtitle={
                                                            <NumericText
                                                                      type="currency"
                                                                      value="41.2"
                                                            />
                                                  }
                                        />
                              </Row>
                              <Row
                                        gutter={0}
                              >
                                        <style__StyledCol
                                                  span={12}
                                        >
                                                  nahmii_available
                                                   ETH 
                                                  balance_after
                                        </style__StyledCol>
                              </Row>
                              <Row
                                        gutter={0}
                              >
                                        <TransferDescriptionItem
                                                  main={
                                                            <SelectableText>
                                                                      <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.1"
                                                                      />
                                                                       
                                                                      ETH
                                                            </SelectableText>
                                                  }
                                                  subtitle={
                                                            <NumericText
                                                                      type="currency"
                                                                      value="41.2"
                                                            />
                                                  }
                                        />
                              </Row>
                    </div>
                    <Row
                              gutter={0}
                    >
                              <style__HWPromptWrapper>
                                        <Connect(HWPromptContainer) />
                              </style__HWPromptWrapper>
                              <div
                                        style={
                                                  Object {
                                                            "width": "fit-content",
                                                          }
                                        }
                              >
                                        <style__StyledButton
                                                  disabled={true}
                                                  onClick={[Function]}
                                                  type="primary"
                                        >
                                                  <span>
                                                            deposit
                                                  </span>
                                        </style__StyledButton>
                              </div>
                    </Row>
                    <SectionHeading
                              style={
                                        Object {
                                                  "marginTop": "2rem",
                                                  "maxWidth": "25rem",
                                                }
                              }
                    >
                              deposits_note
                    </SectionHeading>
          </div>
</div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              style={
                            Object {
                                          "flex": "1",
                                          "marginBottom": "3rem",
                                          "marginRight": "2rem",
                                        }
              }
>
              <Form__FlexForm>
                            <Form__FormItem
                                          colon={false}
                                          label={
                                                        <Form__FormItemLabel>
                                                                      select_asset_to_deposit
                                                        </Form__FormItemLabel>
                                          }
                            >
                                          <style__Image
                                                        alt="logo"
                                                        onError={[Function]}
                                                        src="/public/images/assets/ETH.svg"
                                          />
                                          <Select
                                                        defaultValue="ETH"
                                                        onSelect={[Function]}
                                                        style={
                                                                      Object {
                                                                                    "paddingLeft": "0.5rem",
                                                                                  }
                                                        }
                                          >
                                                        <Option
                                                                      value="ETH"
                                                        >
                                                                      ETH
                                                        </Option>
                                                        <Option
                                                                      value="BOKKY"
                                                        >
                                                                      BOKKY
                                                        </Option>
                                          </Select>
                            </Form__FormItem>
                            <Form__FormItem
                                          colon={false}
                                          help={
                                                        <HelperTextComponent
                                                                      left="$0.00"
                                                                      right="usd"
                                                        />
                                          }
                                          label={
                                                        <Form__FormItemLabel>
                                                                      enter_amount
                                                        </Form__FormItemLabel>
                                          }
                            >
                                          <Input
                                                        defaultValue="0"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        value="0"
                                          />
                            </Form__FormItem>
                            <GasOptions
                                          defaultGasLimit={600000}
                                          defaultGasPrice={10}
                                          defaultOption="average"
                                          gasStatistics={undefined}
                                          intl={
                                                        Object {
                                                                      "formatMessage": [Function],
                                                                      "formatNumber": [Function],
                                                                    }
                                          }
                                          onChange={[Function]}
                            />
                            <style__DollarPrice>
                                          1 ETH = 
                                          <style__StyledNumericText
                                                        type="currency"
                                                        value="412"
                                          />
                            </style__DollarPrice>
              </Form__FlexForm>
</div>,
            <div
              style={
                            Object {
                                          "minWidth": "34rem",
                                        }
              }
>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          deposit
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main={
                                                        <SelectableText>
                                                                      <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0"
                                                                      />
                                                                       
                                                                      ETH
                                                        </SelectableText>
                                          }
                                          subtitle={
                                                        <NumericText
                                                                      type="currency"
                                                                      value="0"
                                                        />
                                          }
                            />
              </Row>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          <TooltipText
                                                        details="max_base_layer_fee_explain"
                                          >
                                                        max_base_layer_fee
                                          </TooltipText>
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main={
                                                        <SelectableText>
                                                                      <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.006"
                                                                      />
                                                                       
                                                                      ETH
                                                        </SelectableText>
                                          }
                                          subtitle={
                                                        <NumericText
                                                                      type="currency"
                                                                      value="2.472"
                                                        />
                                          }
                            />
              </Row>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          base_layer
                                           ETH 
                                          balance_before
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main={
                                                        <SelectableText>
                                                                      <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.198937"
                                                                      />
                                                                       
                                                                      ETH
                                                        </SelectableText>
                                          }
                                          subtitle={
                                                        <NumericText
                                                                      type="currency"
                                                                      value="81.962044"
                                                        />
                                          }
                            />
              </Row>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          base_layer
                                           ETH 
                                          balance_after
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main={
                                                        <SelectableText>
                                                                      <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.192937"
                                                                      />
                                                                       
                                                                      ETH
                                                        </SelectableText>
                                          }
                                          subtitle={
                                                        <NumericText
                                                                      type="currency"
                                                                      value="79.490044"
                                                        />
                                          }
                            />
              </Row>
              <div>
                            <Row
                                          gutter={0}
                            >
                                          <style__StyledCol
                                                        span={12}
                                          >
                                                        nahmii_available
                                                         ETH 
                                                        balance_before
                                          </style__StyledCol>
                            </Row>
                            <Row
                                          gutter={0}
                            >
                                          <TransferDescriptionItem
                                                        main={
                                                                      <SelectableText>
                                                                                    <NumericText
                                                                                                  maxDecimalPlaces={18}
                                                                                                  value="0.1"
                                                                                    />
                                                                                     
                                                                                    ETH
                                                                      </SelectableText>
                                                        }
                                                        subtitle={
                                                                      <NumericText
                                                                                    type="currency"
                                                                                    value="41.2"
                                                                      />
                                                        }
                                          />
                            </Row>
                            <Row
                                          gutter={0}
                            >
                                          <style__StyledCol
                                                        span={12}
                                          >
                                                        nahmii_available
                                                         ETH 
                                                        balance_after
                                          </style__StyledCol>
                            </Row>
                            <Row
                                          gutter={0}
                            >
                                          <TransferDescriptionItem
                                                        main={
                                                                      <SelectableText>
                                                                                    <NumericText
                                                                                                  maxDecimalPlaces={18}
                                                                                                  value="0.1"
                                                                                    />
                                                                                     
                                                                                    ETH
                                                                      </SelectableText>
                                                        }
                                                        subtitle={
                                                                      <NumericText
                                                                                    type="currency"
                                                                                    value="41.2"
                                                                      />
                                                        }
                                          />
                            </Row>
              </div>
              <Row
                            gutter={0}
              >
                            <style__HWPromptWrapper>
                                          <Connect(HWPromptContainer) />
                            </style__HWPromptWrapper>
                            <div
                                          style={
                                                        Object {
                                                                      "width": "fit-content",
                                                                    }
                                          }
                            >
                                          <style__StyledButton
                                                        disabled={true}
                                                        onClick={[Function]}
                                                        type="primary"
                                          >
                                                        <span>
                                                                      deposit
                                                        </span>
                                          </style__StyledButton>
                            </div>
              </Row>
              <SectionHeading
                            style={
                                          Object {
                                                        "marginTop": "2rem",
                                                        "maxWidth": "25rem",
                                                      }
                            }
              >
                            deposits_note
              </SectionHeading>
</div>,
          ],
          "style": Object {
            "display": "flex",
            "flex": "1",
            "flexWrap": "wrap",
            "marginTop": "0.5rem",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Form__FlexForm>
                <Form__FormItem
                                colon={false}
                                label={
                                                <Form__FormItemLabel>
                                                                select_asset_to_deposit
                                                </Form__FormItemLabel>
                                }
                >
                                <style__Image
                                                alt="logo"
                                                onError={[Function]}
                                                src="/public/images/assets/ETH.svg"
                                />
                                <Select
                                                defaultValue="ETH"
                                                onSelect={[Function]}
                                                style={
                                                                Object {
                                                                                "paddingLeft": "0.5rem",
                                                                              }
                                                }
                                >
                                                <Option
                                                                value="ETH"
                                                >
                                                                ETH
                                                </Option>
                                                <Option
                                                                value="BOKKY"
                                                >
                                                                BOKKY
                                                </Option>
                                </Select>
                </Form__FormItem>
                <Form__FormItem
                                colon={false}
                                help={
                                                <HelperTextComponent
                                                                left="$0.00"
                                                                right="usd"
                                                />
                                }
                                label={
                                                <Form__FormItemLabel>
                                                                enter_amount
                                                </Form__FormItemLabel>
                                }
                >
                                <Input
                                                defaultValue="0"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value="0"
                                />
                </Form__FormItem>
                <GasOptions
                                defaultGasLimit={600000}
                                defaultGasPrice={10}
                                defaultOption="average"
                                gasStatistics={undefined}
                                intl={
                                                Object {
                                                                "formatMessage": [Function],
                                                                "formatNumber": [Function],
                                                              }
                                }
                                onChange={[Function]}
                />
                <style__DollarPrice>
                                1 ETH = 
                                <style__StyledNumericText
                                                type="currency"
                                                value="412"
                                />
                </style__DollarPrice>
</Form__FlexForm>,
              "style": Object {
                "flex": "1",
                "marginBottom": "3rem",
                "marginRight": "2rem",
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Form__FormItem
                    colon={false}
                    label={
                                        <Form__FormItemLabel>
                                                            select_asset_to_deposit
                                        </Form__FormItemLabel>
                    }
>
                    <style__Image
                                        alt="logo"
                                        onError={[Function]}
                                        src="/public/images/assets/ETH.svg"
                    />
                    <Select
                                        defaultValue="ETH"
                                        onSelect={[Function]}
                                        style={
                                                            Object {
                                                                                "paddingLeft": "0.5rem",
                                                                              }
                                        }
                    >
                                        <Option
                                                            value="ETH"
                                        >
                                                            ETH
                                        </Option>
                                        <Option
                                                            value="BOKKY"
                                        >
                                                            BOKKY
                                        </Option>
                    </Select>
</Form__FormItem>,
                  <Form__FormItem
                    colon={false}
                    help={
                                        <HelperTextComponent
                                                            left="$0.00"
                                                            right="usd"
                                        />
                    }
                    label={
                                        <Form__FormItemLabel>
                                                            enter_amount
                                        </Form__FormItemLabel>
                    }
>
                    <Input
                                        defaultValue="0"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        value="0"
                    />
</Form__FormItem>,
                  <GasOptions
                    defaultGasLimit={600000}
                    defaultGasPrice={10}
                    defaultOption="average"
                    gasStatistics={undefined}
                    intl={
                                        Object {
                                                            "formatMessage": [Function],
                                                            "formatNumber": [Function],
                                                          }
                    }
                    onChange={[Function]}
/>,
                  <style__DollarPrice>
                    1 ETH = 
                    <style__StyledNumericText
                                        type="currency"
                                        value="412"
                    />
</style__DollarPrice>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <style__Image
                        alt="logo"
                        onError={[Function]}
                        src="/public/images/assets/ETH.svg"
/>,
                      <Select
                        defaultValue="ETH"
                        onSelect={[Function]}
                        style={
                                                Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                        }
>
                        <Option
                                                value="ETH"
                        >
                                                ETH
                        </Option>
                        <Option
                                                value="BOKKY"
                        >
                                                BOKKY
                        </Option>
</Select>,
                    ],
                    "colon": false,
                    "label": <Form__FormItemLabel>
                      select_asset_to_deposit
</Form__FormItemLabel>,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "alt": "logo",
                        "onError": [Function],
                        "src": "/public/images/assets/ETH.svg",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <Option
                            value="ETH"
>
                            ETH
</Option>,
                          <Option
                            value="BOKKY"
>
                            BOKKY
</Option>,
                        ],
                        "defaultValue": "ETH",
                        "onSelect": [Function],
                        "style": Object {
                          "paddingLeft": "0.5rem",
                        },
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": "ETH",
                          "nodeType": "class",
                          "props": Object {
                            "children": "ETH",
                            "value": "ETH",
                          },
                          "ref": null,
                          "rendered": "ETH",
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": "BOKKY",
                          "nodeType": "class",
                          "props": Object {
                            "children": "BOKKY",
                            "value": "BOKKY",
                          },
                          "ref": null,
                          "rendered": "BOKKY",
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Input
                      defaultValue="0"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      value="0"
/>,
                    "colon": false,
                    "help": <HelperTextComponent
                      left="$0.00"
                      right="usd"
/>,
                    "label": <Form__FormItemLabel>
                      enter_amount
</Form__FormItemLabel>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "defaultValue": "0",
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "value": "0",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "defaultGasLimit": 600000,
                    "defaultGasPrice": 10,
                    "defaultOption": "average",
                    "gasStatistics": undefined,
                    "intl": Object {
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                    },
                    "onChange": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "1 ETH = ",
                      <style__StyledNumericText
                        type="currency"
                        value="412"
/>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    "1 ETH = ",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "type": "currency",
                        "value": "412",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    deposit
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main={
                                                      <SelectableText>
                                                                        <NumericText
                                                                                          maxDecimalPlaces={18}
                                                                                          value="0"
                                                                        />
                                                                         
                                                                        ETH
                                                      </SelectableText>
                                    }
                                    subtitle={
                                                      <NumericText
                                                                        type="currency"
                                                                        value="0"
                                                      />
                                    }
                  />
</Row>,
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    <TooltipText
                                                      details="max_base_layer_fee_explain"
                                    >
                                                      max_base_layer_fee
                                    </TooltipText>
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main={
                                                      <SelectableText>
                                                                        <NumericText
                                                                                          maxDecimalPlaces={18}
                                                                                          value="0.006"
                                                                        />
                                                                         
                                                                        ETH
                                                      </SelectableText>
                                    }
                                    subtitle={
                                                      <NumericText
                                                                        type="currency"
                                                                        value="2.472"
                                                      />
                                    }
                  />
</Row>,
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    base_layer
                                     ETH 
                                    balance_before
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main={
                                                      <SelectableText>
                                                                        <NumericText
                                                                                          maxDecimalPlaces={18}
                                                                                          value="0.198937"
                                                                        />
                                                                         
                                                                        ETH
                                                      </SelectableText>
                                    }
                                    subtitle={
                                                      <NumericText
                                                                        type="currency"
                                                                        value="81.962044"
                                                      />
                                    }
                  />
</Row>,
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    base_layer
                                     ETH 
                                    balance_after
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main={
                                                      <SelectableText>
                                                                        <NumericText
                                                                                          maxDecimalPlaces={18}
                                                                                          value="0.192937"
                                                                        />
                                                                         
                                                                        ETH
                                                      </SelectableText>
                                    }
                                    subtitle={
                                                      <NumericText
                                                                        type="currency"
                                                                        value="79.490044"
                                                      />
                                    }
                  />
</Row>,
                <div>
                  <Row
                                    gutter={0}
                  >
                                    <style__StyledCol
                                                      span={12}
                                    >
                                                      nahmii_available
                                                       ETH 
                                                      balance_before
                                    </style__StyledCol>
                  </Row>
                  <Row
                                    gutter={0}
                  >
                                    <TransferDescriptionItem
                                                      main={
                                                                        <SelectableText>
                                                                                          <NumericText
                                                                                                            maxDecimalPlaces={18}
                                                                                                            value="0.1"
                                                                                          />
                                                                                           
                                                                                          ETH
                                                                        </SelectableText>
                                                      }
                                                      subtitle={
                                                                        <NumericText
                                                                                          type="currency"
                                                                                          value="41.2"
                                                                        />
                                                      }
                                    />
                  </Row>
                  <Row
                                    gutter={0}
                  >
                                    <style__StyledCol
                                                      span={12}
                                    >
                                                      nahmii_available
                                                       ETH 
                                                      balance_after
                                    </style__StyledCol>
                  </Row>
                  <Row
                                    gutter={0}
                  >
                                    <TransferDescriptionItem
                                                      main={
                                                                        <SelectableText>
                                                                                          <NumericText
                                                                                                            maxDecimalPlaces={18}
                                                                                                            value="0.1"
                                                                                          />
                                                                                           
                                                                                          ETH
                                                                        </SelectableText>
                                                      }
                                                      subtitle={
                                                                        <NumericText
                                                                                          type="currency"
                                                                                          value="41.2"
                                                                        />
                                                      }
                                    />
                  </Row>
</div>,
                false,
                <Row
                  gutter={0}
>
                  <style__HWPromptWrapper>
                                    <Connect(HWPromptContainer) />
                  </style__HWPromptWrapper>
                  <div
                                    style={
                                                      Object {
                                                                        "width": "fit-content",
                                                                      }
                                    }
                  >
                                    <style__StyledButton
                                                      disabled={true}
                                                      onClick={[Function]}
                                                      type="primary"
                                    >
                                                      <span>
                                                                        deposit
                                                      </span>
                                    </style__StyledButton>
                  </div>
</Row>,
                <SectionHeading
                  style={
                                    Object {
                                                      "marginTop": "2rem",
                                                      "maxWidth": "25rem",
                                                    }
                  }
>
                  deposits_note
</SectionHeading>,
              ],
              "style": Object {
                "minWidth": "34rem",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    deposit
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "deposit",
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": "deposit",
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main={
                                        <SelectableText>
                                                            <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0"
                                                            />
                                                             
                                                            ETH
                                        </SelectableText>
                    }
                    subtitle={
                                        <NumericText
                                                            type="currency"
                                                            value="0"
                                        />
                    }
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": <SelectableText>
                      <NumericText
                                            maxDecimalPlaces={18}
                                            value="0"
                      />
                       
                      ETH
</SelectableText>,
                    "subtitle": <NumericText
                      type="currency"
                      value="0"
/>,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    <TooltipText
                                        details="max_base_layer_fee_explain"
                    >
                                        max_base_layer_fee
                    </TooltipText>
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TooltipText
                      details="max_base_layer_fee_explain"
>
                      max_base_layer_fee
</TooltipText>,
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "max_base_layer_fee",
                      "details": "max_base_layer_fee_explain",
                    },
                    "ref": null,
                    "rendered": "max_base_layer_fee",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main={
                                        <SelectableText>
                                                            <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.006"
                                                            />
                                                             
                                                            ETH
                                        </SelectableText>
                    }
                    subtitle={
                                        <NumericText
                                                            type="currency"
                                                            value="2.472"
                                        />
                    }
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": <SelectableText>
                      <NumericText
                                            maxDecimalPlaces={18}
                                            value="0.006"
                      />
                       
                      ETH
</SelectableText>,
                    "subtitle": <NumericText
                      type="currency"
                      value="2.472"
/>,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    base_layer
                     ETH 
                    balance_before
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "base_layer",
                      " ETH ",
                      "balance_before",
                    ],
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Array [
                    "base_layer",
                    " ETH ",
                    "balance_before",
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main={
                                        <SelectableText>
                                                            <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.198937"
                                                            />
                                                             
                                                            ETH
                                        </SelectableText>
                    }
                    subtitle={
                                        <NumericText
                                                            type="currency"
                                                            value="81.962044"
                                        />
                    }
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": <SelectableText>
                      <NumericText
                                            maxDecimalPlaces={18}
                                            value="0.198937"
                      />
                       
                      ETH
</SelectableText>,
                    "subtitle": <NumericText
                      type="currency"
                      value="81.962044"
/>,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    base_layer
                     ETH 
                    balance_after
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "base_layer",
                      " ETH ",
                      "balance_after",
                    ],
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Array [
                    "base_layer",
                    " ETH ",
                    "balance_after",
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main={
                                        <SelectableText>
                                                            <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.192937"
                                                            />
                                                             
                                                            ETH
                                        </SelectableText>
                    }
                    subtitle={
                                        <NumericText
                                                            type="currency"
                                                            value="79.490044"
                                        />
                    }
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": <SelectableText>
                      <NumericText
                                            maxDecimalPlaces={18}
                                            value="0.192937"
                      />
                       
                      ETH
</SelectableText>,
                    "subtitle": <NumericText
                      type="currency"
                      value="79.490044"
/>,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Row
                      gutter={0}
>
                      <style__StyledCol
                                            span={12}
                      >
                                            nahmii_available
                                             ETH 
                                            balance_before
                      </style__StyledCol>
</Row>,
                    <Row
                      gutter={0}
>
                      <TransferDescriptionItem
                                            main={
                                                                  <SelectableText>
                                                                                        <NumericText
                                                                                                              maxDecimalPlaces={18}
                                                                                                              value="0.1"
                                                                                        />
                                                                                         
                                                                                        ETH
                                                                  </SelectableText>
                                            }
                                            subtitle={
                                                                  <NumericText
                                                                                        type="currency"
                                                                                        value="41.2"
                                                                  />
                                            }
                      />
</Row>,
                    <Row
                      gutter={0}
>
                      <style__StyledCol
                                            span={12}
                      >
                                            nahmii_available
                                             ETH 
                                            balance_after
                      </style__StyledCol>
</Row>,
                    <Row
                      gutter={0}
>
                      <TransferDescriptionItem
                                            main={
                                                                  <SelectableText>
                                                                                        <NumericText
                                                                                                              maxDecimalPlaces={18}
                                                                                                              value="0.1"
                                                                                        />
                                                                                         
                                                                                        ETH
                                                                  </SelectableText>
                                            }
                                            subtitle={
                                                                  <NumericText
                                                                                        type="currency"
                                                                                        value="41.2"
                                                                  />
                                            }
                      />
</Row>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <style__StyledCol
                        span={12}
>
                        nahmii_available
                         ETH 
                        balance_before
</style__StyledCol>,
                      "gutter": 0,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          "nahmii_available",
                          " ETH ",
                          "balance_before",
                        ],
                        "span": 12,
                      },
                      "ref": null,
                      "rendered": Array [
                        "nahmii_available",
                        " ETH ",
                        "balance_before",
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <TransferDescriptionItem
                        main={
                                                <SelectableText>
                                                                        <NumericText
                                                                                                maxDecimalPlaces={18}
                                                                                                value="0.1"
                                                                        />
                                                                         
                                                                        ETH
                                                </SelectableText>
                        }
                        subtitle={
                                                <NumericText
                                                                        type="currency"
                                                                        value="41.2"
                                                />
                        }
/>,
                      "gutter": 0,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "main": <SelectableText>
                          <NumericText
                                                    maxDecimalPlaces={18}
                                                    value="0.1"
                          />
                           
                          ETH
</SelectableText>,
                        "subtitle": <NumericText
                          type="currency"
                          value="41.2"
/>,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <style__StyledCol
                        span={12}
>
                        nahmii_available
                         ETH 
                        balance_after
</style__StyledCol>,
                      "gutter": 0,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          "nahmii_available",
                          " ETH ",
                          "balance_after",
                        ],
                        "span": 12,
                      },
                      "ref": null,
                      "rendered": Array [
                        "nahmii_available",
                        " ETH ",
                        "balance_after",
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <TransferDescriptionItem
                        main={
                                                <SelectableText>
                                                                        <NumericText
                                                                                                maxDecimalPlaces={18}
                                                                                                value="0.1"
                                                                        />
                                                                         
                                                                        ETH
                                                </SelectableText>
                        }
                        subtitle={
                                                <NumericText
                                                                        type="currency"
                                                                        value="41.2"
                                                />
                        }
/>,
                      "gutter": 0,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "main": <SelectableText>
                          <NumericText
                                                    maxDecimalPlaces={18}
                                                    value="0.1"
                          />
                           
                          ETH
</SelectableText>,
                        "subtitle": <NumericText
                          type="currency"
                          value="41.2"
/>,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              false,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <style__HWPromptWrapper>
                      <Connect(HWPromptContainer) />
</style__HWPromptWrapper>,
                    <div
                      style={
                                            Object {
                                                                  "width": "fit-content",
                                                                }
                      }
>
                      <style__StyledButton
                                            disabled={true}
                                            onClick={[Function]}
                                            type="primary"
                      >
                                            <span>
                                                                  deposit
                                            </span>
                      </style__StyledButton>
</div>,
                  ],
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Connect(HWPromptContainer) />,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <style__StyledButton
                        disabled={true}
                        onClick={[Function]}
                        type="primary"
>
                        <span>
                                                deposit
                        </span>
</style__StyledButton>,
                      "style": Object {
                        "width": "fit-content",
                      },
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <span>
                          deposit
</span>,
                        "disabled": true,
                        "onClick": [Function],
                        "type": "primary",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "deposit",
                        },
                        "ref": null,
                        "rendered": "deposit",
                        "type": "span",
                      },
                      "type": [Function],
                    },
                    "type": "div",
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "deposits_note",
                  "style": Object {
                    "marginTop": "2rem",
                    "maxWidth": "25rem",
                  },
                },
                "ref": null,
                "rendered": "deposits_note",
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<NahmiiDeposit /> should render correctly when everything is loaded 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NahmiiDeposit
    currentNetwork={
        Object {
            "apiDomain": "api2.dev.hubii.net",
            "defaultNahmiiProvider": NahmiiProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "connection": Object {
                "url": "http://geth-ropsten.dev.hubii.net",
              },
              "ready": Promise {},
            },
            "identityServiceAppId": "appid",
            "identityServiceSecret": "secret",
            "nahmiiProvider": NahmiiProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "connection": Object {
                "url": "http://geth-ropsten.dev.hubii.net",
              },
              "ready": Promise {},
            },
            "name": "ropsten",
            "provider": FallbackProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "_providers": Array [
                InfuraProvider {
                  "_balances": Object {},
                  "_emitted": Object {
                    "block": -2,
                  },
                  "_events": Array [],
                  "_fastQueryDate": 0,
                  "_lastBlockNumber": -2,
                  "_network": Object {
                    "_defaultProvider": [Function],
                    "chainId": 3,
                    "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                    "name": "ropsten",
                  },
                  "_pollingInterval": 4000,
                  "apiAccessToken": null,
                  "connection": Object {
                    "url": "https://ropsten.infura.io/",
                  },
                  "ready": Promise {},
                },
                EtherscanProvider {
                  "_balances": Object {},
                  "_emitted": Object {
                    "block": -2,
                  },
                  "_events": Array [],
                  "_fastQueryDate": 0,
                  "_lastBlockNumber": -2,
                  "_network": Object {
                    "_defaultProvider": [Function],
                    "chainId": 3,
                    "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                    "name": "ropsten",
                  },
                  "_pollingInterval": 4000,
                  "apiKey": undefined,
                  "baseUrl": "https://api-ropsten.etherscan.io",
                  "ready": Promise {},
                },
              ],
              "ready": Promise {},
            },
            "walletApiEndpoint": [Function],
          }
    }
    currentWalletWithInfo={
        Immutable.Map {
            deviceId: "041ca8e96420e95a106e8c9bb3c9fb9e8c00d4b11cac562888c898000b5cec366c03a0f84574716fac6c7a7df47a925f0e30f5286546adf3179b5a08dc9d8e09da",
            address: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
            type: "lns",
            name: "lns",
            derivationPath: "m/44'/60'/0'/0",
            transactions: Immutable.Map {
                loading: false,
                error: null,
                transactions: Immutable.List [
                    Immutable.Map {
                        transfers: Immutable.Map {
                            single: "2111000000",
                            total: "3111000000",
                        },
                        created: "2018-12-17T01:59:03.718Z",
                        decimalAmount: "0.000000002111",
                        counterpartyAddress: "0x4231676a35483638796e2af8ed2af0a41b097524",
                        nonce: 21,
                        currency: "0x0000000000000000000000000000000000000000",
                        layer: "nahmii",
                        sender: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                    Immutable.Map {
                                        originId: "0",
                                        figure: Immutable.Map {
                                            currency: Immutable.Map {
                                                ct: "0x0000000000000000000000000000000000000000",
                                                id: "0",
                                            },
                                            amount: "4121100",
                                        },
                                    },
                                ],
                                single: Immutable.Map {
                                    currency: Immutable.Map {
                                        ct: "0x0000000000000000000000000000000000000000",
                                        id: "0",
                                    },
                                    amount: "2111000",
                                },
                            },
                            wallet: "0x4231676a35483638796e2af8ed2af0a41b097524",
                            nonce: 7,
                            balances: Immutable.Map {
                                current: "999995875778900",
                                previous: "999997988889900",
                            },
                        },
                        timestamp: "2018-12-17T01:59:03.776Z",
                        seals: Immutable.Map {
                            wallet: Immutable.Map {
                                hash: "0x57d9cf4ffc4b2aecce23d2e56083c7b437f5e105be74c1cd17d8522999b5d0be",
                                signature: Immutable.Map {
                                    s: "0x395b632dab03b34321c1aed7dcbac4a1b87582904d2898645b3ec90505c44348",
                                    r: "0x01cda7bddbc7c2194dd395aac73eaf1ca6760bfef83689c5a1240f936f0200d4",
                                    v: 28,
                                },
                            },
                            operator: Immutable.Map {
                                hash: "0x99c1a3a1cd8b15cdb969270f6e8f7fdce5b9c8377a00c38d800b9982c98eec5a",
                                signature: Immutable.Map {
                                    s: "0x129c9e071467ee98ddd799fa1ed7b3cbda11486955b9360afd22ce0ff4d91aab",
                                    r: "0x4d22165ff7382f998107a87e800a11581e7b99fa67ab613656706105157e5ab9",
                                    v: 28,
                                },
                            },
                        },
                        blockNumber: 4643058,
                        amount: "2111000000",
                        symbol: "ETH",
                        recipient: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                ],
                            },
                            wallet: "0x1c7429f62595097315289cebac1fdbda587ad512",
                            nonce: 4,
                            balances: Immutable.Map {
                                current: "10013111000000",
                                previous: "10011000000000",
                            },
                        },
                        type: "received",
                        updated: "2018-12-17T01:59:03.776Z",
                        id: "5c1702e78d9ea3000ea459d9",
                        operatorId: "0",
                        confirmed: true,
                    },
                    Immutable.Map {
                        decimalAmount: "0.0000000001",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780091,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x0000000000000000000000000000000000000000",
                        layer: "baseLayer",
                        sender: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        timestamp: "2018-08-06T02:32:00.000Z",
                        amount: "100000000",
                        symbol: "ETH",
                        recipient: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        type: "received",
                    },
                    Immutable.Map {
                        transfers: Immutable.Map {
                            single: "10000000000000000",
                            total: "10000000000000000",
                        },
                        created: "2018-11-16T22:40:54.951Z",
                        decimalAmount: "0.01",
                        counterpartyAddress: "0xc5768cdeda275fe5536147a3fbc8cfb6b0d8ac48",
                        nonce: 18,
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        layer: "nahmii",
                        sender: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                    Immutable.Map {
                                        originId: "0",
                                        figure: Immutable.Map {
                                            currency: Immutable.Map {
                                                ct: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                                                id: "0",
                                            },
                                            amount: "10000000000000",
                                        },
                                    },
                                ],
                                single: Immutable.Map {
                                    currency: Immutable.Map {
                                        ct: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                                        id: "0",
                                    },
                                    amount: "10000000000000",
                                },
                            },
                            wallet: "0x1c7429f62595097315289cebac1fdbda587ad512",
                            nonce: 3,
                            balances: Immutable.Map {
                                current: "89990000000000000",
                                previous: "100000000000000000",
                            },
                        },
                        timestamp: "2018-11-16T22:40:55.049Z",
                        seals: Immutable.Map {
                            wallet: Immutable.Map {
                                hash: "0x0b7d6d30e9665016246e6370e82579a35bc4d9c0cf88c65b38d538f7ad8ee828",
                                signature: Immutable.Map {
                                    s: "0x7d60c93b9037be6d880bbe86f258d0e371ad4015fc2528cf1312d924f9e76245",
                                    r: "0x9c11c2a5244a741f67837eb6efc1f12396c19d2490ff2bd872dbd9643a7c1013",
                                    v: 27,
                                },
                            },
                            operator: Immutable.Map {
                                hash: "0x92b0e8b3c705449eea1bce2e517468cec521e6451d4a7e6c4fe4c4efe7df6ab4",
                                signature: Immutable.Map {
                                    s: "0x09ad154d886899b36f15a2be68ddb61c15afe185acd498a9b6bb2577f317a942",
                                    r: "0x80d8f5e899f16c9a4abcc72d23399d4ddd3c08a29dae8233a46179ef54cc189c",
                                    v: 27,
                                },
                            },
                        },
                        blockNumber: 3780090,
                        amount: "10000000000000000",
                        symbol: "BOKKY",
                        recipient: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                ],
                            },
                            wallet: "0xc5768cdeda275fe5536147a3fbc8cfb6b0d8ac48",
                            nonce: 2,
                            balances: Immutable.Map {
                                current: "10000000000000000",
                                previous: "0",
                            },
                        },
                        type: "sent",
                        updated: "2018-11-16T22:40:55.049Z",
                        id: "5c16d4768d9ea3000ea45690",
                        operatorId: "0",
                        confirmed: true,
                    },
                    Immutable.Map {
                        decimalAmount: "0.000000000000000005",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780089,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        layer: "baseLayer",
                        sender: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        timestamp: "2018-08-06T02:32:00.000Z",
                        amount: "5",
                        symbol: "BOKKY",
                        recipient: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        type: "sent",
                    },
                ],
            },
            balances: Immutable.Map {
                baseLayer: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.198937",
                            currency: "0x0000000000000000000000000000000000000000",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.198937",
                                btc: "0.00198937",
                                usd: "81.962044",
                            },
                        },
                        Immutable.Map {
                            balance: "1.231288e-12",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "1.231288e-13",
                                btc: "1.231288e-15",
                                usd: "1.231288e-12",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1989370000001231288",
                        btc: "0.001989370000001231288",
                        usd: "81.962044000001231288",
                    },
                },
                nahmiiAvailable: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.113",
                        btc: "0.00113",
                        usd: "41.33",
                    },
                },
                nahmiiStaging: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1",
                        btc: "0.001",
                        usd: "41.2",
                    },
                },
                nahmiiStaged: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                    ],
                    total: Immutable.Map {
                        eth: "0",
                        btc: "0",
                        usd: "0",
                    },
                },
                nahmiiCombined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.2",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.2",
                                btc: "0.002",
                                usd: "82.4",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.213",
                        btc: "0.00213",
                        usd: "82.53",
                    },
                },
                combined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.398937",
                            currency: "0x0000000000000000000000000000000000000000",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.398937",
                                btc: "0.00398937",
                                usd: "164.362044",
                            },
                        },
                        Immutable.Map {
                            balance: "0.130000000001231288",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.0130000000001231288",
                                btc: "0.000130000000001231288",
                                usd: "0.130000000001231288",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.4119370000001231288",
                        btc: "0.004119370000001231288",
                        usd: "164.492044000001231288",
                    },
                },
            },
        }
    }
    depositStatus={
        Immutable.Map {
            depositingEth: false,
            approvingTokenDeposit: false,
            completingTokenDeposit: false,
            error: null,
        }
    }
    gasStatistics={
        Immutable.Map {
        }
    }
    goWalletDetails={[Function]}
    intl={
        Object {
            "formatMessage": [Function],
            "formatNumber": [Function],
          }
    }
    ledgerNanoSInfo={
        Immutable.Map {
            status: "disconnected",
            addresses: Immutable.Map {
            },
            id: null,
            confTxOnDevice: false,
        }
    }
    nahmiiDeposit={[Function]}
    prices={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    eth: 0.1,
                    btc: 0.001,
                    usd: 1,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x0000000000000000000000000000000000000000",
                    eth: 1,
                    btc: 0.01,
                    usd: 412,
                },
            ],
        }
    }
    supportedAssets={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    symbol: "My20",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    symbol: "HBT",
                    decimals: 15,
                    color: "0063A5",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    symbol: "SBT",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    symbol: "WETH",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    symbol: "BOKKY",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x0000000000000000000000000000000000000000",
                    symbol: "ETH",
                    decimals: 18,
                    color: "5C78E4",
                },
            ],
        }
    }
    trezorInfo={
        Immutable.Map {
            status: "disconnected",
            connected: false,
            addresses: Immutable.Map {
            },
            id: "ajlsdfkjas",
            confTxOnDevice: false,
        }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <div
        style={
                Object {
                        "display": "flex",
                        "flex": "1",
                        "flexWrap": "wrap",
                        "marginTop": "0.5rem",
                      }
        }
>
        <div
                style={
                        Object {
                                "flex": "1",
                                "marginBottom": "3rem",
                                "marginRight": "2rem",
                              }
                }
        >
                <Form__FlexForm>
                        <Form__FormItem
                                colon={false}
                                label={
                                        <Form__FormItemLabel>
                                                select_asset_to_deposit
                                        </Form__FormItemLabel>
                                }
                        >
                                <style__Image
                                        alt="logo"
                                        onError={[Function]}
                                        src="/public/images/assets/ETH.svg"
                                />
                                <Select
                                        defaultValue="ETH"
                                        onSelect={[Function]}
                                        style={
                                                Object {
                                                        "paddingLeft": "0.5rem",
                                                      }
                                        }
                                >
                                        <Option
                                                value="ETH"
                                        >
                                                ETH
                                        </Option>
                                        <Option
                                                value="BOKKY"
                                        >
                                                BOKKY
                                        </Option>
                                </Select>
                        </Form__FormItem>
                        <Form__FormItem
                                colon={false}
                                help={
                                        <HelperTextComponent
                                                left="$0.00"
                                                right="usd"
                                        />
                                }
                                label={
                                        <Form__FormItemLabel>
                                                enter_amount
                                        </Form__FormItemLabel>
                                }
                        >
                                <Input
                                        defaultValue="0"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        value="0"
                                />
                        </Form__FormItem>
                        <GasOptions
                                defaultGasLimit={600000}
                                defaultGasPrice={10}
                                defaultOption="average"
                                gasStatistics={undefined}
                                intl={
                                        Object {
                                                "formatMessage": [Function],
                                                "formatNumber": [Function],
                                              }
                                }
                                onChange={[Function]}
                        />
                        <style__DollarPrice>
                                1 ETH = 
                                <style__StyledNumericText
                                        type="currency"
                                        value="412"
                                />
                        </style__DollarPrice>
                </Form__FlexForm>
        </div>
        <div
                style={
                        Object {
                                "minWidth": "34rem",
                              }
                }
        >
                <Row
                        gutter={0}
                >
                        <style__StyledCol
                                span={12}
                        >
                                deposit
                        </style__StyledCol>
                </Row>
                <Row
                        gutter={0}
                >
                        <TransferDescriptionItem
                                main={
                                        <SelectableText>
                                                <NumericText
                                                        maxDecimalPlaces={18}
                                                        value="0"
                                                />
                                                 
                                                ETH
                                        </SelectableText>
                                }
                                subtitle={
                                        <NumericText
                                                type="currency"
                                                value="0"
                                        />
                                }
                        />
                </Row>
                <Row
                        gutter={0}
                >
                        <style__StyledCol
                                span={12}
                        >
                                <TooltipText
                                        details="max_base_layer_fee_explain"
                                >
                                        max_base_layer_fee
                                </TooltipText>
                        </style__StyledCol>
                </Row>
                <Row
                        gutter={0}
                >
                        <TransferDescriptionItem
                                main={
                                        <SelectableText>
                                                <NumericText
                                                        maxDecimalPlaces={18}
                                                        value="0.006"
                                                />
                                                 
                                                ETH
                                        </SelectableText>
                                }
                                subtitle={
                                        <NumericText
                                                type="currency"
                                                value="2.472"
                                        />
                                }
                        />
                </Row>
                <Row
                        gutter={0}
                >
                        <style__StyledCol
                                span={12}
                        >
                                base_layer
                                 ETH 
                                balance_before
                        </style__StyledCol>
                </Row>
                <Row
                        gutter={0}
                >
                        <TransferDescriptionItem
                                main={
                                        <SelectableText>
                                                <NumericText
                                                        maxDecimalPlaces={18}
                                                        value="0.198937"
                                                />
                                                 
                                                ETH
                                        </SelectableText>
                                }
                                subtitle={
                                        <NumericText
                                                type="currency"
                                                value="81.962044"
                                        />
                                }
                        />
                </Row>
                <Row
                        gutter={0}
                >
                        <style__StyledCol
                                span={12}
                        >
                                base_layer
                                 ETH 
                                balance_after
                        </style__StyledCol>
                </Row>
                <Row
                        gutter={0}
                >
                        <TransferDescriptionItem
                                main={
                                        <SelectableText>
                                                <NumericText
                                                        maxDecimalPlaces={18}
                                                        value="0.192937"
                                                />
                                                 
                                                ETH
                                        </SelectableText>
                                }
                                subtitle={
                                        <NumericText
                                                type="currency"
                                                value="79.490044"
                                        />
                                }
                        />
                </Row>
                <div>
                        <Row
                                gutter={0}
                        >
                                <style__StyledCol
                                        span={12}
                                >
                                        nahmii_available
                                         ETH 
                                        balance_before
                                </style__StyledCol>
                        </Row>
                        <Row
                                gutter={0}
                        >
                                <TransferDescriptionItem
                                        main={
                                                <SelectableText>
                                                        <NumericText
                                                                maxDecimalPlaces={18}
                                                                value="0.1"
                                                        />
                                                         
                                                        ETH
                                                </SelectableText>
                                        }
                                        subtitle={
                                                <NumericText
                                                        type="currency"
                                                        value="41.2"
                                                />
                                        }
                                />
                        </Row>
                        <Row
                                gutter={0}
                        >
                                <style__StyledCol
                                        span={12}
                                >
                                        nahmii_available
                                         ETH 
                                        balance_after
                                </style__StyledCol>
                        </Row>
                        <Row
                                gutter={0}
                        >
                                <TransferDescriptionItem
                                        main={
                                                <SelectableText>
                                                        <NumericText
                                                                maxDecimalPlaces={18}
                                                                value="0.1"
                                                        />
                                                         
                                                        ETH
                                                </SelectableText>
                                        }
                                        subtitle={
                                                <NumericText
                                                        type="currency"
                                                        value="41.2"
                                                />
                                        }
                                />
                        </Row>
                </div>
                <Row
                        gutter={0}
                >
                        <style__HWPromptWrapper>
                                <Connect(HWPromptContainer) />
                        </style__HWPromptWrapper>
                        <div
                                style={
                                        Object {
                                                "width": "fit-content",
                                              }
                                }
                        >
                                <style__StyledButton
                                        disabled={true}
                                        onClick={[Function]}
                                        type="primary"
                                >
                                        <span>
                                                deposit
                                        </span>
                                </style__StyledButton>
                        </div>
                </Row>
                <SectionHeading
                        style={
                                Object {
                                        "marginTop": "2rem",
                                        "maxWidth": "25rem",
                                      }
                        }
                >
                        deposits_note
                </SectionHeading>
        </div>
</div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            style={
                        Object {
                                    "flex": "1",
                                    "marginBottom": "3rem",
                                    "marginRight": "2rem",
                                  }
            }
>
            <Form__FlexForm>
                        <Form__FormItem
                                    colon={false}
                                    label={
                                                <Form__FormItemLabel>
                                                            select_asset_to_deposit
                                                </Form__FormItemLabel>
                                    }
                        >
                                    <style__Image
                                                alt="logo"
                                                onError={[Function]}
                                                src="/public/images/assets/ETH.svg"
                                    />
                                    <Select
                                                defaultValue="ETH"
                                                onSelect={[Function]}
                                                style={
                                                            Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                                                }
                                    >
                                                <Option
                                                            value="ETH"
                                                >
                                                            ETH
                                                </Option>
                                                <Option
                                                            value="BOKKY"
                                                >
                                                            BOKKY
                                                </Option>
                                    </Select>
                        </Form__FormItem>
                        <Form__FormItem
                                    colon={false}
                                    help={
                                                <HelperTextComponent
                                                            left="$0.00"
                                                            right="usd"
                                                />
                                    }
                                    label={
                                                <Form__FormItemLabel>
                                                            enter_amount
                                                </Form__FormItemLabel>
                                    }
                        >
                                    <Input
                                                defaultValue="0"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value="0"
                                    />
                        </Form__FormItem>
                        <GasOptions
                                    defaultGasLimit={600000}
                                    defaultGasPrice={10}
                                    defaultOption="average"
                                    gasStatistics={undefined}
                                    intl={
                                                Object {
                                                            "formatMessage": [Function],
                                                            "formatNumber": [Function],
                                                          }
                                    }
                                    onChange={[Function]}
                        />
                        <style__DollarPrice>
                                    1 ETH = 
                                    <style__StyledNumericText
                                                type="currency"
                                                value="412"
                                    />
                        </style__DollarPrice>
            </Form__FlexForm>
</div>,
          <div
            style={
                        Object {
                                    "minWidth": "34rem",
                                  }
            }
>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    deposit
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main={
                                                <SelectableText>
                                                            <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0"
                                                            />
                                                             
                                                            ETH
                                                </SelectableText>
                                    }
                                    subtitle={
                                                <NumericText
                                                            type="currency"
                                                            value="0"
                                                />
                                    }
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    <TooltipText
                                                details="max_base_layer_fee_explain"
                                    >
                                                max_base_layer_fee
                                    </TooltipText>
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main={
                                                <SelectableText>
                                                            <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.006"
                                                            />
                                                             
                                                            ETH
                                                </SelectableText>
                                    }
                                    subtitle={
                                                <NumericText
                                                            type="currency"
                                                            value="2.472"
                                                />
                                    }
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    base_layer
                                     ETH 
                                    balance_before
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main={
                                                <SelectableText>
                                                            <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.198937"
                                                            />
                                                             
                                                            ETH
                                                </SelectableText>
                                    }
                                    subtitle={
                                                <NumericText
                                                            type="currency"
                                                            value="81.962044"
                                                />
                                    }
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    base_layer
                                     ETH 
                                    balance_after
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main={
                                                <SelectableText>
                                                            <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.192937"
                                                            />
                                                             
                                                            ETH
                                                </SelectableText>
                                    }
                                    subtitle={
                                                <NumericText
                                                            type="currency"
                                                            value="79.490044"
                                                />
                                    }
                        />
            </Row>
            <div>
                        <Row
                                    gutter={0}
                        >
                                    <style__StyledCol
                                                span={12}
                                    >
                                                nahmii_available
                                                 ETH 
                                                balance_before
                                    </style__StyledCol>
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <TransferDescriptionItem
                                                main={
                                                            <SelectableText>
                                                                        <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.1"
                                                                        />
                                                                         
                                                                        ETH
                                                            </SelectableText>
                                                }
                                                subtitle={
                                                            <NumericText
                                                                        type="currency"
                                                                        value="41.2"
                                                            />
                                                }
                                    />
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <style__StyledCol
                                                span={12}
                                    >
                                                nahmii_available
                                                 ETH 
                                                balance_after
                                    </style__StyledCol>
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <TransferDescriptionItem
                                                main={
                                                            <SelectableText>
                                                                        <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.1"
                                                                        />
                                                                         
                                                                        ETH
                                                            </SelectableText>
                                                }
                                                subtitle={
                                                            <NumericText
                                                                        type="currency"
                                                                        value="41.2"
                                                            />
                                                }
                                    />
                        </Row>
            </div>
            <Row
                        gutter={0}
            >
                        <style__HWPromptWrapper>
                                    <Connect(HWPromptContainer) />
                        </style__HWPromptWrapper>
                        <div
                                    style={
                                                Object {
                                                            "width": "fit-content",
                                                          }
                                    }
                        >
                                    <style__StyledButton
                                                disabled={true}
                                                onClick={[Function]}
                                                type="primary"
                                    >
                                                <span>
                                                            deposit
                                                </span>
                                    </style__StyledButton>
                        </div>
            </Row>
            <SectionHeading
                        style={
                                    Object {
                                                "marginTop": "2rem",
                                                "maxWidth": "25rem",
                                              }
                        }
            >
                        deposits_note
            </SectionHeading>
</div>,
        ],
        "style": Object {
          "display": "flex",
          "flex": "1",
          "flexWrap": "wrap",
          "marginTop": "0.5rem",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Form__FlexForm>
              <Form__FormItem
                            colon={false}
                            label={
                                          <Form__FormItemLabel>
                                                        select_asset_to_deposit
                                          </Form__FormItemLabel>
                            }
              >
                            <style__Image
                                          alt="logo"
                                          onError={[Function]}
                                          src="/public/images/assets/ETH.svg"
                            />
                            <Select
                                          defaultValue="ETH"
                                          onSelect={[Function]}
                                          style={
                                                        Object {
                                                                      "paddingLeft": "0.5rem",
                                                                    }
                                          }
                            >
                                          <Option
                                                        value="ETH"
                                          >
                                                        ETH
                                          </Option>
                                          <Option
                                                        value="BOKKY"
                                          >
                                                        BOKKY
                                          </Option>
                            </Select>
              </Form__FormItem>
              <Form__FormItem
                            colon={false}
                            help={
                                          <HelperTextComponent
                                                        left="$0.00"
                                                        right="usd"
                                          />
                            }
                            label={
                                          <Form__FormItemLabel>
                                                        enter_amount
                                          </Form__FormItemLabel>
                            }
              >
                            <Input
                                          defaultValue="0"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          value="0"
                            />
              </Form__FormItem>
              <GasOptions
                            defaultGasLimit={600000}
                            defaultGasPrice={10}
                            defaultOption="average"
                            gasStatistics={undefined}
                            intl={
                                          Object {
                                                        "formatMessage": [Function],
                                                        "formatNumber": [Function],
                                                      }
                            }
                            onChange={[Function]}
              />
              <style__DollarPrice>
                            1 ETH = 
                            <style__StyledNumericText
                                          type="currency"
                                          value="412"
                            />
              </style__DollarPrice>
</Form__FlexForm>,
            "style": Object {
              "flex": "1",
              "marginBottom": "3rem",
              "marginRight": "2rem",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Form__FormItem
                  colon={false}
                  label={
                                    <Form__FormItemLabel>
                                                      select_asset_to_deposit
                                    </Form__FormItemLabel>
                  }
>
                  <style__Image
                                    alt="logo"
                                    onError={[Function]}
                                    src="/public/images/assets/ETH.svg"
                  />
                  <Select
                                    defaultValue="ETH"
                                    onSelect={[Function]}
                                    style={
                                                      Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                                    }
                  >
                                    <Option
                                                      value="ETH"
                                    >
                                                      ETH
                                    </Option>
                                    <Option
                                                      value="BOKKY"
                                    >
                                                      BOKKY
                                    </Option>
                  </Select>
</Form__FormItem>,
                <Form__FormItem
                  colon={false}
                  help={
                                    <HelperTextComponent
                                                      left="$0.00"
                                                      right="usd"
                                    />
                  }
                  label={
                                    <Form__FormItemLabel>
                                                      enter_amount
                                    </Form__FormItemLabel>
                  }
>
                  <Input
                                    defaultValue="0"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    value="0"
                  />
</Form__FormItem>,
                <GasOptions
                  defaultGasLimit={600000}
                  defaultGasPrice={10}
                  defaultOption="average"
                  gasStatistics={undefined}
                  intl={
                                    Object {
                                                      "formatMessage": [Function],
                                                      "formatNumber": [Function],
                                                    }
                  }
                  onChange={[Function]}
/>,
                <style__DollarPrice>
                  1 ETH = 
                  <style__StyledNumericText
                                    type="currency"
                                    value="412"
                  />
</style__DollarPrice>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <style__Image
                      alt="logo"
                      onError={[Function]}
                      src="/public/images/assets/ETH.svg"
/>,
                    <Select
                      defaultValue="ETH"
                      onSelect={[Function]}
                      style={
                                            Object {
                                                                  "paddingLeft": "0.5rem",
                                                                }
                      }
>
                      <Option
                                            value="ETH"
                      >
                                            ETH
                      </Option>
                      <Option
                                            value="BOKKY"
                      >
                                            BOKKY
                      </Option>
</Select>,
                  ],
                  "colon": false,
                  "label": <Form__FormItemLabel>
                    select_asset_to_deposit
</Form__FormItemLabel>,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "alt": "logo",
                      "onError": [Function],
                      "src": "/public/images/assets/ETH.svg",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <Option
                          value="ETH"
>
                          ETH
</Option>,
                        <Option
                          value="BOKKY"
>
                          BOKKY
</Option>,
                      ],
                      "defaultValue": "ETH",
                      "onSelect": [Function],
                      "style": Object {
                        "paddingLeft": "0.5rem",
                      },
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": "ETH",
                        "nodeType": "class",
                        "props": Object {
                          "children": "ETH",
                          "value": "ETH",
                        },
                        "ref": null,
                        "rendered": "ETH",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": "BOKKY",
                        "nodeType": "class",
                        "props": Object {
                          "children": "BOKKY",
                          "value": "BOKKY",
                        },
                        "ref": null,
                        "rendered": "BOKKY",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Input
                    defaultValue="0"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    value="0"
/>,
                  "colon": false,
                  "help": <HelperTextComponent
                    left="$0.00"
                    right="usd"
/>,
                  "label": <Form__FormItemLabel>
                    enter_amount
</Form__FormItemLabel>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "defaultValue": "0",
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "0",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "defaultGasLimit": 600000,
                  "defaultGasPrice": 10,
                  "defaultOption": "average",
                  "gasStatistics": undefined,
                  "intl": Object {
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                  },
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "1 ETH = ",
                    <style__StyledNumericText
                      type="currency"
                      value="412"
/>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "1 ETH = ",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "type": "currency",
                      "value": "412",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                deposit
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main={
                                                <SelectableText>
                                                                <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0"
                                                                />
                                                                 
                                                                ETH
                                                </SelectableText>
                                }
                                subtitle={
                                                <NumericText
                                                                type="currency"
                                                                value="0"
                                                />
                                }
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                <TooltipText
                                                details="max_base_layer_fee_explain"
                                >
                                                max_base_layer_fee
                                </TooltipText>
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main={
                                                <SelectableText>
                                                                <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.006"
                                                                />
                                                                 
                                                                ETH
                                                </SelectableText>
                                }
                                subtitle={
                                                <NumericText
                                                                type="currency"
                                                                value="2.472"
                                                />
                                }
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                base_layer
                                 ETH 
                                balance_before
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main={
                                                <SelectableText>
                                                                <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.198937"
                                                                />
                                                                 
                                                                ETH
                                                </SelectableText>
                                }
                                subtitle={
                                                <NumericText
                                                                type="currency"
                                                                value="81.962044"
                                                />
                                }
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                base_layer
                                 ETH 
                                balance_after
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main={
                                                <SelectableText>
                                                                <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.192937"
                                                                />
                                                                 
                                                                ETH
                                                </SelectableText>
                                }
                                subtitle={
                                                <NumericText
                                                                type="currency"
                                                                value="79.490044"
                                                />
                                }
                />
</Row>,
              <div>
                <Row
                                gutter={0}
                >
                                <style__StyledCol
                                                span={12}
                                >
                                                nahmii_available
                                                 ETH 
                                                balance_before
                                </style__StyledCol>
                </Row>
                <Row
                                gutter={0}
                >
                                <TransferDescriptionItem
                                                main={
                                                                <SelectableText>
                                                                                <NumericText
                                                                                                maxDecimalPlaces={18}
                                                                                                value="0.1"
                                                                                />
                                                                                 
                                                                                ETH
                                                                </SelectableText>
                                                }
                                                subtitle={
                                                                <NumericText
                                                                                type="currency"
                                                                                value="41.2"
                                                                />
                                                }
                                />
                </Row>
                <Row
                                gutter={0}
                >
                                <style__StyledCol
                                                span={12}
                                >
                                                nahmii_available
                                                 ETH 
                                                balance_after
                                </style__StyledCol>
                </Row>
                <Row
                                gutter={0}
                >
                                <TransferDescriptionItem
                                                main={
                                                                <SelectableText>
                                                                                <NumericText
                                                                                                maxDecimalPlaces={18}
                                                                                                value="0.1"
                                                                                />
                                                                                 
                                                                                ETH
                                                                </SelectableText>
                                                }
                                                subtitle={
                                                                <NumericText
                                                                                type="currency"
                                                                                value="41.2"
                                                                />
                                                }
                                />
                </Row>
</div>,
              false,
              <Row
                gutter={0}
>
                <style__HWPromptWrapper>
                                <Connect(HWPromptContainer) />
                </style__HWPromptWrapper>
                <div
                                style={
                                                Object {
                                                                "width": "fit-content",
                                                              }
                                }
                >
                                <style__StyledButton
                                                disabled={true}
                                                onClick={[Function]}
                                                type="primary"
                                >
                                                <span>
                                                                deposit
                                                </span>
                                </style__StyledButton>
                </div>
</Row>,
              <SectionHeading
                style={
                                Object {
                                                "marginTop": "2rem",
                                                "maxWidth": "25rem",
                                              }
                }
>
                deposits_note
</SectionHeading>,
            ],
            "style": Object {
              "minWidth": "34rem",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  deposit
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "deposit",
                  "span": 12,
                },
                "ref": null,
                "rendered": "deposit",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main={
                                    <SelectableText>
                                                      <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0"
                                                      />
                                                       
                                                      ETH
                                    </SelectableText>
                  }
                  subtitle={
                                    <NumericText
                                                      type="currency"
                                                      value="0"
                                    />
                  }
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": <SelectableText>
                    <NumericText
                                        maxDecimalPlaces={18}
                                        value="0"
                    />
                     
                    ETH
</SelectableText>,
                  "subtitle": <NumericText
                    type="currency"
                    value="0"
/>,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  <TooltipText
                                    details="max_base_layer_fee_explain"
                  >
                                    max_base_layer_fee
                  </TooltipText>
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TooltipText
                    details="max_base_layer_fee_explain"
>
                    max_base_layer_fee
</TooltipText>,
                  "span": 12,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "max_base_layer_fee",
                    "details": "max_base_layer_fee_explain",
                  },
                  "ref": null,
                  "rendered": "max_base_layer_fee",
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main={
                                    <SelectableText>
                                                      <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.006"
                                                      />
                                                       
                                                      ETH
                                    </SelectableText>
                  }
                  subtitle={
                                    <NumericText
                                                      type="currency"
                                                      value="2.472"
                                    />
                  }
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": <SelectableText>
                    <NumericText
                                        maxDecimalPlaces={18}
                                        value="0.006"
                    />
                     
                    ETH
</SelectableText>,
                  "subtitle": <NumericText
                    type="currency"
                    value="2.472"
/>,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  base_layer
                   ETH 
                  balance_before
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "base_layer",
                    " ETH ",
                    "balance_before",
                  ],
                  "span": 12,
                },
                "ref": null,
                "rendered": Array [
                  "base_layer",
                  " ETH ",
                  "balance_before",
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main={
                                    <SelectableText>
                                                      <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.198937"
                                                      />
                                                       
                                                      ETH
                                    </SelectableText>
                  }
                  subtitle={
                                    <NumericText
                                                      type="currency"
                                                      value="81.962044"
                                    />
                  }
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": <SelectableText>
                    <NumericText
                                        maxDecimalPlaces={18}
                                        value="0.198937"
                    />
                     
                    ETH
</SelectableText>,
                  "subtitle": <NumericText
                    type="currency"
                    value="81.962044"
/>,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  base_layer
                   ETH 
                  balance_after
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "base_layer",
                    " ETH ",
                    "balance_after",
                  ],
                  "span": 12,
                },
                "ref": null,
                "rendered": Array [
                  "base_layer",
                  " ETH ",
                  "balance_after",
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main={
                                    <SelectableText>
                                                      <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.192937"
                                                      />
                                                       
                                                      ETH
                                    </SelectableText>
                  }
                  subtitle={
                                    <NumericText
                                                      type="currency"
                                                      value="79.490044"
                                    />
                  }
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": <SelectableText>
                    <NumericText
                                        maxDecimalPlaces={18}
                                        value="0.192937"
                    />
                     
                    ETH
</SelectableText>,
                  "subtitle": <NumericText
                    type="currency"
                    value="79.490044"
/>,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Row
                    gutter={0}
>
                    <style__StyledCol
                                        span={12}
                    >
                                        nahmii_available
                                         ETH 
                                        balance_before
                    </style__StyledCol>
</Row>,
                  <Row
                    gutter={0}
>
                    <TransferDescriptionItem
                                        main={
                                                            <SelectableText>
                                                                                <NumericText
                                                                                                    maxDecimalPlaces={18}
                                                                                                    value="0.1"
                                                                                />
                                                                                 
                                                                                ETH
                                                            </SelectableText>
                                        }
                                        subtitle={
                                                            <NumericText
                                                                                type="currency"
                                                                                value="41.2"
                                                            />
                                        }
                    />
</Row>,
                  <Row
                    gutter={0}
>
                    <style__StyledCol
                                        span={12}
                    >
                                        nahmii_available
                                         ETH 
                                        balance_after
                    </style__StyledCol>
</Row>,
                  <Row
                    gutter={0}
>
                    <TransferDescriptionItem
                                        main={
                                                            <SelectableText>
                                                                                <NumericText
                                                                                                    maxDecimalPlaces={18}
                                                                                                    value="0.1"
                                                                                />
                                                                                 
                                                                                ETH
                                                            </SelectableText>
                                        }
                                        subtitle={
                                                            <NumericText
                                                                                type="currency"
                                                                                value="41.2"
                                                            />
                                        }
                    />
</Row>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <style__StyledCol
                      span={12}
>
                      nahmii_available
                       ETH 
                      balance_before
</style__StyledCol>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "nahmii_available",
                        " ETH ",
                        "balance_before",
                      ],
                      "span": 12,
                    },
                    "ref": null,
                    "rendered": Array [
                      "nahmii_available",
                      " ETH ",
                      "balance_before",
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TransferDescriptionItem
                      main={
                                            <SelectableText>
                                                                  <NumericText
                                                                                        maxDecimalPlaces={18}
                                                                                        value="0.1"
                                                                  />
                                                                   
                                                                  ETH
                                            </SelectableText>
                      }
                      subtitle={
                                            <NumericText
                                                                  type="currency"
                                                                  value="41.2"
                                            />
                      }
/>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "main": <SelectableText>
                        <NumericText
                                                maxDecimalPlaces={18}
                                                value="0.1"
                        />
                         
                        ETH
</SelectableText>,
                      "subtitle": <NumericText
                        type="currency"
                        value="41.2"
/>,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <style__StyledCol
                      span={12}
>
                      nahmii_available
                       ETH 
                      balance_after
</style__StyledCol>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "nahmii_available",
                        " ETH ",
                        "balance_after",
                      ],
                      "span": 12,
                    },
                    "ref": null,
                    "rendered": Array [
                      "nahmii_available",
                      " ETH ",
                      "balance_after",
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TransferDescriptionItem
                      main={
                                            <SelectableText>
                                                                  <NumericText
                                                                                        maxDecimalPlaces={18}
                                                                                        value="0.1"
                                                                  />
                                                                   
                                                                  ETH
                                            </SelectableText>
                      }
                      subtitle={
                                            <NumericText
                                                                  type="currency"
                                                                  value="41.2"
                                            />
                      }
/>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "main": <SelectableText>
                        <NumericText
                                                maxDecimalPlaces={18}
                                                value="0.1"
                        />
                         
                        ETH
</SelectableText>,
                      "subtitle": <NumericText
                        type="currency"
                        value="41.2"
/>,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <style__HWPromptWrapper>
                    <Connect(HWPromptContainer) />
</style__HWPromptWrapper>,
                  <div
                    style={
                                        Object {
                                                            "width": "fit-content",
                                                          }
                    }
>
                    <style__StyledButton
                                        disabled={true}
                                        onClick={[Function]}
                                        type="primary"
                    >
                                        <span>
                                                            deposit
                                        </span>
                    </style__StyledButton>
</div>,
                ],
                "gutter": 0,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Connect(HWPromptContainer) />,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <style__StyledButton
                      disabled={true}
                      onClick={[Function]}
                      type="primary"
>
                      <span>
                                            deposit
                      </span>
</style__StyledButton>,
                    "style": Object {
                      "width": "fit-content",
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <span>
                        deposit
</span>,
                      "disabled": true,
                      "onClick": [Function],
                      "type": "primary",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "deposit",
                      },
                      "ref": null,
                      "rendered": "deposit",
                      "type": "span",
                    },
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "deposits_note",
                "style": Object {
                  "marginTop": "2rem",
                  "maxWidth": "25rem",
                },
              },
              "ref": null,
              "rendered": "deposits_note",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          style={
                    Object {
                              "display": "flex",
                              "flex": "1",
                              "flexWrap": "wrap",
                              "marginTop": "0.5rem",
                            }
          }
>
          <div
                    style={
                              Object {
                                        "flex": "1",
                                        "marginBottom": "3rem",
                                        "marginRight": "2rem",
                                      }
                    }
          >
                    <Form__FlexForm>
                              <Form__FormItem
                                        colon={false}
                                        label={
                                                  <Form__FormItemLabel>
                                                            select_asset_to_deposit
                                                  </Form__FormItemLabel>
                                        }
                              >
                                        <style__Image
                                                  alt="logo"
                                                  onError={[Function]}
                                                  src="/public/images/assets/ETH.svg"
                                        />
                                        <Select
                                                  defaultValue="ETH"
                                                  onSelect={[Function]}
                                                  style={
                                                            Object {
                                                                      "paddingLeft": "0.5rem",
                                                                    }
                                                  }
                                        >
                                                  <Option
                                                            value="ETH"
                                                  >
                                                            ETH
                                                  </Option>
                                                  <Option
                                                            value="BOKKY"
                                                  >
                                                            BOKKY
                                                  </Option>
                                        </Select>
                              </Form__FormItem>
                              <Form__FormItem
                                        colon={false}
                                        help={
                                                  <HelperTextComponent
                                                            left="$0.00"
                                                            right="usd"
                                                  />
                                        }
                                        label={
                                                  <Form__FormItemLabel>
                                                            enter_amount
                                                  </Form__FormItemLabel>
                                        }
                              >
                                        <Input
                                                  defaultValue="0"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  value="0"
                                        />
                              </Form__FormItem>
                              <GasOptions
                                        defaultGasLimit={600000}
                                        defaultGasPrice={10}
                                        defaultOption="average"
                                        gasStatistics={undefined}
                                        intl={
                                                  Object {
                                                            "formatMessage": [Function],
                                                            "formatNumber": [Function],
                                                          }
                                        }
                                        onChange={[Function]}
                              />
                              <style__DollarPrice>
                                        1 ETH = 
                                        <style__StyledNumericText
                                                  type="currency"
                                                  value="412"
                                        />
                              </style__DollarPrice>
                    </Form__FlexForm>
          </div>
          <div
                    style={
                              Object {
                                        "minWidth": "34rem",
                                      }
                    }
          >
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        deposit
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main={
                                                  <SelectableText>
                                                            <NumericText
                                                                      maxDecimalPlaces={18}
                                                                      value="0"
                                                            />
                                                             
                                                            ETH
                                                  </SelectableText>
                                        }
                                        subtitle={
                                                  <NumericText
                                                            type="currency"
                                                            value="0"
                                                  />
                                        }
                              />
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        <TooltipText
                                                  details="max_base_layer_fee_explain"
                                        >
                                                  max_base_layer_fee
                                        </TooltipText>
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main={
                                                  <SelectableText>
                                                            <NumericText
                                                                      maxDecimalPlaces={18}
                                                                      value="0.006"
                                                            />
                                                             
                                                            ETH
                                                  </SelectableText>
                                        }
                                        subtitle={
                                                  <NumericText
                                                            type="currency"
                                                            value="2.472"
                                                  />
                                        }
                              />
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        base_layer
                                         ETH 
                                        balance_before
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main={
                                                  <SelectableText>
                                                            <NumericText
                                                                      maxDecimalPlaces={18}
                                                                      value="0.198937"
                                                            />
                                                             
                                                            ETH
                                                  </SelectableText>
                                        }
                                        subtitle={
                                                  <NumericText
                                                            type="currency"
                                                            value="81.962044"
                                                  />
                                        }
                              />
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        base_layer
                                         ETH 
                                        balance_after
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main={
                                                  <SelectableText>
                                                            <NumericText
                                                                      maxDecimalPlaces={18}
                                                                      value="0.192937"
                                                            />
                                                             
                                                            ETH
                                                  </SelectableText>
                                        }
                                        subtitle={
                                                  <NumericText
                                                            type="currency"
                                                            value="79.490044"
                                                  />
                                        }
                              />
                    </Row>
                    <div>
                              <Row
                                        gutter={0}
                              >
                                        <style__StyledCol
                                                  span={12}
                                        >
                                                  nahmii_available
                                                   ETH 
                                                  balance_before
                                        </style__StyledCol>
                              </Row>
                              <Row
                                        gutter={0}
                              >
                                        <TransferDescriptionItem
                                                  main={
                                                            <SelectableText>
                                                                      <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.1"
                                                                      />
                                                                       
                                                                      ETH
                                                            </SelectableText>
                                                  }
                                                  subtitle={
                                                            <NumericText
                                                                      type="currency"
                                                                      value="41.2"
                                                            />
                                                  }
                                        />
                              </Row>
                              <Row
                                        gutter={0}
                              >
                                        <style__StyledCol
                                                  span={12}
                                        >
                                                  nahmii_available
                                                   ETH 
                                                  balance_after
                                        </style__StyledCol>
                              </Row>
                              <Row
                                        gutter={0}
                              >
                                        <TransferDescriptionItem
                                                  main={
                                                            <SelectableText>
                                                                      <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.1"
                                                                      />
                                                                       
                                                                      ETH
                                                            </SelectableText>
                                                  }
                                                  subtitle={
                                                            <NumericText
                                                                      type="currency"
                                                                      value="41.2"
                                                            />
                                                  }
                                        />
                              </Row>
                    </div>
                    <Row
                              gutter={0}
                    >
                              <style__HWPromptWrapper>
                                        <Connect(HWPromptContainer) />
                              </style__HWPromptWrapper>
                              <div
                                        style={
                                                  Object {
                                                            "width": "fit-content",
                                                          }
                                        }
                              >
                                        <style__StyledButton
                                                  disabled={true}
                                                  onClick={[Function]}
                                                  type="primary"
                                        >
                                                  <span>
                                                            deposit
                                                  </span>
                                        </style__StyledButton>
                              </div>
                    </Row>
                    <SectionHeading
                              style={
                                        Object {
                                                  "marginTop": "2rem",
                                                  "maxWidth": "25rem",
                                                }
                              }
                    >
                              deposits_note
                    </SectionHeading>
          </div>
</div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              style={
                            Object {
                                          "flex": "1",
                                          "marginBottom": "3rem",
                                          "marginRight": "2rem",
                                        }
              }
>
              <Form__FlexForm>
                            <Form__FormItem
                                          colon={false}
                                          label={
                                                        <Form__FormItemLabel>
                                                                      select_asset_to_deposit
                                                        </Form__FormItemLabel>
                                          }
                            >
                                          <style__Image
                                                        alt="logo"
                                                        onError={[Function]}
                                                        src="/public/images/assets/ETH.svg"
                                          />
                                          <Select
                                                        defaultValue="ETH"
                                                        onSelect={[Function]}
                                                        style={
                                                                      Object {
                                                                                    "paddingLeft": "0.5rem",
                                                                                  }
                                                        }
                                          >
                                                        <Option
                                                                      value="ETH"
                                                        >
                                                                      ETH
                                                        </Option>
                                                        <Option
                                                                      value="BOKKY"
                                                        >
                                                                      BOKKY
                                                        </Option>
                                          </Select>
                            </Form__FormItem>
                            <Form__FormItem
                                          colon={false}
                                          help={
                                                        <HelperTextComponent
                                                                      left="$0.00"
                                                                      right="usd"
                                                        />
                                          }
                                          label={
                                                        <Form__FormItemLabel>
                                                                      enter_amount
                                                        </Form__FormItemLabel>
                                          }
                            >
                                          <Input
                                                        defaultValue="0"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        value="0"
                                          />
                            </Form__FormItem>
                            <GasOptions
                                          defaultGasLimit={600000}
                                          defaultGasPrice={10}
                                          defaultOption="average"
                                          gasStatistics={undefined}
                                          intl={
                                                        Object {
                                                                      "formatMessage": [Function],
                                                                      "formatNumber": [Function],
                                                                    }
                                          }
                                          onChange={[Function]}
                            />
                            <style__DollarPrice>
                                          1 ETH = 
                                          <style__StyledNumericText
                                                        type="currency"
                                                        value="412"
                                          />
                            </style__DollarPrice>
              </Form__FlexForm>
</div>,
            <div
              style={
                            Object {
                                          "minWidth": "34rem",
                                        }
              }
>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          deposit
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main={
                                                        <SelectableText>
                                                                      <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0"
                                                                      />
                                                                       
                                                                      ETH
                                                        </SelectableText>
                                          }
                                          subtitle={
                                                        <NumericText
                                                                      type="currency"
                                                                      value="0"
                                                        />
                                          }
                            />
              </Row>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          <TooltipText
                                                        details="max_base_layer_fee_explain"
                                          >
                                                        max_base_layer_fee
                                          </TooltipText>
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main={
                                                        <SelectableText>
                                                                      <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.006"
                                                                      />
                                                                       
                                                                      ETH
                                                        </SelectableText>
                                          }
                                          subtitle={
                                                        <NumericText
                                                                      type="currency"
                                                                      value="2.472"
                                                        />
                                          }
                            />
              </Row>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          base_layer
                                           ETH 
                                          balance_before
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main={
                                                        <SelectableText>
                                                                      <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.198937"
                                                                      />
                                                                       
                                                                      ETH
                                                        </SelectableText>
                                          }
                                          subtitle={
                                                        <NumericText
                                                                      type="currency"
                                                                      value="81.962044"
                                                        />
                                          }
                            />
              </Row>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          base_layer
                                           ETH 
                                          balance_after
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main={
                                                        <SelectableText>
                                                                      <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.192937"
                                                                      />
                                                                       
                                                                      ETH
                                                        </SelectableText>
                                          }
                                          subtitle={
                                                        <NumericText
                                                                      type="currency"
                                                                      value="79.490044"
                                                        />
                                          }
                            />
              </Row>
              <div>
                            <Row
                                          gutter={0}
                            >
                                          <style__StyledCol
                                                        span={12}
                                          >
                                                        nahmii_available
                                                         ETH 
                                                        balance_before
                                          </style__StyledCol>
                            </Row>
                            <Row
                                          gutter={0}
                            >
                                          <TransferDescriptionItem
                                                        main={
                                                                      <SelectableText>
                                                                                    <NumericText
                                                                                                  maxDecimalPlaces={18}
                                                                                                  value="0.1"
                                                                                    />
                                                                                     
                                                                                    ETH
                                                                      </SelectableText>
                                                        }
                                                        subtitle={
                                                                      <NumericText
                                                                                    type="currency"
                                                                                    value="41.2"
                                                                      />
                                                        }
                                          />
                            </Row>
                            <Row
                                          gutter={0}
                            >
                                          <style__StyledCol
                                                        span={12}
                                          >
                                                        nahmii_available
                                                         ETH 
                                                        balance_after
                                          </style__StyledCol>
                            </Row>
                            <Row
                                          gutter={0}
                            >
                                          <TransferDescriptionItem
                                                        main={
                                                                      <SelectableText>
                                                                                    <NumericText
                                                                                                  maxDecimalPlaces={18}
                                                                                                  value="0.1"
                                                                                    />
                                                                                     
                                                                                    ETH
                                                                      </SelectableText>
                                                        }
                                                        subtitle={
                                                                      <NumericText
                                                                                    type="currency"
                                                                                    value="41.2"
                                                                      />
                                                        }
                                          />
                            </Row>
              </div>
              <Row
                            gutter={0}
              >
                            <style__HWPromptWrapper>
                                          <Connect(HWPromptContainer) />
                            </style__HWPromptWrapper>
                            <div
                                          style={
                                                        Object {
                                                                      "width": "fit-content",
                                                                    }
                                          }
                            >
                                          <style__StyledButton
                                                        disabled={true}
                                                        onClick={[Function]}
                                                        type="primary"
                                          >
                                                        <span>
                                                                      deposit
                                                        </span>
                                          </style__StyledButton>
                            </div>
              </Row>
              <SectionHeading
                            style={
                                          Object {
                                                        "marginTop": "2rem",
                                                        "maxWidth": "25rem",
                                                      }
                            }
              >
                            deposits_note
              </SectionHeading>
</div>,
          ],
          "style": Object {
            "display": "flex",
            "flex": "1",
            "flexWrap": "wrap",
            "marginTop": "0.5rem",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Form__FlexForm>
                <Form__FormItem
                                colon={false}
                                label={
                                                <Form__FormItemLabel>
                                                                select_asset_to_deposit
                                                </Form__FormItemLabel>
                                }
                >
                                <style__Image
                                                alt="logo"
                                                onError={[Function]}
                                                src="/public/images/assets/ETH.svg"
                                />
                                <Select
                                                defaultValue="ETH"
                                                onSelect={[Function]}
                                                style={
                                                                Object {
                                                                                "paddingLeft": "0.5rem",
                                                                              }
                                                }
                                >
                                                <Option
                                                                value="ETH"
                                                >
                                                                ETH
                                                </Option>
                                                <Option
                                                                value="BOKKY"
                                                >
                                                                BOKKY
                                                </Option>
                                </Select>
                </Form__FormItem>
                <Form__FormItem
                                colon={false}
                                help={
                                                <HelperTextComponent
                                                                left="$0.00"
                                                                right="usd"
                                                />
                                }
                                label={
                                                <Form__FormItemLabel>
                                                                enter_amount
                                                </Form__FormItemLabel>
                                }
                >
                                <Input
                                                defaultValue="0"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value="0"
                                />
                </Form__FormItem>
                <GasOptions
                                defaultGasLimit={600000}
                                defaultGasPrice={10}
                                defaultOption="average"
                                gasStatistics={undefined}
                                intl={
                                                Object {
                                                                "formatMessage": [Function],
                                                                "formatNumber": [Function],
                                                              }
                                }
                                onChange={[Function]}
                />
                <style__DollarPrice>
                                1 ETH = 
                                <style__StyledNumericText
                                                type="currency"
                                                value="412"
                                />
                </style__DollarPrice>
</Form__FlexForm>,
              "style": Object {
                "flex": "1",
                "marginBottom": "3rem",
                "marginRight": "2rem",
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Form__FormItem
                    colon={false}
                    label={
                                        <Form__FormItemLabel>
                                                            select_asset_to_deposit
                                        </Form__FormItemLabel>
                    }
>
                    <style__Image
                                        alt="logo"
                                        onError={[Function]}
                                        src="/public/images/assets/ETH.svg"
                    />
                    <Select
                                        defaultValue="ETH"
                                        onSelect={[Function]}
                                        style={
                                                            Object {
                                                                                "paddingLeft": "0.5rem",
                                                                              }
                                        }
                    >
                                        <Option
                                                            value="ETH"
                                        >
                                                            ETH
                                        </Option>
                                        <Option
                                                            value="BOKKY"
                                        >
                                                            BOKKY
                                        </Option>
                    </Select>
</Form__FormItem>,
                  <Form__FormItem
                    colon={false}
                    help={
                                        <HelperTextComponent
                                                            left="$0.00"
                                                            right="usd"
                                        />
                    }
                    label={
                                        <Form__FormItemLabel>
                                                            enter_amount
                                        </Form__FormItemLabel>
                    }
>
                    <Input
                                        defaultValue="0"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        value="0"
                    />
</Form__FormItem>,
                  <GasOptions
                    defaultGasLimit={600000}
                    defaultGasPrice={10}
                    defaultOption="average"
                    gasStatistics={undefined}
                    intl={
                                        Object {
                                                            "formatMessage": [Function],
                                                            "formatNumber": [Function],
                                                          }
                    }
                    onChange={[Function]}
/>,
                  <style__DollarPrice>
                    1 ETH = 
                    <style__StyledNumericText
                                        type="currency"
                                        value="412"
                    />
</style__DollarPrice>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <style__Image
                        alt="logo"
                        onError={[Function]}
                        src="/public/images/assets/ETH.svg"
/>,
                      <Select
                        defaultValue="ETH"
                        onSelect={[Function]}
                        style={
                                                Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                        }
>
                        <Option
                                                value="ETH"
                        >
                                                ETH
                        </Option>
                        <Option
                                                value="BOKKY"
                        >
                                                BOKKY
                        </Option>
</Select>,
                    ],
                    "colon": false,
                    "label": <Form__FormItemLabel>
                      select_asset_to_deposit
</Form__FormItemLabel>,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "alt": "logo",
                        "onError": [Function],
                        "src": "/public/images/assets/ETH.svg",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <Option
                            value="ETH"
>
                            ETH
</Option>,
                          <Option
                            value="BOKKY"
>
                            BOKKY
</Option>,
                        ],
                        "defaultValue": "ETH",
                        "onSelect": [Function],
                        "style": Object {
                          "paddingLeft": "0.5rem",
                        },
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": "ETH",
                          "nodeType": "class",
                          "props": Object {
                            "children": "ETH",
                            "value": "ETH",
                          },
                          "ref": null,
                          "rendered": "ETH",
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": "BOKKY",
                          "nodeType": "class",
                          "props": Object {
                            "children": "BOKKY",
                            "value": "BOKKY",
                          },
                          "ref": null,
                          "rendered": "BOKKY",
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Input
                      defaultValue="0"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      value="0"
/>,
                    "colon": false,
                    "help": <HelperTextComponent
                      left="$0.00"
                      right="usd"
/>,
                    "label": <Form__FormItemLabel>
                      enter_amount
</Form__FormItemLabel>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "defaultValue": "0",
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "value": "0",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "defaultGasLimit": 600000,
                    "defaultGasPrice": 10,
                    "defaultOption": "average",
                    "gasStatistics": undefined,
                    "intl": Object {
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                    },
                    "onChange": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "1 ETH = ",
                      <style__StyledNumericText
                        type="currency"
                        value="412"
/>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    "1 ETH = ",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "type": "currency",
                        "value": "412",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    deposit
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main={
                                                      <SelectableText>
                                                                        <NumericText
                                                                                          maxDecimalPlaces={18}
                                                                                          value="0"
                                                                        />
                                                                         
                                                                        ETH
                                                      </SelectableText>
                                    }
                                    subtitle={
                                                      <NumericText
                                                                        type="currency"
                                                                        value="0"
                                                      />
                                    }
                  />
</Row>,
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    <TooltipText
                                                      details="max_base_layer_fee_explain"
                                    >
                                                      max_base_layer_fee
                                    </TooltipText>
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main={
                                                      <SelectableText>
                                                                        <NumericText
                                                                                          maxDecimalPlaces={18}
                                                                                          value="0.006"
                                                                        />
                                                                         
                                                                        ETH
                                                      </SelectableText>
                                    }
                                    subtitle={
                                                      <NumericText
                                                                        type="currency"
                                                                        value="2.472"
                                                      />
                                    }
                  />
</Row>,
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    base_layer
                                     ETH 
                                    balance_before
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main={
                                                      <SelectableText>
                                                                        <NumericText
                                                                                          maxDecimalPlaces={18}
                                                                                          value="0.198937"
                                                                        />
                                                                         
                                                                        ETH
                                                      </SelectableText>
                                    }
                                    subtitle={
                                                      <NumericText
                                                                        type="currency"
                                                                        value="81.962044"
                                                      />
                                    }
                  />
</Row>,
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    base_layer
                                     ETH 
                                    balance_after
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main={
                                                      <SelectableText>
                                                                        <NumericText
                                                                                          maxDecimalPlaces={18}
                                                                                          value="0.192937"
                                                                        />
                                                                         
                                                                        ETH
                                                      </SelectableText>
                                    }
                                    subtitle={
                                                      <NumericText
                                                                        type="currency"
                                                                        value="79.490044"
                                                      />
                                    }
                  />
</Row>,
                <div>
                  <Row
                                    gutter={0}
                  >
                                    <style__StyledCol
                                                      span={12}
                                    >
                                                      nahmii_available
                                                       ETH 
                                                      balance_before
                                    </style__StyledCol>
                  </Row>
                  <Row
                                    gutter={0}
                  >
                                    <TransferDescriptionItem
                                                      main={
                                                                        <SelectableText>
                                                                                          <NumericText
                                                                                                            maxDecimalPlaces={18}
                                                                                                            value="0.1"
                                                                                          />
                                                                                           
                                                                                          ETH
                                                                        </SelectableText>
                                                      }
                                                      subtitle={
                                                                        <NumericText
                                                                                          type="currency"
                                                                                          value="41.2"
                                                                        />
                                                      }
                                    />
                  </Row>
                  <Row
                                    gutter={0}
                  >
                                    <style__StyledCol
                                                      span={12}
                                    >
                                                      nahmii_available
                                                       ETH 
                                                      balance_after
                                    </style__StyledCol>
                  </Row>
                  <Row
                                    gutter={0}
                  >
                                    <TransferDescriptionItem
                                                      main={
                                                                        <SelectableText>
                                                                                          <NumericText
                                                                                                            maxDecimalPlaces={18}
                                                                                                            value="0.1"
                                                                                          />
                                                                                           
                                                                                          ETH
                                                                        </SelectableText>
                                                      }
                                                      subtitle={
                                                                        <NumericText
                                                                                          type="currency"
                                                                                          value="41.2"
                                                                        />
                                                      }
                                    />
                  </Row>
</div>,
                false,
                <Row
                  gutter={0}
>
                  <style__HWPromptWrapper>
                                    <Connect(HWPromptContainer) />
                  </style__HWPromptWrapper>
                  <div
                                    style={
                                                      Object {
                                                                        "width": "fit-content",
                                                                      }
                                    }
                  >
                                    <style__StyledButton
                                                      disabled={true}
                                                      onClick={[Function]}
                                                      type="primary"
                                    >
                                                      <span>
                                                                        deposit
                                                      </span>
                                    </style__StyledButton>
                  </div>
</Row>,
                <SectionHeading
                  style={
                                    Object {
                                                      "marginTop": "2rem",
                                                      "maxWidth": "25rem",
                                                    }
                  }
>
                  deposits_note
</SectionHeading>,
              ],
              "style": Object {
                "minWidth": "34rem",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    deposit
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "deposit",
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": "deposit",
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main={
                                        <SelectableText>
                                                            <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0"
                                                            />
                                                             
                                                            ETH
                                        </SelectableText>
                    }
                    subtitle={
                                        <NumericText
                                                            type="currency"
                                                            value="0"
                                        />
                    }
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": <SelectableText>
                      <NumericText
                                            maxDecimalPlaces={18}
                                            value="0"
                      />
                       
                      ETH
</SelectableText>,
                    "subtitle": <NumericText
                      type="currency"
                      value="0"
/>,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    <TooltipText
                                        details="max_base_layer_fee_explain"
                    >
                                        max_base_layer_fee
                    </TooltipText>
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TooltipText
                      details="max_base_layer_fee_explain"
>
                      max_base_layer_fee
</TooltipText>,
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "max_base_layer_fee",
                      "details": "max_base_layer_fee_explain",
                    },
                    "ref": null,
                    "rendered": "max_base_layer_fee",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main={
                                        <SelectableText>
                                                            <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.006"
                                                            />
                                                             
                                                            ETH
                                        </SelectableText>
                    }
                    subtitle={
                                        <NumericText
                                                            type="currency"
                                                            value="2.472"
                                        />
                    }
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": <SelectableText>
                      <NumericText
                                            maxDecimalPlaces={18}
                                            value="0.006"
                      />
                       
                      ETH
</SelectableText>,
                    "subtitle": <NumericText
                      type="currency"
                      value="2.472"
/>,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    base_layer
                     ETH 
                    balance_before
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "base_layer",
                      " ETH ",
                      "balance_before",
                    ],
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Array [
                    "base_layer",
                    " ETH ",
                    "balance_before",
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main={
                                        <SelectableText>
                                                            <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.198937"
                                                            />
                                                             
                                                            ETH
                                        </SelectableText>
                    }
                    subtitle={
                                        <NumericText
                                                            type="currency"
                                                            value="81.962044"
                                        />
                    }
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": <SelectableText>
                      <NumericText
                                            maxDecimalPlaces={18}
                                            value="0.198937"
                      />
                       
                      ETH
</SelectableText>,
                    "subtitle": <NumericText
                      type="currency"
                      value="81.962044"
/>,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    base_layer
                     ETH 
                    balance_after
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "base_layer",
                      " ETH ",
                      "balance_after",
                    ],
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Array [
                    "base_layer",
                    " ETH ",
                    "balance_after",
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main={
                                        <SelectableText>
                                                            <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.192937"
                                                            />
                                                             
                                                            ETH
                                        </SelectableText>
                    }
                    subtitle={
                                        <NumericText
                                                            type="currency"
                                                            value="79.490044"
                                        />
                    }
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": <SelectableText>
                      <NumericText
                                            maxDecimalPlaces={18}
                                            value="0.192937"
                      />
                       
                      ETH
</SelectableText>,
                    "subtitle": <NumericText
                      type="currency"
                      value="79.490044"
/>,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Row
                      gutter={0}
>
                      <style__StyledCol
                                            span={12}
                      >
                                            nahmii_available
                                             ETH 
                                            balance_before
                      </style__StyledCol>
</Row>,
                    <Row
                      gutter={0}
>
                      <TransferDescriptionItem
                                            main={
                                                                  <SelectableText>
                                                                                        <NumericText
                                                                                                              maxDecimalPlaces={18}
                                                                                                              value="0.1"
                                                                                        />
                                                                                         
                                                                                        ETH
                                                                  </SelectableText>
                                            }
                                            subtitle={
                                                                  <NumericText
                                                                                        type="currency"
                                                                                        value="41.2"
                                                                  />
                                            }
                      />
</Row>,
                    <Row
                      gutter={0}
>
                      <style__StyledCol
                                            span={12}
                      >
                                            nahmii_available
                                             ETH 
                                            balance_after
                      </style__StyledCol>
</Row>,
                    <Row
                      gutter={0}
>
                      <TransferDescriptionItem
                                            main={
                                                                  <SelectableText>
                                                                                        <NumericText
                                                                                                              maxDecimalPlaces={18}
                                                                                                              value="0.1"
                                                                                        />
                                                                                         
                                                                                        ETH
                                                                  </SelectableText>
                                            }
                                            subtitle={
                                                                  <NumericText
                                                                                        type="currency"
                                                                                        value="41.2"
                                                                  />
                                            }
                      />
</Row>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <style__StyledCol
                        span={12}
>
                        nahmii_available
                         ETH 
                        balance_before
</style__StyledCol>,
                      "gutter": 0,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          "nahmii_available",
                          " ETH ",
                          "balance_before",
                        ],
                        "span": 12,
                      },
                      "ref": null,
                      "rendered": Array [
                        "nahmii_available",
                        " ETH ",
                        "balance_before",
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <TransferDescriptionItem
                        main={
                                                <SelectableText>
                                                                        <NumericText
                                                                                                maxDecimalPlaces={18}
                                                                                                value="0.1"
                                                                        />
                                                                         
                                                                        ETH
                                                </SelectableText>
                        }
                        subtitle={
                                                <NumericText
                                                                        type="currency"
                                                                        value="41.2"
                                                />
                        }
/>,
                      "gutter": 0,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "main": <SelectableText>
                          <NumericText
                                                    maxDecimalPlaces={18}
                                                    value="0.1"
                          />
                           
                          ETH
</SelectableText>,
                        "subtitle": <NumericText
                          type="currency"
                          value="41.2"
/>,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <style__StyledCol
                        span={12}
>
                        nahmii_available
                         ETH 
                        balance_after
</style__StyledCol>,
                      "gutter": 0,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          "nahmii_available",
                          " ETH ",
                          "balance_after",
                        ],
                        "span": 12,
                      },
                      "ref": null,
                      "rendered": Array [
                        "nahmii_available",
                        " ETH ",
                        "balance_after",
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <TransferDescriptionItem
                        main={
                                                <SelectableText>
                                                                        <NumericText
                                                                                                maxDecimalPlaces={18}
                                                                                                value="0.1"
                                                                        />
                                                                         
                                                                        ETH
                                                </SelectableText>
                        }
                        subtitle={
                                                <NumericText
                                                                        type="currency"
                                                                        value="41.2"
                                                />
                        }
/>,
                      "gutter": 0,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "main": <SelectableText>
                          <NumericText
                                                    maxDecimalPlaces={18}
                                                    value="0.1"
                          />
                           
                          ETH
</SelectableText>,
                        "subtitle": <NumericText
                          type="currency"
                          value="41.2"
/>,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              false,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <style__HWPromptWrapper>
                      <Connect(HWPromptContainer) />
</style__HWPromptWrapper>,
                    <div
                      style={
                                            Object {
                                                                  "width": "fit-content",
                                                                }
                      }
>
                      <style__StyledButton
                                            disabled={true}
                                            onClick={[Function]}
                                            type="primary"
                      >
                                            <span>
                                                                  deposit
                                            </span>
                      </style__StyledButton>
</div>,
                  ],
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Connect(HWPromptContainer) />,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <style__StyledButton
                        disabled={true}
                        onClick={[Function]}
                        type="primary"
>
                        <span>
                                                deposit
                        </span>
</style__StyledButton>,
                      "style": Object {
                        "width": "fit-content",
                      },
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <span>
                          deposit
</span>,
                        "disabled": true,
                        "onClick": [Function],
                        "type": "primary",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "deposit",
                        },
                        "ref": null,
                        "rendered": "deposit",
                        "type": "span",
                      },
                      "type": [Function],
                    },
                    "type": "div",
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "deposits_note",
                  "style": Object {
                    "marginTop": "2rem",
                    "maxWidth": "25rem",
                  },
                },
                "ref": null,
                "rendered": "deposits_note",
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<NahmiiDeposit /> should render correctly when ledger connected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NahmiiDeposit
    currentNetwork={
        Object {
            "apiDomain": "api2.dev.hubii.net",
            "defaultNahmiiProvider": NahmiiProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "connection": Object {
                "url": "http://geth-ropsten.dev.hubii.net",
              },
              "ready": Promise {},
            },
            "identityServiceAppId": "appid",
            "identityServiceSecret": "secret",
            "nahmiiProvider": NahmiiProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "connection": Object {
                "url": "http://geth-ropsten.dev.hubii.net",
              },
              "ready": Promise {},
            },
            "name": "ropsten",
            "provider": FallbackProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "_providers": Array [
                InfuraProvider {
                  "_balances": Object {},
                  "_emitted": Object {
                    "block": -2,
                  },
                  "_events": Array [],
                  "_fastQueryDate": 0,
                  "_lastBlockNumber": -2,
                  "_network": Object {
                    "_defaultProvider": [Function],
                    "chainId": 3,
                    "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                    "name": "ropsten",
                  },
                  "_pollingInterval": 4000,
                  "apiAccessToken": null,
                  "connection": Object {
                    "url": "https://ropsten.infura.io/",
                  },
                  "ready": Promise {},
                },
                EtherscanProvider {
                  "_balances": Object {},
                  "_emitted": Object {
                    "block": -2,
                  },
                  "_events": Array [],
                  "_fastQueryDate": 0,
                  "_lastBlockNumber": -2,
                  "_network": Object {
                    "_defaultProvider": [Function],
                    "chainId": 3,
                    "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                    "name": "ropsten",
                  },
                  "_pollingInterval": 4000,
                  "apiKey": undefined,
                  "baseUrl": "https://api-ropsten.etherscan.io",
                  "ready": Promise {},
                },
              ],
              "ready": Promise {},
            },
            "walletApiEndpoint": [Function],
          }
    }
    currentWalletWithInfo={
        Immutable.Map {
            deviceId: "041ca8e96420e95a106e8c9bb3c9fb9e8c00d4b11cac562888c898000b5cec366c03a0f84574716fac6c7a7df47a925f0e30f5286546adf3179b5a08dc9d8e09da",
            address: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
            type: "lns",
            name: "lns",
            derivationPath: "m/44'/60'/0'/0",
            transactions: Immutable.Map {
                loading: false,
                error: null,
                transactions: Immutable.List [
                    Immutable.Map {
                        transfers: Immutable.Map {
                            single: "2111000000",
                            total: "3111000000",
                        },
                        created: "2018-12-17T01:59:03.718Z",
                        decimalAmount: "0.000000002111",
                        counterpartyAddress: "0x4231676a35483638796e2af8ed2af0a41b097524",
                        nonce: 21,
                        currency: "0x0000000000000000000000000000000000000000",
                        layer: "nahmii",
                        sender: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                    Immutable.Map {
                                        originId: "0",
                                        figure: Immutable.Map {
                                            currency: Immutable.Map {
                                                ct: "0x0000000000000000000000000000000000000000",
                                                id: "0",
                                            },
                                            amount: "4121100",
                                        },
                                    },
                                ],
                                single: Immutable.Map {
                                    currency: Immutable.Map {
                                        ct: "0x0000000000000000000000000000000000000000",
                                        id: "0",
                                    },
                                    amount: "2111000",
                                },
                            },
                            wallet: "0x4231676a35483638796e2af8ed2af0a41b097524",
                            nonce: 7,
                            balances: Immutable.Map {
                                current: "999995875778900",
                                previous: "999997988889900",
                            },
                        },
                        timestamp: "2018-12-17T01:59:03.776Z",
                        seals: Immutable.Map {
                            wallet: Immutable.Map {
                                hash: "0x57d9cf4ffc4b2aecce23d2e56083c7b437f5e105be74c1cd17d8522999b5d0be",
                                signature: Immutable.Map {
                                    s: "0x395b632dab03b34321c1aed7dcbac4a1b87582904d2898645b3ec90505c44348",
                                    r: "0x01cda7bddbc7c2194dd395aac73eaf1ca6760bfef83689c5a1240f936f0200d4",
                                    v: 28,
                                },
                            },
                            operator: Immutable.Map {
                                hash: "0x99c1a3a1cd8b15cdb969270f6e8f7fdce5b9c8377a00c38d800b9982c98eec5a",
                                signature: Immutable.Map {
                                    s: "0x129c9e071467ee98ddd799fa1ed7b3cbda11486955b9360afd22ce0ff4d91aab",
                                    r: "0x4d22165ff7382f998107a87e800a11581e7b99fa67ab613656706105157e5ab9",
                                    v: 28,
                                },
                            },
                        },
                        blockNumber: 4643058,
                        amount: "2111000000",
                        symbol: "ETH",
                        recipient: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                ],
                            },
                            wallet: "0x1c7429f62595097315289cebac1fdbda587ad512",
                            nonce: 4,
                            balances: Immutable.Map {
                                current: "10013111000000",
                                previous: "10011000000000",
                            },
                        },
                        type: "received",
                        updated: "2018-12-17T01:59:03.776Z",
                        id: "5c1702e78d9ea3000ea459d9",
                        operatorId: "0",
                        confirmed: true,
                    },
                    Immutable.Map {
                        decimalAmount: "0.0000000001",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780091,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x0000000000000000000000000000000000000000",
                        layer: "baseLayer",
                        sender: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        timestamp: "2018-08-06T02:32:00.000Z",
                        amount: "100000000",
                        symbol: "ETH",
                        recipient: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        type: "received",
                    },
                    Immutable.Map {
                        transfers: Immutable.Map {
                            single: "10000000000000000",
                            total: "10000000000000000",
                        },
                        created: "2018-11-16T22:40:54.951Z",
                        decimalAmount: "0.01",
                        counterpartyAddress: "0xc5768cdeda275fe5536147a3fbc8cfb6b0d8ac48",
                        nonce: 18,
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        layer: "nahmii",
                        sender: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                    Immutable.Map {
                                        originId: "0",
                                        figure: Immutable.Map {
                                            currency: Immutable.Map {
                                                ct: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                                                id: "0",
                                            },
                                            amount: "10000000000000",
                                        },
                                    },
                                ],
                                single: Immutable.Map {
                                    currency: Immutable.Map {
                                        ct: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                                        id: "0",
                                    },
                                    amount: "10000000000000",
                                },
                            },
                            wallet: "0x1c7429f62595097315289cebac1fdbda587ad512",
                            nonce: 3,
                            balances: Immutable.Map {
                                current: "89990000000000000",
                                previous: "100000000000000000",
                            },
                        },
                        timestamp: "2018-11-16T22:40:55.049Z",
                        seals: Immutable.Map {
                            wallet: Immutable.Map {
                                hash: "0x0b7d6d30e9665016246e6370e82579a35bc4d9c0cf88c65b38d538f7ad8ee828",
                                signature: Immutable.Map {
                                    s: "0x7d60c93b9037be6d880bbe86f258d0e371ad4015fc2528cf1312d924f9e76245",
                                    r: "0x9c11c2a5244a741f67837eb6efc1f12396c19d2490ff2bd872dbd9643a7c1013",
                                    v: 27,
                                },
                            },
                            operator: Immutable.Map {
                                hash: "0x92b0e8b3c705449eea1bce2e517468cec521e6451d4a7e6c4fe4c4efe7df6ab4",
                                signature: Immutable.Map {
                                    s: "0x09ad154d886899b36f15a2be68ddb61c15afe185acd498a9b6bb2577f317a942",
                                    r: "0x80d8f5e899f16c9a4abcc72d23399d4ddd3c08a29dae8233a46179ef54cc189c",
                                    v: 27,
                                },
                            },
                        },
                        blockNumber: 3780090,
                        amount: "10000000000000000",
                        symbol: "BOKKY",
                        recipient: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                ],
                            },
                            wallet: "0xc5768cdeda275fe5536147a3fbc8cfb6b0d8ac48",
                            nonce: 2,
                            balances: Immutable.Map {
                                current: "10000000000000000",
                                previous: "0",
                            },
                        },
                        type: "sent",
                        updated: "2018-11-16T22:40:55.049Z",
                        id: "5c16d4768d9ea3000ea45690",
                        operatorId: "0",
                        confirmed: true,
                    },
                    Immutable.Map {
                        decimalAmount: "0.000000000000000005",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780089,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        layer: "baseLayer",
                        sender: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        timestamp: "2018-08-06T02:32:00.000Z",
                        amount: "5",
                        symbol: "BOKKY",
                        recipient: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        type: "sent",
                    },
                ],
            },
            balances: Immutable.Map {
                baseLayer: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.198937",
                            currency: "0x0000000000000000000000000000000000000000",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.198937",
                                btc: "0.00198937",
                                usd: "81.962044",
                            },
                        },
                        Immutable.Map {
                            balance: "1.231288e-12",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "1.231288e-13",
                                btc: "1.231288e-15",
                                usd: "1.231288e-12",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1989370000001231288",
                        btc: "0.001989370000001231288",
                        usd: "81.962044000001231288",
                    },
                },
                nahmiiAvailable: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.113",
                        btc: "0.00113",
                        usd: "41.33",
                    },
                },
                nahmiiStaging: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1",
                        btc: "0.001",
                        usd: "41.2",
                    },
                },
                nahmiiStaged: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                    ],
                    total: Immutable.Map {
                        eth: "0",
                        btc: "0",
                        usd: "0",
                    },
                },
                nahmiiCombined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.2",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.2",
                                btc: "0.002",
                                usd: "82.4",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.213",
                        btc: "0.00213",
                        usd: "82.53",
                    },
                },
                combined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.398937",
                            currency: "0x0000000000000000000000000000000000000000",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.398937",
                                btc: "0.00398937",
                                usd: "164.362044",
                            },
                        },
                        Immutable.Map {
                            balance: "0.130000000001231288",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.0130000000001231288",
                                btc: "0.000130000000001231288",
                                usd: "0.130000000001231288",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.4119370000001231288",
                        btc: "0.004119370000001231288",
                        usd: "164.492044000001231288",
                    },
                },
            },
        }
    }
    depositStatus={
        Immutable.Map {
            depositingEth: false,
            approvingTokenDeposit: false,
            completingTokenDeposit: false,
            error: null,
        }
    }
    gasStatistics={
        Immutable.Map {
        }
    }
    goWalletDetails={[Function]}
    intl={
        Object {
            "formatMessage": [Function],
            "formatNumber": [Function],
          }
    }
    ledgerNanoSInfo={
        Immutable.Map {
            status: "connected",
            connected: true,
            addresses: Immutable.Map {
            },
            id: "ajlsdfkjas",
            confTxOnDevice: false,
        }
    }
    nahmiiDeposit={[Function]}
    prices={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    eth: 0.1,
                    btc: 0.001,
                    usd: 1,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x0000000000000000000000000000000000000000",
                    eth: 1,
                    btc: 0.01,
                    usd: 412,
                },
            ],
        }
    }
    supportedAssets={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    symbol: "My20",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    symbol: "HBT",
                    decimals: 15,
                    color: "0063A5",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    symbol: "SBT",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    symbol: "WETH",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    symbol: "BOKKY",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x0000000000000000000000000000000000000000",
                    symbol: "ETH",
                    decimals: 18,
                    color: "5C78E4",
                },
            ],
        }
    }
    trezorInfo={
        Immutable.Map {
            status: "disconnected",
            connected: false,
            addresses: Immutable.Map {
            },
            id: "ajlsdfkjas",
            confTxOnDevice: false,
        }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <div
        style={
                Object {
                        "display": "flex",
                        "flex": "1",
                        "flexWrap": "wrap",
                        "marginTop": "0.5rem",
                      }
        }
>
        <div
                style={
                        Object {
                                "flex": "1",
                                "marginBottom": "3rem",
                                "marginRight": "2rem",
                              }
                }
        >
                <Form__FlexForm>
                        <Form__FormItem
                                colon={false}
                                label={
                                        <Form__FormItemLabel>
                                                select_asset_to_deposit
                                        </Form__FormItemLabel>
                                }
                        >
                                <style__Image
                                        alt="logo"
                                        onError={[Function]}
                                        src="/public/images/assets/ETH.svg"
                                />
                                <Select
                                        defaultValue="ETH"
                                        onSelect={[Function]}
                                        style={
                                                Object {
                                                        "paddingLeft": "0.5rem",
                                                      }
                                        }
                                >
                                        <Option
                                                value="ETH"
                                        >
                                                ETH
                                        </Option>
                                        <Option
                                                value="BOKKY"
                                        >
                                                BOKKY
                                        </Option>
                                </Select>
                        </Form__FormItem>
                        <Form__FormItem
                                colon={false}
                                help={
                                        <HelperTextComponent
                                                left="$0.00"
                                                right="usd"
                                        />
                                }
                                label={
                                        <Form__FormItemLabel>
                                                enter_amount
                                        </Form__FormItemLabel>
                                }
                        >
                                <Input
                                        defaultValue="0"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        value="0"
                                />
                        </Form__FormItem>
                        <GasOptions
                                defaultGasLimit={600000}
                                defaultGasPrice={10}
                                defaultOption="average"
                                gasStatistics={undefined}
                                intl={
                                        Object {
                                                "formatMessage": [Function],
                                                "formatNumber": [Function],
                                              }
                                }
                                onChange={[Function]}
                        />
                        <style__DollarPrice>
                                1 ETH = 
                                <style__StyledNumericText
                                        type="currency"
                                        value="412"
                                />
                        </style__DollarPrice>
                </Form__FlexForm>
        </div>
        <div
                style={
                        Object {
                                "minWidth": "34rem",
                              }
                }
        >
                <Row
                        gutter={0}
                >
                        <style__StyledCol
                                span={12}
                        >
                                deposit
                        </style__StyledCol>
                </Row>
                <Row
                        gutter={0}
                >
                        <TransferDescriptionItem
                                main={
                                        <SelectableText>
                                                <NumericText
                                                        maxDecimalPlaces={18}
                                                        value="0"
                                                />
                                                 
                                                ETH
                                        </SelectableText>
                                }
                                subtitle={
                                        <NumericText
                                                type="currency"
                                                value="0"
                                        />
                                }
                        />
                </Row>
                <Row
                        gutter={0}
                >
                        <style__StyledCol
                                span={12}
                        >
                                <TooltipText
                                        details="max_base_layer_fee_explain"
                                >
                                        max_base_layer_fee
                                </TooltipText>
                        </style__StyledCol>
                </Row>
                <Row
                        gutter={0}
                >
                        <TransferDescriptionItem
                                main={
                                        <SelectableText>
                                                <NumericText
                                                        maxDecimalPlaces={18}
                                                        value="0.006"
                                                />
                                                 
                                                ETH
                                        </SelectableText>
                                }
                                subtitle={
                                        <NumericText
                                                type="currency"
                                                value="2.472"
                                        />
                                }
                        />
                </Row>
                <Row
                        gutter={0}
                >
                        <style__StyledCol
                                span={12}
                        >
                                base_layer
                                 ETH 
                                balance_before
                        </style__StyledCol>
                </Row>
                <Row
                        gutter={0}
                >
                        <TransferDescriptionItem
                                main={
                                        <SelectableText>
                                                <NumericText
                                                        maxDecimalPlaces={18}
                                                        value="0.198937"
                                                />
                                                 
                                                ETH
                                        </SelectableText>
                                }
                                subtitle={
                                        <NumericText
                                                type="currency"
                                                value="81.962044"
                                        />
                                }
                        />
                </Row>
                <Row
                        gutter={0}
                >
                        <style__StyledCol
                                span={12}
                        >
                                base_layer
                                 ETH 
                                balance_after
                        </style__StyledCol>
                </Row>
                <Row
                        gutter={0}
                >
                        <TransferDescriptionItem
                                main={
                                        <SelectableText>
                                                <NumericText
                                                        maxDecimalPlaces={18}
                                                        value="0.192937"
                                                />
                                                 
                                                ETH
                                        </SelectableText>
                                }
                                subtitle={
                                        <NumericText
                                                type="currency"
                                                value="79.490044"
                                        />
                                }
                        />
                </Row>
                <div>
                        <Row
                                gutter={0}
                        >
                                <style__StyledCol
                                        span={12}
                                >
                                        nahmii_available
                                         ETH 
                                        balance_before
                                </style__StyledCol>
                        </Row>
                        <Row
                                gutter={0}
                        >
                                <TransferDescriptionItem
                                        main={
                                                <SelectableText>
                                                        <NumericText
                                                                maxDecimalPlaces={18}
                                                                value="0.1"
                                                        />
                                                         
                                                        ETH
                                                </SelectableText>
                                        }
                                        subtitle={
                                                <NumericText
                                                        type="currency"
                                                        value="41.2"
                                                />
                                        }
                                />
                        </Row>
                        <Row
                                gutter={0}
                        >
                                <style__StyledCol
                                        span={12}
                                >
                                        nahmii_available
                                         ETH 
                                        balance_after
                                </style__StyledCol>
                        </Row>
                        <Row
                                gutter={0}
                        >
                                <TransferDescriptionItem
                                        main={
                                                <SelectableText>
                                                        <NumericText
                                                                maxDecimalPlaces={18}
                                                                value="0.1"
                                                        />
                                                         
                                                        ETH
                                                </SelectableText>
                                        }
                                        subtitle={
                                                <NumericText
                                                        type="currency"
                                                        value="41.2"
                                                />
                                        }
                                />
                        </Row>
                </div>
                <Row
                        gutter={0}
                >
                        <style__HWPromptWrapper>
                                <Connect(HWPromptContainer) />
                        </style__HWPromptWrapper>
                        <div
                                style={
                                        Object {
                                                "width": "fit-content",
                                              }
                                }
                        >
                                <style__StyledButton
                                        disabled={true}
                                        onClick={[Function]}
                                        type="primary"
                                >
                                        <span>
                                                deposit
                                        </span>
                                </style__StyledButton>
                        </div>
                </Row>
                <SectionHeading
                        style={
                                Object {
                                        "marginTop": "2rem",
                                        "maxWidth": "25rem",
                                      }
                        }
                >
                        deposits_note
                </SectionHeading>
        </div>
</div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            style={
                        Object {
                                    "flex": "1",
                                    "marginBottom": "3rem",
                                    "marginRight": "2rem",
                                  }
            }
>
            <Form__FlexForm>
                        <Form__FormItem
                                    colon={false}
                                    label={
                                                <Form__FormItemLabel>
                                                            select_asset_to_deposit
                                                </Form__FormItemLabel>
                                    }
                        >
                                    <style__Image
                                                alt="logo"
                                                onError={[Function]}
                                                src="/public/images/assets/ETH.svg"
                                    />
                                    <Select
                                                defaultValue="ETH"
                                                onSelect={[Function]}
                                                style={
                                                            Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                                                }
                                    >
                                                <Option
                                                            value="ETH"
                                                >
                                                            ETH
                                                </Option>
                                                <Option
                                                            value="BOKKY"
                                                >
                                                            BOKKY
                                                </Option>
                                    </Select>
                        </Form__FormItem>
                        <Form__FormItem
                                    colon={false}
                                    help={
                                                <HelperTextComponent
                                                            left="$0.00"
                                                            right="usd"
                                                />
                                    }
                                    label={
                                                <Form__FormItemLabel>
                                                            enter_amount
                                                </Form__FormItemLabel>
                                    }
                        >
                                    <Input
                                                defaultValue="0"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value="0"
                                    />
                        </Form__FormItem>
                        <GasOptions
                                    defaultGasLimit={600000}
                                    defaultGasPrice={10}
                                    defaultOption="average"
                                    gasStatistics={undefined}
                                    intl={
                                                Object {
                                                            "formatMessage": [Function],
                                                            "formatNumber": [Function],
                                                          }
                                    }
                                    onChange={[Function]}
                        />
                        <style__DollarPrice>
                                    1 ETH = 
                                    <style__StyledNumericText
                                                type="currency"
                                                value="412"
                                    />
                        </style__DollarPrice>
            </Form__FlexForm>
</div>,
          <div
            style={
                        Object {
                                    "minWidth": "34rem",
                                  }
            }
>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    deposit
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main={
                                                <SelectableText>
                                                            <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0"
                                                            />
                                                             
                                                            ETH
                                                </SelectableText>
                                    }
                                    subtitle={
                                                <NumericText
                                                            type="currency"
                                                            value="0"
                                                />
                                    }
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    <TooltipText
                                                details="max_base_layer_fee_explain"
                                    >
                                                max_base_layer_fee
                                    </TooltipText>
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main={
                                                <SelectableText>
                                                            <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.006"
                                                            />
                                                             
                                                            ETH
                                                </SelectableText>
                                    }
                                    subtitle={
                                                <NumericText
                                                            type="currency"
                                                            value="2.472"
                                                />
                                    }
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    base_layer
                                     ETH 
                                    balance_before
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main={
                                                <SelectableText>
                                                            <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.198937"
                                                            />
                                                             
                                                            ETH
                                                </SelectableText>
                                    }
                                    subtitle={
                                                <NumericText
                                                            type="currency"
                                                            value="81.962044"
                                                />
                                    }
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    base_layer
                                     ETH 
                                    balance_after
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main={
                                                <SelectableText>
                                                            <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.192937"
                                                            />
                                                             
                                                            ETH
                                                </SelectableText>
                                    }
                                    subtitle={
                                                <NumericText
                                                            type="currency"
                                                            value="79.490044"
                                                />
                                    }
                        />
            </Row>
            <div>
                        <Row
                                    gutter={0}
                        >
                                    <style__StyledCol
                                                span={12}
                                    >
                                                nahmii_available
                                                 ETH 
                                                balance_before
                                    </style__StyledCol>
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <TransferDescriptionItem
                                                main={
                                                            <SelectableText>
                                                                        <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.1"
                                                                        />
                                                                         
                                                                        ETH
                                                            </SelectableText>
                                                }
                                                subtitle={
                                                            <NumericText
                                                                        type="currency"
                                                                        value="41.2"
                                                            />
                                                }
                                    />
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <style__StyledCol
                                                span={12}
                                    >
                                                nahmii_available
                                                 ETH 
                                                balance_after
                                    </style__StyledCol>
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <TransferDescriptionItem
                                                main={
                                                            <SelectableText>
                                                                        <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.1"
                                                                        />
                                                                         
                                                                        ETH
                                                            </SelectableText>
                                                }
                                                subtitle={
                                                            <NumericText
                                                                        type="currency"
                                                                        value="41.2"
                                                            />
                                                }
                                    />
                        </Row>
            </div>
            <Row
                        gutter={0}
            >
                        <style__HWPromptWrapper>
                                    <Connect(HWPromptContainer) />
                        </style__HWPromptWrapper>
                        <div
                                    style={
                                                Object {
                                                            "width": "fit-content",
                                                          }
                                    }
                        >
                                    <style__StyledButton
                                                disabled={true}
                                                onClick={[Function]}
                                                type="primary"
                                    >
                                                <span>
                                                            deposit
                                                </span>
                                    </style__StyledButton>
                        </div>
            </Row>
            <SectionHeading
                        style={
                                    Object {
                                                "marginTop": "2rem",
                                                "maxWidth": "25rem",
                                              }
                        }
            >
                        deposits_note
            </SectionHeading>
</div>,
        ],
        "style": Object {
          "display": "flex",
          "flex": "1",
          "flexWrap": "wrap",
          "marginTop": "0.5rem",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Form__FlexForm>
              <Form__FormItem
                            colon={false}
                            label={
                                          <Form__FormItemLabel>
                                                        select_asset_to_deposit
                                          </Form__FormItemLabel>
                            }
              >
                            <style__Image
                                          alt="logo"
                                          onError={[Function]}
                                          src="/public/images/assets/ETH.svg"
                            />
                            <Select
                                          defaultValue="ETH"
                                          onSelect={[Function]}
                                          style={
                                                        Object {
                                                                      "paddingLeft": "0.5rem",
                                                                    }
                                          }
                            >
                                          <Option
                                                        value="ETH"
                                          >
                                                        ETH
                                          </Option>
                                          <Option
                                                        value="BOKKY"
                                          >
                                                        BOKKY
                                          </Option>
                            </Select>
              </Form__FormItem>
              <Form__FormItem
                            colon={false}
                            help={
                                          <HelperTextComponent
                                                        left="$0.00"
                                                        right="usd"
                                          />
                            }
                            label={
                                          <Form__FormItemLabel>
                                                        enter_amount
                                          </Form__FormItemLabel>
                            }
              >
                            <Input
                                          defaultValue="0"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          value="0"
                            />
              </Form__FormItem>
              <GasOptions
                            defaultGasLimit={600000}
                            defaultGasPrice={10}
                            defaultOption="average"
                            gasStatistics={undefined}
                            intl={
                                          Object {
                                                        "formatMessage": [Function],
                                                        "formatNumber": [Function],
                                                      }
                            }
                            onChange={[Function]}
              />
              <style__DollarPrice>
                            1 ETH = 
                            <style__StyledNumericText
                                          type="currency"
                                          value="412"
                            />
              </style__DollarPrice>
</Form__FlexForm>,
            "style": Object {
              "flex": "1",
              "marginBottom": "3rem",
              "marginRight": "2rem",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Form__FormItem
                  colon={false}
                  label={
                                    <Form__FormItemLabel>
                                                      select_asset_to_deposit
                                    </Form__FormItemLabel>
                  }
>
                  <style__Image
                                    alt="logo"
                                    onError={[Function]}
                                    src="/public/images/assets/ETH.svg"
                  />
                  <Select
                                    defaultValue="ETH"
                                    onSelect={[Function]}
                                    style={
                                                      Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                                    }
                  >
                                    <Option
                                                      value="ETH"
                                    >
                                                      ETH
                                    </Option>
                                    <Option
                                                      value="BOKKY"
                                    >
                                                      BOKKY
                                    </Option>
                  </Select>
</Form__FormItem>,
                <Form__FormItem
                  colon={false}
                  help={
                                    <HelperTextComponent
                                                      left="$0.00"
                                                      right="usd"
                                    />
                  }
                  label={
                                    <Form__FormItemLabel>
                                                      enter_amount
                                    </Form__FormItemLabel>
                  }
>
                  <Input
                                    defaultValue="0"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    value="0"
                  />
</Form__FormItem>,
                <GasOptions
                  defaultGasLimit={600000}
                  defaultGasPrice={10}
                  defaultOption="average"
                  gasStatistics={undefined}
                  intl={
                                    Object {
                                                      "formatMessage": [Function],
                                                      "formatNumber": [Function],
                                                    }
                  }
                  onChange={[Function]}
/>,
                <style__DollarPrice>
                  1 ETH = 
                  <style__StyledNumericText
                                    type="currency"
                                    value="412"
                  />
</style__DollarPrice>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <style__Image
                      alt="logo"
                      onError={[Function]}
                      src="/public/images/assets/ETH.svg"
/>,
                    <Select
                      defaultValue="ETH"
                      onSelect={[Function]}
                      style={
                                            Object {
                                                                  "paddingLeft": "0.5rem",
                                                                }
                      }
>
                      <Option
                                            value="ETH"
                      >
                                            ETH
                      </Option>
                      <Option
                                            value="BOKKY"
                      >
                                            BOKKY
                      </Option>
</Select>,
                  ],
                  "colon": false,
                  "label": <Form__FormItemLabel>
                    select_asset_to_deposit
</Form__FormItemLabel>,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "alt": "logo",
                      "onError": [Function],
                      "src": "/public/images/assets/ETH.svg",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <Option
                          value="ETH"
>
                          ETH
</Option>,
                        <Option
                          value="BOKKY"
>
                          BOKKY
</Option>,
                      ],
                      "defaultValue": "ETH",
                      "onSelect": [Function],
                      "style": Object {
                        "paddingLeft": "0.5rem",
                      },
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": "ETH",
                        "nodeType": "class",
                        "props": Object {
                          "children": "ETH",
                          "value": "ETH",
                        },
                        "ref": null,
                        "rendered": "ETH",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": "BOKKY",
                        "nodeType": "class",
                        "props": Object {
                          "children": "BOKKY",
                          "value": "BOKKY",
                        },
                        "ref": null,
                        "rendered": "BOKKY",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Input
                    defaultValue="0"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    value="0"
/>,
                  "colon": false,
                  "help": <HelperTextComponent
                    left="$0.00"
                    right="usd"
/>,
                  "label": <Form__FormItemLabel>
                    enter_amount
</Form__FormItemLabel>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "defaultValue": "0",
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "0",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "defaultGasLimit": 600000,
                  "defaultGasPrice": 10,
                  "defaultOption": "average",
                  "gasStatistics": undefined,
                  "intl": Object {
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                  },
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "1 ETH = ",
                    <style__StyledNumericText
                      type="currency"
                      value="412"
/>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "1 ETH = ",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "type": "currency",
                      "value": "412",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                deposit
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main={
                                                <SelectableText>
                                                                <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0"
                                                                />
                                                                 
                                                                ETH
                                                </SelectableText>
                                }
                                subtitle={
                                                <NumericText
                                                                type="currency"
                                                                value="0"
                                                />
                                }
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                <TooltipText
                                                details="max_base_layer_fee_explain"
                                >
                                                max_base_layer_fee
                                </TooltipText>
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main={
                                                <SelectableText>
                                                                <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.006"
                                                                />
                                                                 
                                                                ETH
                                                </SelectableText>
                                }
                                subtitle={
                                                <NumericText
                                                                type="currency"
                                                                value="2.472"
                                                />
                                }
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                base_layer
                                 ETH 
                                balance_before
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main={
                                                <SelectableText>
                                                                <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.198937"
                                                                />
                                                                 
                                                                ETH
                                                </SelectableText>
                                }
                                subtitle={
                                                <NumericText
                                                                type="currency"
                                                                value="81.962044"
                                                />
                                }
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                base_layer
                                 ETH 
                                balance_after
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main={
                                                <SelectableText>
                                                                <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.192937"
                                                                />
                                                                 
                                                                ETH
                                                </SelectableText>
                                }
                                subtitle={
                                                <NumericText
                                                                type="currency"
                                                                value="79.490044"
                                                />
                                }
                />
</Row>,
              <div>
                <Row
                                gutter={0}
                >
                                <style__StyledCol
                                                span={12}
                                >
                                                nahmii_available
                                                 ETH 
                                                balance_before
                                </style__StyledCol>
                </Row>
                <Row
                                gutter={0}
                >
                                <TransferDescriptionItem
                                                main={
                                                                <SelectableText>
                                                                                <NumericText
                                                                                                maxDecimalPlaces={18}
                                                                                                value="0.1"
                                                                                />
                                                                                 
                                                                                ETH
                                                                </SelectableText>
                                                }
                                                subtitle={
                                                                <NumericText
                                                                                type="currency"
                                                                                value="41.2"
                                                                />
                                                }
                                />
                </Row>
                <Row
                                gutter={0}
                >
                                <style__StyledCol
                                                span={12}
                                >
                                                nahmii_available
                                                 ETH 
                                                balance_after
                                </style__StyledCol>
                </Row>
                <Row
                                gutter={0}
                >
                                <TransferDescriptionItem
                                                main={
                                                                <SelectableText>
                                                                                <NumericText
                                                                                                maxDecimalPlaces={18}
                                                                                                value="0.1"
                                                                                />
                                                                                 
                                                                                ETH
                                                                </SelectableText>
                                                }
                                                subtitle={
                                                                <NumericText
                                                                                type="currency"
                                                                                value="41.2"
                                                                />
                                                }
                                />
                </Row>
</div>,
              false,
              <Row
                gutter={0}
>
                <style__HWPromptWrapper>
                                <Connect(HWPromptContainer) />
                </style__HWPromptWrapper>
                <div
                                style={
                                                Object {
                                                                "width": "fit-content",
                                                              }
                                }
                >
                                <style__StyledButton
                                                disabled={true}
                                                onClick={[Function]}
                                                type="primary"
                                >
                                                <span>
                                                                deposit
                                                </span>
                                </style__StyledButton>
                </div>
</Row>,
              <SectionHeading
                style={
                                Object {
                                                "marginTop": "2rem",
                                                "maxWidth": "25rem",
                                              }
                }
>
                deposits_note
</SectionHeading>,
            ],
            "style": Object {
              "minWidth": "34rem",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  deposit
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "deposit",
                  "span": 12,
                },
                "ref": null,
                "rendered": "deposit",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main={
                                    <SelectableText>
                                                      <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0"
                                                      />
                                                       
                                                      ETH
                                    </SelectableText>
                  }
                  subtitle={
                                    <NumericText
                                                      type="currency"
                                                      value="0"
                                    />
                  }
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": <SelectableText>
                    <NumericText
                                        maxDecimalPlaces={18}
                                        value="0"
                    />
                     
                    ETH
</SelectableText>,
                  "subtitle": <NumericText
                    type="currency"
                    value="0"
/>,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  <TooltipText
                                    details="max_base_layer_fee_explain"
                  >
                                    max_base_layer_fee
                  </TooltipText>
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TooltipText
                    details="max_base_layer_fee_explain"
>
                    max_base_layer_fee
</TooltipText>,
                  "span": 12,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "max_base_layer_fee",
                    "details": "max_base_layer_fee_explain",
                  },
                  "ref": null,
                  "rendered": "max_base_layer_fee",
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main={
                                    <SelectableText>
                                                      <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.006"
                                                      />
                                                       
                                                      ETH
                                    </SelectableText>
                  }
                  subtitle={
                                    <NumericText
                                                      type="currency"
                                                      value="2.472"
                                    />
                  }
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": <SelectableText>
                    <NumericText
                                        maxDecimalPlaces={18}
                                        value="0.006"
                    />
                     
                    ETH
</SelectableText>,
                  "subtitle": <NumericText
                    type="currency"
                    value="2.472"
/>,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  base_layer
                   ETH 
                  balance_before
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "base_layer",
                    " ETH ",
                    "balance_before",
                  ],
                  "span": 12,
                },
                "ref": null,
                "rendered": Array [
                  "base_layer",
                  " ETH ",
                  "balance_before",
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main={
                                    <SelectableText>
                                                      <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.198937"
                                                      />
                                                       
                                                      ETH
                                    </SelectableText>
                  }
                  subtitle={
                                    <NumericText
                                                      type="currency"
                                                      value="81.962044"
                                    />
                  }
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": <SelectableText>
                    <NumericText
                                        maxDecimalPlaces={18}
                                        value="0.198937"
                    />
                     
                    ETH
</SelectableText>,
                  "subtitle": <NumericText
                    type="currency"
                    value="81.962044"
/>,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  base_layer
                   ETH 
                  balance_after
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "base_layer",
                    " ETH ",
                    "balance_after",
                  ],
                  "span": 12,
                },
                "ref": null,
                "rendered": Array [
                  "base_layer",
                  " ETH ",
                  "balance_after",
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main={
                                    <SelectableText>
                                                      <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.192937"
                                                      />
                                                       
                                                      ETH
                                    </SelectableText>
                  }
                  subtitle={
                                    <NumericText
                                                      type="currency"
                                                      value="79.490044"
                                    />
                  }
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": <SelectableText>
                    <NumericText
                                        maxDecimalPlaces={18}
                                        value="0.192937"
                    />
                     
                    ETH
</SelectableText>,
                  "subtitle": <NumericText
                    type="currency"
                    value="79.490044"
/>,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Row
                    gutter={0}
>
                    <style__StyledCol
                                        span={12}
                    >
                                        nahmii_available
                                         ETH 
                                        balance_before
                    </style__StyledCol>
</Row>,
                  <Row
                    gutter={0}
>
                    <TransferDescriptionItem
                                        main={
                                                            <SelectableText>
                                                                                <NumericText
                                                                                                    maxDecimalPlaces={18}
                                                                                                    value="0.1"
                                                                                />
                                                                                 
                                                                                ETH
                                                            </SelectableText>
                                        }
                                        subtitle={
                                                            <NumericText
                                                                                type="currency"
                                                                                value="41.2"
                                                            />
                                        }
                    />
</Row>,
                  <Row
                    gutter={0}
>
                    <style__StyledCol
                                        span={12}
                    >
                                        nahmii_available
                                         ETH 
                                        balance_after
                    </style__StyledCol>
</Row>,
                  <Row
                    gutter={0}
>
                    <TransferDescriptionItem
                                        main={
                                                            <SelectableText>
                                                                                <NumericText
                                                                                                    maxDecimalPlaces={18}
                                                                                                    value="0.1"
                                                                                />
                                                                                 
                                                                                ETH
                                                            </SelectableText>
                                        }
                                        subtitle={
                                                            <NumericText
                                                                                type="currency"
                                                                                value="41.2"
                                                            />
                                        }
                    />
</Row>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <style__StyledCol
                      span={12}
>
                      nahmii_available
                       ETH 
                      balance_before
</style__StyledCol>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "nahmii_available",
                        " ETH ",
                        "balance_before",
                      ],
                      "span": 12,
                    },
                    "ref": null,
                    "rendered": Array [
                      "nahmii_available",
                      " ETH ",
                      "balance_before",
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TransferDescriptionItem
                      main={
                                            <SelectableText>
                                                                  <NumericText
                                                                                        maxDecimalPlaces={18}
                                                                                        value="0.1"
                                                                  />
                                                                   
                                                                  ETH
                                            </SelectableText>
                      }
                      subtitle={
                                            <NumericText
                                                                  type="currency"
                                                                  value="41.2"
                                            />
                      }
/>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "main": <SelectableText>
                        <NumericText
                                                maxDecimalPlaces={18}
                                                value="0.1"
                        />
                         
                        ETH
</SelectableText>,
                      "subtitle": <NumericText
                        type="currency"
                        value="41.2"
/>,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <style__StyledCol
                      span={12}
>
                      nahmii_available
                       ETH 
                      balance_after
</style__StyledCol>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "nahmii_available",
                        " ETH ",
                        "balance_after",
                      ],
                      "span": 12,
                    },
                    "ref": null,
                    "rendered": Array [
                      "nahmii_available",
                      " ETH ",
                      "balance_after",
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TransferDescriptionItem
                      main={
                                            <SelectableText>
                                                                  <NumericText
                                                                                        maxDecimalPlaces={18}
                                                                                        value="0.1"
                                                                  />
                                                                   
                                                                  ETH
                                            </SelectableText>
                      }
                      subtitle={
                                            <NumericText
                                                                  type="currency"
                                                                  value="41.2"
                                            />
                      }
/>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "main": <SelectableText>
                        <NumericText
                                                maxDecimalPlaces={18}
                                                value="0.1"
                        />
                         
                        ETH
</SelectableText>,
                      "subtitle": <NumericText
                        type="currency"
                        value="41.2"
/>,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <style__HWPromptWrapper>
                    <Connect(HWPromptContainer) />
</style__HWPromptWrapper>,
                  <div
                    style={
                                        Object {
                                                            "width": "fit-content",
                                                          }
                    }
>
                    <style__StyledButton
                                        disabled={true}
                                        onClick={[Function]}
                                        type="primary"
                    >
                                        <span>
                                                            deposit
                                        </span>
                    </style__StyledButton>
</div>,
                ],
                "gutter": 0,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Connect(HWPromptContainer) />,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <style__StyledButton
                      disabled={true}
                      onClick={[Function]}
                      type="primary"
>
                      <span>
                                            deposit
                      </span>
</style__StyledButton>,
                    "style": Object {
                      "width": "fit-content",
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <span>
                        deposit
</span>,
                      "disabled": true,
                      "onClick": [Function],
                      "type": "primary",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "deposit",
                      },
                      "ref": null,
                      "rendered": "deposit",
                      "type": "span",
                    },
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "deposits_note",
                "style": Object {
                  "marginTop": "2rem",
                  "maxWidth": "25rem",
                },
              },
              "ref": null,
              "rendered": "deposits_note",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          style={
                    Object {
                              "display": "flex",
                              "flex": "1",
                              "flexWrap": "wrap",
                              "marginTop": "0.5rem",
                            }
          }
>
          <div
                    style={
                              Object {
                                        "flex": "1",
                                        "marginBottom": "3rem",
                                        "marginRight": "2rem",
                                      }
                    }
          >
                    <Form__FlexForm>
                              <Form__FormItem
                                        colon={false}
                                        label={
                                                  <Form__FormItemLabel>
                                                            select_asset_to_deposit
                                                  </Form__FormItemLabel>
                                        }
                              >
                                        <style__Image
                                                  alt="logo"
                                                  onError={[Function]}
                                                  src="/public/images/assets/ETH.svg"
                                        />
                                        <Select
                                                  defaultValue="ETH"
                                                  onSelect={[Function]}
                                                  style={
                                                            Object {
                                                                      "paddingLeft": "0.5rem",
                                                                    }
                                                  }
                                        >
                                                  <Option
                                                            value="ETH"
                                                  >
                                                            ETH
                                                  </Option>
                                                  <Option
                                                            value="BOKKY"
                                                  >
                                                            BOKKY
                                                  </Option>
                                        </Select>
                              </Form__FormItem>
                              <Form__FormItem
                                        colon={false}
                                        help={
                                                  <HelperTextComponent
                                                            left="$0.00"
                                                            right="usd"
                                                  />
                                        }
                                        label={
                                                  <Form__FormItemLabel>
                                                            enter_amount
                                                  </Form__FormItemLabel>
                                        }
                              >
                                        <Input
                                                  defaultValue="0"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  value="0"
                                        />
                              </Form__FormItem>
                              <GasOptions
                                        defaultGasLimit={600000}
                                        defaultGasPrice={10}
                                        defaultOption="average"
                                        gasStatistics={undefined}
                                        intl={
                                                  Object {
                                                            "formatMessage": [Function],
                                                            "formatNumber": [Function],
                                                          }
                                        }
                                        onChange={[Function]}
                              />
                              <style__DollarPrice>
                                        1 ETH = 
                                        <style__StyledNumericText
                                                  type="currency"
                                                  value="412"
                                        />
                              </style__DollarPrice>
                    </Form__FlexForm>
          </div>
          <div
                    style={
                              Object {
                                        "minWidth": "34rem",
                                      }
                    }
          >
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        deposit
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main={
                                                  <SelectableText>
                                                            <NumericText
                                                                      maxDecimalPlaces={18}
                                                                      value="0"
                                                            />
                                                             
                                                            ETH
                                                  </SelectableText>
                                        }
                                        subtitle={
                                                  <NumericText
                                                            type="currency"
                                                            value="0"
                                                  />
                                        }
                              />
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        <TooltipText
                                                  details="max_base_layer_fee_explain"
                                        >
                                                  max_base_layer_fee
                                        </TooltipText>
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main={
                                                  <SelectableText>
                                                            <NumericText
                                                                      maxDecimalPlaces={18}
                                                                      value="0.006"
                                                            />
                                                             
                                                            ETH
                                                  </SelectableText>
                                        }
                                        subtitle={
                                                  <NumericText
                                                            type="currency"
                                                            value="2.472"
                                                  />
                                        }
                              />
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        base_layer
                                         ETH 
                                        balance_before
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main={
                                                  <SelectableText>
                                                            <NumericText
                                                                      maxDecimalPlaces={18}
                                                                      value="0.198937"
                                                            />
                                                             
                                                            ETH
                                                  </SelectableText>
                                        }
                                        subtitle={
                                                  <NumericText
                                                            type="currency"
                                                            value="81.962044"
                                                  />
                                        }
                              />
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        base_layer
                                         ETH 
                                        balance_after
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main={
                                                  <SelectableText>
                                                            <NumericText
                                                                      maxDecimalPlaces={18}
                                                                      value="0.192937"
                                                            />
                                                             
                                                            ETH
                                                  </SelectableText>
                                        }
                                        subtitle={
                                                  <NumericText
                                                            type="currency"
                                                            value="79.490044"
                                                  />
                                        }
                              />
                    </Row>
                    <div>
                              <Row
                                        gutter={0}
                              >
                                        <style__StyledCol
                                                  span={12}
                                        >
                                                  nahmii_available
                                                   ETH 
                                                  balance_before
                                        </style__StyledCol>
                              </Row>
                              <Row
                                        gutter={0}
                              >
                                        <TransferDescriptionItem
                                                  main={
                                                            <SelectableText>
                                                                      <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.1"
                                                                      />
                                                                       
                                                                      ETH
                                                            </SelectableText>
                                                  }
                                                  subtitle={
                                                            <NumericText
                                                                      type="currency"
                                                                      value="41.2"
                                                            />
                                                  }
                                        />
                              </Row>
                              <Row
                                        gutter={0}
                              >
                                        <style__StyledCol
                                                  span={12}
                                        >
                                                  nahmii_available
                                                   ETH 
                                                  balance_after
                                        </style__StyledCol>
                              </Row>
                              <Row
                                        gutter={0}
                              >
                                        <TransferDescriptionItem
                                                  main={
                                                            <SelectableText>
                                                                      <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.1"
                                                                      />
                                                                       
                                                                      ETH
                                                            </SelectableText>
                                                  }
                                                  subtitle={
                                                            <NumericText
                                                                      type="currency"
                                                                      value="41.2"
                                                            />
                                                  }
                                        />
                              </Row>
                    </div>
                    <Row
                              gutter={0}
                    >
                              <style__HWPromptWrapper>
                                        <Connect(HWPromptContainer) />
                              </style__HWPromptWrapper>
                              <div
                                        style={
                                                  Object {
                                                            "width": "fit-content",
                                                          }
                                        }
                              >
                                        <style__StyledButton
                                                  disabled={true}
                                                  onClick={[Function]}
                                                  type="primary"
                                        >
                                                  <span>
                                                            deposit
                                                  </span>
                                        </style__StyledButton>
                              </div>
                    </Row>
                    <SectionHeading
                              style={
                                        Object {
                                                  "marginTop": "2rem",
                                                  "maxWidth": "25rem",
                                                }
                              }
                    >
                              deposits_note
                    </SectionHeading>
          </div>
</div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              style={
                            Object {
                                          "flex": "1",
                                          "marginBottom": "3rem",
                                          "marginRight": "2rem",
                                        }
              }
>
              <Form__FlexForm>
                            <Form__FormItem
                                          colon={false}
                                          label={
                                                        <Form__FormItemLabel>
                                                                      select_asset_to_deposit
                                                        </Form__FormItemLabel>
                                          }
                            >
                                          <style__Image
                                                        alt="logo"
                                                        onError={[Function]}
                                                        src="/public/images/assets/ETH.svg"
                                          />
                                          <Select
                                                        defaultValue="ETH"
                                                        onSelect={[Function]}
                                                        style={
                                                                      Object {
                                                                                    "paddingLeft": "0.5rem",
                                                                                  }
                                                        }
                                          >
                                                        <Option
                                                                      value="ETH"
                                                        >
                                                                      ETH
                                                        </Option>
                                                        <Option
                                                                      value="BOKKY"
                                                        >
                                                                      BOKKY
                                                        </Option>
                                          </Select>
                            </Form__FormItem>
                            <Form__FormItem
                                          colon={false}
                                          help={
                                                        <HelperTextComponent
                                                                      left="$0.00"
                                                                      right="usd"
                                                        />
                                          }
                                          label={
                                                        <Form__FormItemLabel>
                                                                      enter_amount
                                                        </Form__FormItemLabel>
                                          }
                            >
                                          <Input
                                                        defaultValue="0"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        value="0"
                                          />
                            </Form__FormItem>
                            <GasOptions
                                          defaultGasLimit={600000}
                                          defaultGasPrice={10}
                                          defaultOption="average"
                                          gasStatistics={undefined}
                                          intl={
                                                        Object {
                                                                      "formatMessage": [Function],
                                                                      "formatNumber": [Function],
                                                                    }
                                          }
                                          onChange={[Function]}
                            />
                            <style__DollarPrice>
                                          1 ETH = 
                                          <style__StyledNumericText
                                                        type="currency"
                                                        value="412"
                                          />
                            </style__DollarPrice>
              </Form__FlexForm>
</div>,
            <div
              style={
                            Object {
                                          "minWidth": "34rem",
                                        }
              }
>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          deposit
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main={
                                                        <SelectableText>
                                                                      <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0"
                                                                      />
                                                                       
                                                                      ETH
                                                        </SelectableText>
                                          }
                                          subtitle={
                                                        <NumericText
                                                                      type="currency"
                                                                      value="0"
                                                        />
                                          }
                            />
              </Row>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          <TooltipText
                                                        details="max_base_layer_fee_explain"
                                          >
                                                        max_base_layer_fee
                                          </TooltipText>
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main={
                                                        <SelectableText>
                                                                      <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.006"
                                                                      />
                                                                       
                                                                      ETH
                                                        </SelectableText>
                                          }
                                          subtitle={
                                                        <NumericText
                                                                      type="currency"
                                                                      value="2.472"
                                                        />
                                          }
                            />
              </Row>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          base_layer
                                           ETH 
                                          balance_before
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main={
                                                        <SelectableText>
                                                                      <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.198937"
                                                                      />
                                                                       
                                                                      ETH
                                                        </SelectableText>
                                          }
                                          subtitle={
                                                        <NumericText
                                                                      type="currency"
                                                                      value="81.962044"
                                                        />
                                          }
                            />
              </Row>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          base_layer
                                           ETH 
                                          balance_after
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main={
                                                        <SelectableText>
                                                                      <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.192937"
                                                                      />
                                                                       
                                                                      ETH
                                                        </SelectableText>
                                          }
                                          subtitle={
                                                        <NumericText
                                                                      type="currency"
                                                                      value="79.490044"
                                                        />
                                          }
                            />
              </Row>
              <div>
                            <Row
                                          gutter={0}
                            >
                                          <style__StyledCol
                                                        span={12}
                                          >
                                                        nahmii_available
                                                         ETH 
                                                        balance_before
                                          </style__StyledCol>
                            </Row>
                            <Row
                                          gutter={0}
                            >
                                          <TransferDescriptionItem
                                                        main={
                                                                      <SelectableText>
                                                                                    <NumericText
                                                                                                  maxDecimalPlaces={18}
                                                                                                  value="0.1"
                                                                                    />
                                                                                     
                                                                                    ETH
                                                                      </SelectableText>
                                                        }
                                                        subtitle={
                                                                      <NumericText
                                                                                    type="currency"
                                                                                    value="41.2"
                                                                      />
                                                        }
                                          />
                            </Row>
                            <Row
                                          gutter={0}
                            >
                                          <style__StyledCol
                                                        span={12}
                                          >
                                                        nahmii_available
                                                         ETH 
                                                        balance_after
                                          </style__StyledCol>
                            </Row>
                            <Row
                                          gutter={0}
                            >
                                          <TransferDescriptionItem
                                                        main={
                                                                      <SelectableText>
                                                                                    <NumericText
                                                                                                  maxDecimalPlaces={18}
                                                                                                  value="0.1"
                                                                                    />
                                                                                     
                                                                                    ETH
                                                                      </SelectableText>
                                                        }
                                                        subtitle={
                                                                      <NumericText
                                                                                    type="currency"
                                                                                    value="41.2"
                                                                      />
                                                        }
                                          />
                            </Row>
              </div>
              <Row
                            gutter={0}
              >
                            <style__HWPromptWrapper>
                                          <Connect(HWPromptContainer) />
                            </style__HWPromptWrapper>
                            <div
                                          style={
                                                        Object {
                                                                      "width": "fit-content",
                                                                    }
                                          }
                            >
                                          <style__StyledButton
                                                        disabled={true}
                                                        onClick={[Function]}
                                                        type="primary"
                                          >
                                                        <span>
                                                                      deposit
                                                        </span>
                                          </style__StyledButton>
                            </div>
              </Row>
              <SectionHeading
                            style={
                                          Object {
                                                        "marginTop": "2rem",
                                                        "maxWidth": "25rem",
                                                      }
                            }
              >
                            deposits_note
              </SectionHeading>
</div>,
          ],
          "style": Object {
            "display": "flex",
            "flex": "1",
            "flexWrap": "wrap",
            "marginTop": "0.5rem",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Form__FlexForm>
                <Form__FormItem
                                colon={false}
                                label={
                                                <Form__FormItemLabel>
                                                                select_asset_to_deposit
                                                </Form__FormItemLabel>
                                }
                >
                                <style__Image
                                                alt="logo"
                                                onError={[Function]}
                                                src="/public/images/assets/ETH.svg"
                                />
                                <Select
                                                defaultValue="ETH"
                                                onSelect={[Function]}
                                                style={
                                                                Object {
                                                                                "paddingLeft": "0.5rem",
                                                                              }
                                                }
                                >
                                                <Option
                                                                value="ETH"
                                                >
                                                                ETH
                                                </Option>
                                                <Option
                                                                value="BOKKY"
                                                >
                                                                BOKKY
                                                </Option>
                                </Select>
                </Form__FormItem>
                <Form__FormItem
                                colon={false}
                                help={
                                                <HelperTextComponent
                                                                left="$0.00"
                                                                right="usd"
                                                />
                                }
                                label={
                                                <Form__FormItemLabel>
                                                                enter_amount
                                                </Form__FormItemLabel>
                                }
                >
                                <Input
                                                defaultValue="0"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value="0"
                                />
                </Form__FormItem>
                <GasOptions
                                defaultGasLimit={600000}
                                defaultGasPrice={10}
                                defaultOption="average"
                                gasStatistics={undefined}
                                intl={
                                                Object {
                                                                "formatMessage": [Function],
                                                                "formatNumber": [Function],
                                                              }
                                }
                                onChange={[Function]}
                />
                <style__DollarPrice>
                                1 ETH = 
                                <style__StyledNumericText
                                                type="currency"
                                                value="412"
                                />
                </style__DollarPrice>
</Form__FlexForm>,
              "style": Object {
                "flex": "1",
                "marginBottom": "3rem",
                "marginRight": "2rem",
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Form__FormItem
                    colon={false}
                    label={
                                        <Form__FormItemLabel>
                                                            select_asset_to_deposit
                                        </Form__FormItemLabel>
                    }
>
                    <style__Image
                                        alt="logo"
                                        onError={[Function]}
                                        src="/public/images/assets/ETH.svg"
                    />
                    <Select
                                        defaultValue="ETH"
                                        onSelect={[Function]}
                                        style={
                                                            Object {
                                                                                "paddingLeft": "0.5rem",
                                                                              }
                                        }
                    >
                                        <Option
                                                            value="ETH"
                                        >
                                                            ETH
                                        </Option>
                                        <Option
                                                            value="BOKKY"
                                        >
                                                            BOKKY
                                        </Option>
                    </Select>
</Form__FormItem>,
                  <Form__FormItem
                    colon={false}
                    help={
                                        <HelperTextComponent
                                                            left="$0.00"
                                                            right="usd"
                                        />
                    }
                    label={
                                        <Form__FormItemLabel>
                                                            enter_amount
                                        </Form__FormItemLabel>
                    }
>
                    <Input
                                        defaultValue="0"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        value="0"
                    />
</Form__FormItem>,
                  <GasOptions
                    defaultGasLimit={600000}
                    defaultGasPrice={10}
                    defaultOption="average"
                    gasStatistics={undefined}
                    intl={
                                        Object {
                                                            "formatMessage": [Function],
                                                            "formatNumber": [Function],
                                                          }
                    }
                    onChange={[Function]}
/>,
                  <style__DollarPrice>
                    1 ETH = 
                    <style__StyledNumericText
                                        type="currency"
                                        value="412"
                    />
</style__DollarPrice>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <style__Image
                        alt="logo"
                        onError={[Function]}
                        src="/public/images/assets/ETH.svg"
/>,
                      <Select
                        defaultValue="ETH"
                        onSelect={[Function]}
                        style={
                                                Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                        }
>
                        <Option
                                                value="ETH"
                        >
                                                ETH
                        </Option>
                        <Option
                                                value="BOKKY"
                        >
                                                BOKKY
                        </Option>
</Select>,
                    ],
                    "colon": false,
                    "label": <Form__FormItemLabel>
                      select_asset_to_deposit
</Form__FormItemLabel>,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "alt": "logo",
                        "onError": [Function],
                        "src": "/public/images/assets/ETH.svg",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <Option
                            value="ETH"
>
                            ETH
</Option>,
                          <Option
                            value="BOKKY"
>
                            BOKKY
</Option>,
                        ],
                        "defaultValue": "ETH",
                        "onSelect": [Function],
                        "style": Object {
                          "paddingLeft": "0.5rem",
                        },
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": "ETH",
                          "nodeType": "class",
                          "props": Object {
                            "children": "ETH",
                            "value": "ETH",
                          },
                          "ref": null,
                          "rendered": "ETH",
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": "BOKKY",
                          "nodeType": "class",
                          "props": Object {
                            "children": "BOKKY",
                            "value": "BOKKY",
                          },
                          "ref": null,
                          "rendered": "BOKKY",
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Input
                      defaultValue="0"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      value="0"
/>,
                    "colon": false,
                    "help": <HelperTextComponent
                      left="$0.00"
                      right="usd"
/>,
                    "label": <Form__FormItemLabel>
                      enter_amount
</Form__FormItemLabel>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "defaultValue": "0",
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "value": "0",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "defaultGasLimit": 600000,
                    "defaultGasPrice": 10,
                    "defaultOption": "average",
                    "gasStatistics": undefined,
                    "intl": Object {
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                    },
                    "onChange": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "1 ETH = ",
                      <style__StyledNumericText
                        type="currency"
                        value="412"
/>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    "1 ETH = ",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "type": "currency",
                        "value": "412",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    deposit
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main={
                                                      <SelectableText>
                                                                        <NumericText
                                                                                          maxDecimalPlaces={18}
                                                                                          value="0"
                                                                        />
                                                                         
                                                                        ETH
                                                      </SelectableText>
                                    }
                                    subtitle={
                                                      <NumericText
                                                                        type="currency"
                                                                        value="0"
                                                      />
                                    }
                  />
</Row>,
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    <TooltipText
                                                      details="max_base_layer_fee_explain"
                                    >
                                                      max_base_layer_fee
                                    </TooltipText>
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main={
                                                      <SelectableText>
                                                                        <NumericText
                                                                                          maxDecimalPlaces={18}
                                                                                          value="0.006"
                                                                        />
                                                                         
                                                                        ETH
                                                      </SelectableText>
                                    }
                                    subtitle={
                                                      <NumericText
                                                                        type="currency"
                                                                        value="2.472"
                                                      />
                                    }
                  />
</Row>,
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    base_layer
                                     ETH 
                                    balance_before
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main={
                                                      <SelectableText>
                                                                        <NumericText
                                                                                          maxDecimalPlaces={18}
                                                                                          value="0.198937"
                                                                        />
                                                                         
                                                                        ETH
                                                      </SelectableText>
                                    }
                                    subtitle={
                                                      <NumericText
                                                                        type="currency"
                                                                        value="81.962044"
                                                      />
                                    }
                  />
</Row>,
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    base_layer
                                     ETH 
                                    balance_after
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main={
                                                      <SelectableText>
                                                                        <NumericText
                                                                                          maxDecimalPlaces={18}
                                                                                          value="0.192937"
                                                                        />
                                                                         
                                                                        ETH
                                                      </SelectableText>
                                    }
                                    subtitle={
                                                      <NumericText
                                                                        type="currency"
                                                                        value="79.490044"
                                                      />
                                    }
                  />
</Row>,
                <div>
                  <Row
                                    gutter={0}
                  >
                                    <style__StyledCol
                                                      span={12}
                                    >
                                                      nahmii_available
                                                       ETH 
                                                      balance_before
                                    </style__StyledCol>
                  </Row>
                  <Row
                                    gutter={0}
                  >
                                    <TransferDescriptionItem
                                                      main={
                                                                        <SelectableText>
                                                                                          <NumericText
                                                                                                            maxDecimalPlaces={18}
                                                                                                            value="0.1"
                                                                                          />
                                                                                           
                                                                                          ETH
                                                                        </SelectableText>
                                                      }
                                                      subtitle={
                                                                        <NumericText
                                                                                          type="currency"
                                                                                          value="41.2"
                                                                        />
                                                      }
                                    />
                  </Row>
                  <Row
                                    gutter={0}
                  >
                                    <style__StyledCol
                                                      span={12}
                                    >
                                                      nahmii_available
                                                       ETH 
                                                      balance_after
                                    </style__StyledCol>
                  </Row>
                  <Row
                                    gutter={0}
                  >
                                    <TransferDescriptionItem
                                                      main={
                                                                        <SelectableText>
                                                                                          <NumericText
                                                                                                            maxDecimalPlaces={18}
                                                                                                            value="0.1"
                                                                                          />
                                                                                           
                                                                                          ETH
                                                                        </SelectableText>
                                                      }
                                                      subtitle={
                                                                        <NumericText
                                                                                          type="currency"
                                                                                          value="41.2"
                                                                        />
                                                      }
                                    />
                  </Row>
</div>,
                false,
                <Row
                  gutter={0}
>
                  <style__HWPromptWrapper>
                                    <Connect(HWPromptContainer) />
                  </style__HWPromptWrapper>
                  <div
                                    style={
                                                      Object {
                                                                        "width": "fit-content",
                                                                      }
                                    }
                  >
                                    <style__StyledButton
                                                      disabled={true}
                                                      onClick={[Function]}
                                                      type="primary"
                                    >
                                                      <span>
                                                                        deposit
                                                      </span>
                                    </style__StyledButton>
                  </div>
</Row>,
                <SectionHeading
                  style={
                                    Object {
                                                      "marginTop": "2rem",
                                                      "maxWidth": "25rem",
                                                    }
                  }
>
                  deposits_note
</SectionHeading>,
              ],
              "style": Object {
                "minWidth": "34rem",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    deposit
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "deposit",
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": "deposit",
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main={
                                        <SelectableText>
                                                            <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0"
                                                            />
                                                             
                                                            ETH
                                        </SelectableText>
                    }
                    subtitle={
                                        <NumericText
                                                            type="currency"
                                                            value="0"
                                        />
                    }
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": <SelectableText>
                      <NumericText
                                            maxDecimalPlaces={18}
                                            value="0"
                      />
                       
                      ETH
</SelectableText>,
                    "subtitle": <NumericText
                      type="currency"
                      value="0"
/>,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    <TooltipText
                                        details="max_base_layer_fee_explain"
                    >
                                        max_base_layer_fee
                    </TooltipText>
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TooltipText
                      details="max_base_layer_fee_explain"
>
                      max_base_layer_fee
</TooltipText>,
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "max_base_layer_fee",
                      "details": "max_base_layer_fee_explain",
                    },
                    "ref": null,
                    "rendered": "max_base_layer_fee",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main={
                                        <SelectableText>
                                                            <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.006"
                                                            />
                                                             
                                                            ETH
                                        </SelectableText>
                    }
                    subtitle={
                                        <NumericText
                                                            type="currency"
                                                            value="2.472"
                                        />
                    }
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": <SelectableText>
                      <NumericText
                                            maxDecimalPlaces={18}
                                            value="0.006"
                      />
                       
                      ETH
</SelectableText>,
                    "subtitle": <NumericText
                      type="currency"
                      value="2.472"
/>,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    base_layer
                     ETH 
                    balance_before
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "base_layer",
                      " ETH ",
                      "balance_before",
                    ],
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Array [
                    "base_layer",
                    " ETH ",
                    "balance_before",
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main={
                                        <SelectableText>
                                                            <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.198937"
                                                            />
                                                             
                                                            ETH
                                        </SelectableText>
                    }
                    subtitle={
                                        <NumericText
                                                            type="currency"
                                                            value="81.962044"
                                        />
                    }
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": <SelectableText>
                      <NumericText
                                            maxDecimalPlaces={18}
                                            value="0.198937"
                      />
                       
                      ETH
</SelectableText>,
                    "subtitle": <NumericText
                      type="currency"
                      value="81.962044"
/>,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    base_layer
                     ETH 
                    balance_after
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "base_layer",
                      " ETH ",
                      "balance_after",
                    ],
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Array [
                    "base_layer",
                    " ETH ",
                    "balance_after",
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main={
                                        <SelectableText>
                                                            <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.192937"
                                                            />
                                                             
                                                            ETH
                                        </SelectableText>
                    }
                    subtitle={
                                        <NumericText
                                                            type="currency"
                                                            value="79.490044"
                                        />
                    }
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": <SelectableText>
                      <NumericText
                                            maxDecimalPlaces={18}
                                            value="0.192937"
                      />
                       
                      ETH
</SelectableText>,
                    "subtitle": <NumericText
                      type="currency"
                      value="79.490044"
/>,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Row
                      gutter={0}
>
                      <style__StyledCol
                                            span={12}
                      >
                                            nahmii_available
                                             ETH 
                                            balance_before
                      </style__StyledCol>
</Row>,
                    <Row
                      gutter={0}
>
                      <TransferDescriptionItem
                                            main={
                                                                  <SelectableText>
                                                                                        <NumericText
                                                                                                              maxDecimalPlaces={18}
                                                                                                              value="0.1"
                                                                                        />
                                                                                         
                                                                                        ETH
                                                                  </SelectableText>
                                            }
                                            subtitle={
                                                                  <NumericText
                                                                                        type="currency"
                                                                                        value="41.2"
                                                                  />
                                            }
                      />
</Row>,
                    <Row
                      gutter={0}
>
                      <style__StyledCol
                                            span={12}
                      >
                                            nahmii_available
                                             ETH 
                                            balance_after
                      </style__StyledCol>
</Row>,
                    <Row
                      gutter={0}
>
                      <TransferDescriptionItem
                                            main={
                                                                  <SelectableText>
                                                                                        <NumericText
                                                                                                              maxDecimalPlaces={18}
                                                                                                              value="0.1"
                                                                                        />
                                                                                         
                                                                                        ETH
                                                                  </SelectableText>
                                            }
                                            subtitle={
                                                                  <NumericText
                                                                                        type="currency"
                                                                                        value="41.2"
                                                                  />
                                            }
                      />
</Row>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <style__StyledCol
                        span={12}
>
                        nahmii_available
                         ETH 
                        balance_before
</style__StyledCol>,
                      "gutter": 0,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          "nahmii_available",
                          " ETH ",
                          "balance_before",
                        ],
                        "span": 12,
                      },
                      "ref": null,
                      "rendered": Array [
                        "nahmii_available",
                        " ETH ",
                        "balance_before",
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <TransferDescriptionItem
                        main={
                                                <SelectableText>
                                                                        <NumericText
                                                                                                maxDecimalPlaces={18}
                                                                                                value="0.1"
                                                                        />
                                                                         
                                                                        ETH
                                                </SelectableText>
                        }
                        subtitle={
                                                <NumericText
                                                                        type="currency"
                                                                        value="41.2"
                                                />
                        }
/>,
                      "gutter": 0,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "main": <SelectableText>
                          <NumericText
                                                    maxDecimalPlaces={18}
                                                    value="0.1"
                          />
                           
                          ETH
</SelectableText>,
                        "subtitle": <NumericText
                          type="currency"
                          value="41.2"
/>,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <style__StyledCol
                        span={12}
>
                        nahmii_available
                         ETH 
                        balance_after
</style__StyledCol>,
                      "gutter": 0,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          "nahmii_available",
                          " ETH ",
                          "balance_after",
                        ],
                        "span": 12,
                      },
                      "ref": null,
                      "rendered": Array [
                        "nahmii_available",
                        " ETH ",
                        "balance_after",
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <TransferDescriptionItem
                        main={
                                                <SelectableText>
                                                                        <NumericText
                                                                                                maxDecimalPlaces={18}
                                                                                                value="0.1"
                                                                        />
                                                                         
                                                                        ETH
                                                </SelectableText>
                        }
                        subtitle={
                                                <NumericText
                                                                        type="currency"
                                                                        value="41.2"
                                                />
                        }
/>,
                      "gutter": 0,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "main": <SelectableText>
                          <NumericText
                                                    maxDecimalPlaces={18}
                                                    value="0.1"
                          />
                           
                          ETH
</SelectableText>,
                        "subtitle": <NumericText
                          type="currency"
                          value="41.2"
/>,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              false,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <style__HWPromptWrapper>
                      <Connect(HWPromptContainer) />
</style__HWPromptWrapper>,
                    <div
                      style={
                                            Object {
                                                                  "width": "fit-content",
                                                                }
                      }
>
                      <style__StyledButton
                                            disabled={true}
                                            onClick={[Function]}
                                            type="primary"
                      >
                                            <span>
                                                                  deposit
                                            </span>
                      </style__StyledButton>
</div>,
                  ],
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Connect(HWPromptContainer) />,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <style__StyledButton
                        disabled={true}
                        onClick={[Function]}
                        type="primary"
>
                        <span>
                                                deposit
                        </span>
</style__StyledButton>,
                      "style": Object {
                        "width": "fit-content",
                      },
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <span>
                          deposit
</span>,
                        "disabled": true,
                        "onClick": [Function],
                        "type": "primary",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "deposit",
                        },
                        "ref": null,
                        "rendered": "deposit",
                        "type": "span",
                      },
                      "type": [Function],
                    },
                    "type": "div",
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "deposits_note",
                  "style": Object {
                    "marginTop": "2rem",
                    "maxWidth": "25rem",
                  },
                },
                "ref": null,
                "rendered": "deposits_note",
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<NahmiiDeposit /> should render correctly when prices are errored 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NahmiiDeposit
    currentNetwork={
        Object {
            "apiDomain": "api2.dev.hubii.net",
            "defaultNahmiiProvider": NahmiiProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "connection": Object {
                "url": "http://geth-ropsten.dev.hubii.net",
              },
              "ready": Promise {},
            },
            "identityServiceAppId": "appid",
            "identityServiceSecret": "secret",
            "nahmiiProvider": NahmiiProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "connection": Object {
                "url": "http://geth-ropsten.dev.hubii.net",
              },
              "ready": Promise {},
            },
            "name": "ropsten",
            "provider": FallbackProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "_providers": Array [
                InfuraProvider {
                  "_balances": Object {},
                  "_emitted": Object {
                    "block": -2,
                  },
                  "_events": Array [],
                  "_fastQueryDate": 0,
                  "_lastBlockNumber": -2,
                  "_network": Object {
                    "_defaultProvider": [Function],
                    "chainId": 3,
                    "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                    "name": "ropsten",
                  },
                  "_pollingInterval": 4000,
                  "apiAccessToken": null,
                  "connection": Object {
                    "url": "https://ropsten.infura.io/",
                  },
                  "ready": Promise {},
                },
                EtherscanProvider {
                  "_balances": Object {},
                  "_emitted": Object {
                    "block": -2,
                  },
                  "_events": Array [],
                  "_fastQueryDate": 0,
                  "_lastBlockNumber": -2,
                  "_network": Object {
                    "_defaultProvider": [Function],
                    "chainId": 3,
                    "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                    "name": "ropsten",
                  },
                  "_pollingInterval": 4000,
                  "apiKey": undefined,
                  "baseUrl": "https://api-ropsten.etherscan.io",
                  "ready": Promise {},
                },
              ],
              "ready": Promise {},
            },
            "walletApiEndpoint": [Function],
          }
    }
    currentWalletWithInfo={
        Immutable.Map {
            deviceId: "041ca8e96420e95a106e8c9bb3c9fb9e8c00d4b11cac562888c898000b5cec366c03a0f84574716fac6c7a7df47a925f0e30f5286546adf3179b5a08dc9d8e09da",
            address: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
            type: "lns",
            name: "lns",
            derivationPath: "m/44'/60'/0'/0",
            transactions: Immutable.Map {
                loading: false,
                error: null,
                transactions: Immutable.List [
                    Immutable.Map {
                        transfers: Immutable.Map {
                            single: "2111000000",
                            total: "3111000000",
                        },
                        created: "2018-12-17T01:59:03.718Z",
                        decimalAmount: "0.000000002111",
                        counterpartyAddress: "0x4231676a35483638796e2af8ed2af0a41b097524",
                        nonce: 21,
                        currency: "0x0000000000000000000000000000000000000000",
                        layer: "nahmii",
                        sender: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                    Immutable.Map {
                                        originId: "0",
                                        figure: Immutable.Map {
                                            currency: Immutable.Map {
                                                ct: "0x0000000000000000000000000000000000000000",
                                                id: "0",
                                            },
                                            amount: "4121100",
                                        },
                                    },
                                ],
                                single: Immutable.Map {
                                    currency: Immutable.Map {
                                        ct: "0x0000000000000000000000000000000000000000",
                                        id: "0",
                                    },
                                    amount: "2111000",
                                },
                            },
                            wallet: "0x4231676a35483638796e2af8ed2af0a41b097524",
                            nonce: 7,
                            balances: Immutable.Map {
                                current: "999995875778900",
                                previous: "999997988889900",
                            },
                        },
                        timestamp: "2018-12-17T01:59:03.776Z",
                        seals: Immutable.Map {
                            wallet: Immutable.Map {
                                hash: "0x57d9cf4ffc4b2aecce23d2e56083c7b437f5e105be74c1cd17d8522999b5d0be",
                                signature: Immutable.Map {
                                    s: "0x395b632dab03b34321c1aed7dcbac4a1b87582904d2898645b3ec90505c44348",
                                    r: "0x01cda7bddbc7c2194dd395aac73eaf1ca6760bfef83689c5a1240f936f0200d4",
                                    v: 28,
                                },
                            },
                            operator: Immutable.Map {
                                hash: "0x99c1a3a1cd8b15cdb969270f6e8f7fdce5b9c8377a00c38d800b9982c98eec5a",
                                signature: Immutable.Map {
                                    s: "0x129c9e071467ee98ddd799fa1ed7b3cbda11486955b9360afd22ce0ff4d91aab",
                                    r: "0x4d22165ff7382f998107a87e800a11581e7b99fa67ab613656706105157e5ab9",
                                    v: 28,
                                },
                            },
                        },
                        blockNumber: 4643058,
                        amount: "2111000000",
                        symbol: "ETH",
                        recipient: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                ],
                            },
                            wallet: "0x1c7429f62595097315289cebac1fdbda587ad512",
                            nonce: 4,
                            balances: Immutable.Map {
                                current: "10013111000000",
                                previous: "10011000000000",
                            },
                        },
                        type: "received",
                        updated: "2018-12-17T01:59:03.776Z",
                        id: "5c1702e78d9ea3000ea459d9",
                        operatorId: "0",
                        confirmed: true,
                    },
                    Immutable.Map {
                        decimalAmount: "0.0000000001",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780091,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x0000000000000000000000000000000000000000",
                        layer: "baseLayer",
                        sender: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        timestamp: "2018-08-06T02:32:00.000Z",
                        amount: "100000000",
                        symbol: "ETH",
                        recipient: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        type: "received",
                    },
                    Immutable.Map {
                        transfers: Immutable.Map {
                            single: "10000000000000000",
                            total: "10000000000000000",
                        },
                        created: "2018-11-16T22:40:54.951Z",
                        decimalAmount: "0.01",
                        counterpartyAddress: "0xc5768cdeda275fe5536147a3fbc8cfb6b0d8ac48",
                        nonce: 18,
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        layer: "nahmii",
                        sender: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                    Immutable.Map {
                                        originId: "0",
                                        figure: Immutable.Map {
                                            currency: Immutable.Map {
                                                ct: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                                                id: "0",
                                            },
                                            amount: "10000000000000",
                                        },
                                    },
                                ],
                                single: Immutable.Map {
                                    currency: Immutable.Map {
                                        ct: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                                        id: "0",
                                    },
                                    amount: "10000000000000",
                                },
                            },
                            wallet: "0x1c7429f62595097315289cebac1fdbda587ad512",
                            nonce: 3,
                            balances: Immutable.Map {
                                current: "89990000000000000",
                                previous: "100000000000000000",
                            },
                        },
                        timestamp: "2018-11-16T22:40:55.049Z",
                        seals: Immutable.Map {
                            wallet: Immutable.Map {
                                hash: "0x0b7d6d30e9665016246e6370e82579a35bc4d9c0cf88c65b38d538f7ad8ee828",
                                signature: Immutable.Map {
                                    s: "0x7d60c93b9037be6d880bbe86f258d0e371ad4015fc2528cf1312d924f9e76245",
                                    r: "0x9c11c2a5244a741f67837eb6efc1f12396c19d2490ff2bd872dbd9643a7c1013",
                                    v: 27,
                                },
                            },
                            operator: Immutable.Map {
                                hash: "0x92b0e8b3c705449eea1bce2e517468cec521e6451d4a7e6c4fe4c4efe7df6ab4",
                                signature: Immutable.Map {
                                    s: "0x09ad154d886899b36f15a2be68ddb61c15afe185acd498a9b6bb2577f317a942",
                                    r: "0x80d8f5e899f16c9a4abcc72d23399d4ddd3c08a29dae8233a46179ef54cc189c",
                                    v: 27,
                                },
                            },
                        },
                        blockNumber: 3780090,
                        amount: "10000000000000000",
                        symbol: "BOKKY",
                        recipient: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                ],
                            },
                            wallet: "0xc5768cdeda275fe5536147a3fbc8cfb6b0d8ac48",
                            nonce: 2,
                            balances: Immutable.Map {
                                current: "10000000000000000",
                                previous: "0",
                            },
                        },
                        type: "sent",
                        updated: "2018-11-16T22:40:55.049Z",
                        id: "5c16d4768d9ea3000ea45690",
                        operatorId: "0",
                        confirmed: true,
                    },
                    Immutable.Map {
                        decimalAmount: "0.000000000000000005",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780089,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        layer: "baseLayer",
                        sender: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        timestamp: "2018-08-06T02:32:00.000Z",
                        amount: "5",
                        symbol: "BOKKY",
                        recipient: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        type: "sent",
                    },
                ],
            },
            balances: Immutable.Map {
                baseLayer: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.198937",
                            currency: "0x0000000000000000000000000000000000000000",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.198937",
                                btc: "0.00198937",
                                usd: "81.962044",
                            },
                        },
                        Immutable.Map {
                            balance: "1.231288e-12",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "1.231288e-13",
                                btc: "1.231288e-15",
                                usd: "1.231288e-12",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1989370000001231288",
                        btc: "0.001989370000001231288",
                        usd: "81.962044000001231288",
                    },
                },
                nahmiiAvailable: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.113",
                        btc: "0.00113",
                        usd: "41.33",
                    },
                },
                nahmiiStaging: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1",
                        btc: "0.001",
                        usd: "41.2",
                    },
                },
                nahmiiStaged: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                    ],
                    total: Immutable.Map {
                        eth: "0",
                        btc: "0",
                        usd: "0",
                    },
                },
                nahmiiCombined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.2",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.2",
                                btc: "0.002",
                                usd: "82.4",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.213",
                        btc: "0.00213",
                        usd: "82.53",
                    },
                },
                combined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.398937",
                            currency: "0x0000000000000000000000000000000000000000",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.398937",
                                btc: "0.00398937",
                                usd: "164.362044",
                            },
                        },
                        Immutable.Map {
                            balance: "0.130000000001231288",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.0130000000001231288",
                                btc: "0.000130000000001231288",
                                usd: "0.130000000001231288",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.4119370000001231288",
                        btc: "0.004119370000001231288",
                        usd: "164.492044000001231288",
                    },
                },
            },
        }
    }
    depositStatus={
        Immutable.Map {
            depositingEth: false,
            approvingTokenDeposit: false,
            completingTokenDeposit: false,
            error: null,
        }
    }
    gasStatistics={
        Immutable.Map {
        }
    }
    goWalletDetails={[Function]}
    intl={
        Object {
            "formatMessage": [Function],
            "formatNumber": [Function],
          }
    }
    ledgerNanoSInfo={
        Immutable.Map {
            status: "disconnected",
            addresses: Immutable.Map {
            },
            id: null,
            confTxOnDevice: false,
        }
    }
    nahmiiDeposit={[Function]}
    prices={
        Immutable.Map {
            loading: false,
            error: true,
            assets: Immutable.List [
            ],
        }
    }
    supportedAssets={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    symbol: "My20",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    symbol: "HBT",
                    decimals: 15,
                    color: "0063A5",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    symbol: "SBT",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    symbol: "WETH",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    symbol: "BOKKY",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x0000000000000000000000000000000000000000",
                    symbol: "ETH",
                    decimals: 18,
                    color: "5C78E4",
                },
            ],
        }
    }
    trezorInfo={
        Immutable.Map {
            status: "disconnected",
            connected: false,
            addresses: Immutable.Map {
            },
            id: "ajlsdfkjas",
            confTxOnDevice: false,
        }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": "connection_problem",
    },
    "ref": null,
    "rendered": "connection_problem",
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": "connection_problem",
      },
      "ref": null,
      "rendered": "connection_problem",
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<NahmiiDeposit /> should render correctly when prices are loading 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NahmiiDeposit
    currentNetwork={
        Object {
            "apiDomain": "api2.dev.hubii.net",
            "defaultNahmiiProvider": NahmiiProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "connection": Object {
                "url": "http://geth-ropsten.dev.hubii.net",
              },
              "ready": Promise {},
            },
            "identityServiceAppId": "appid",
            "identityServiceSecret": "secret",
            "nahmiiProvider": NahmiiProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "connection": Object {
                "url": "http://geth-ropsten.dev.hubii.net",
              },
              "ready": Promise {},
            },
            "name": "ropsten",
            "provider": FallbackProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "_providers": Array [
                InfuraProvider {
                  "_balances": Object {},
                  "_emitted": Object {
                    "block": -2,
                  },
                  "_events": Array [],
                  "_fastQueryDate": 0,
                  "_lastBlockNumber": -2,
                  "_network": Object {
                    "_defaultProvider": [Function],
                    "chainId": 3,
                    "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                    "name": "ropsten",
                  },
                  "_pollingInterval": 4000,
                  "apiAccessToken": null,
                  "connection": Object {
                    "url": "https://ropsten.infura.io/",
                  },
                  "ready": Promise {},
                },
                EtherscanProvider {
                  "_balances": Object {},
                  "_emitted": Object {
                    "block": -2,
                  },
                  "_events": Array [],
                  "_fastQueryDate": 0,
                  "_lastBlockNumber": -2,
                  "_network": Object {
                    "_defaultProvider": [Function],
                    "chainId": 3,
                    "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                    "name": "ropsten",
                  },
                  "_pollingInterval": 4000,
                  "apiKey": undefined,
                  "baseUrl": "https://api-ropsten.etherscan.io",
                  "ready": Promise {},
                },
              ],
              "ready": Promise {},
            },
            "walletApiEndpoint": [Function],
          }
    }
    currentWalletWithInfo={
        Immutable.Map {
            deviceId: "041ca8e96420e95a106e8c9bb3c9fb9e8c00d4b11cac562888c898000b5cec366c03a0f84574716fac6c7a7df47a925f0e30f5286546adf3179b5a08dc9d8e09da",
            address: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
            type: "lns",
            name: "lns",
            derivationPath: "m/44'/60'/0'/0",
            transactions: Immutable.Map {
                loading: false,
                error: null,
                transactions: Immutable.List [
                    Immutable.Map {
                        transfers: Immutable.Map {
                            single: "2111000000",
                            total: "3111000000",
                        },
                        created: "2018-12-17T01:59:03.718Z",
                        decimalAmount: "0.000000002111",
                        counterpartyAddress: "0x4231676a35483638796e2af8ed2af0a41b097524",
                        nonce: 21,
                        currency: "0x0000000000000000000000000000000000000000",
                        layer: "nahmii",
                        sender: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                    Immutable.Map {
                                        originId: "0",
                                        figure: Immutable.Map {
                                            currency: Immutable.Map {
                                                ct: "0x0000000000000000000000000000000000000000",
                                                id: "0",
                                            },
                                            amount: "4121100",
                                        },
                                    },
                                ],
                                single: Immutable.Map {
                                    currency: Immutable.Map {
                                        ct: "0x0000000000000000000000000000000000000000",
                                        id: "0",
                                    },
                                    amount: "2111000",
                                },
                            },
                            wallet: "0x4231676a35483638796e2af8ed2af0a41b097524",
                            nonce: 7,
                            balances: Immutable.Map {
                                current: "999995875778900",
                                previous: "999997988889900",
                            },
                        },
                        timestamp: "2018-12-17T01:59:03.776Z",
                        seals: Immutable.Map {
                            wallet: Immutable.Map {
                                hash: "0x57d9cf4ffc4b2aecce23d2e56083c7b437f5e105be74c1cd17d8522999b5d0be",
                                signature: Immutable.Map {
                                    s: "0x395b632dab03b34321c1aed7dcbac4a1b87582904d2898645b3ec90505c44348",
                                    r: "0x01cda7bddbc7c2194dd395aac73eaf1ca6760bfef83689c5a1240f936f0200d4",
                                    v: 28,
                                },
                            },
                            operator: Immutable.Map {
                                hash: "0x99c1a3a1cd8b15cdb969270f6e8f7fdce5b9c8377a00c38d800b9982c98eec5a",
                                signature: Immutable.Map {
                                    s: "0x129c9e071467ee98ddd799fa1ed7b3cbda11486955b9360afd22ce0ff4d91aab",
                                    r: "0x4d22165ff7382f998107a87e800a11581e7b99fa67ab613656706105157e5ab9",
                                    v: 28,
                                },
                            },
                        },
                        blockNumber: 4643058,
                        amount: "2111000000",
                        symbol: "ETH",
                        recipient: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                ],
                            },
                            wallet: "0x1c7429f62595097315289cebac1fdbda587ad512",
                            nonce: 4,
                            balances: Immutable.Map {
                                current: "10013111000000",
                                previous: "10011000000000",
                            },
                        },
                        type: "received",
                        updated: "2018-12-17T01:59:03.776Z",
                        id: "5c1702e78d9ea3000ea459d9",
                        operatorId: "0",
                        confirmed: true,
                    },
                    Immutable.Map {
                        decimalAmount: "0.0000000001",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780091,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x0000000000000000000000000000000000000000",
                        layer: "baseLayer",
                        sender: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        timestamp: "2018-08-06T02:32:00.000Z",
                        amount: "100000000",
                        symbol: "ETH",
                        recipient: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        type: "received",
                    },
                    Immutable.Map {
                        transfers: Immutable.Map {
                            single: "10000000000000000",
                            total: "10000000000000000",
                        },
                        created: "2018-11-16T22:40:54.951Z",
                        decimalAmount: "0.01",
                        counterpartyAddress: "0xc5768cdeda275fe5536147a3fbc8cfb6b0d8ac48",
                        nonce: 18,
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        layer: "nahmii",
                        sender: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                    Immutable.Map {
                                        originId: "0",
                                        figure: Immutable.Map {
                                            currency: Immutable.Map {
                                                ct: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                                                id: "0",
                                            },
                                            amount: "10000000000000",
                                        },
                                    },
                                ],
                                single: Immutable.Map {
                                    currency: Immutable.Map {
                                        ct: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                                        id: "0",
                                    },
                                    amount: "10000000000000",
                                },
                            },
                            wallet: "0x1c7429f62595097315289cebac1fdbda587ad512",
                            nonce: 3,
                            balances: Immutable.Map {
                                current: "89990000000000000",
                                previous: "100000000000000000",
                            },
                        },
                        timestamp: "2018-11-16T22:40:55.049Z",
                        seals: Immutable.Map {
                            wallet: Immutable.Map {
                                hash: "0x0b7d6d30e9665016246e6370e82579a35bc4d9c0cf88c65b38d538f7ad8ee828",
                                signature: Immutable.Map {
                                    s: "0x7d60c93b9037be6d880bbe86f258d0e371ad4015fc2528cf1312d924f9e76245",
                                    r: "0x9c11c2a5244a741f67837eb6efc1f12396c19d2490ff2bd872dbd9643a7c1013",
                                    v: 27,
                                },
                            },
                            operator: Immutable.Map {
                                hash: "0x92b0e8b3c705449eea1bce2e517468cec521e6451d4a7e6c4fe4c4efe7df6ab4",
                                signature: Immutable.Map {
                                    s: "0x09ad154d886899b36f15a2be68ddb61c15afe185acd498a9b6bb2577f317a942",
                                    r: "0x80d8f5e899f16c9a4abcc72d23399d4ddd3c08a29dae8233a46179ef54cc189c",
                                    v: 27,
                                },
                            },
                        },
                        blockNumber: 3780090,
                        amount: "10000000000000000",
                        symbol: "BOKKY",
                        recipient: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                ],
                            },
                            wallet: "0xc5768cdeda275fe5536147a3fbc8cfb6b0d8ac48",
                            nonce: 2,
                            balances: Immutable.Map {
                                current: "10000000000000000",
                                previous: "0",
                            },
                        },
                        type: "sent",
                        updated: "2018-11-16T22:40:55.049Z",
                        id: "5c16d4768d9ea3000ea45690",
                        operatorId: "0",
                        confirmed: true,
                    },
                    Immutable.Map {
                        decimalAmount: "0.000000000000000005",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780089,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        layer: "baseLayer",
                        sender: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        timestamp: "2018-08-06T02:32:00.000Z",
                        amount: "5",
                        symbol: "BOKKY",
                        recipient: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        type: "sent",
                    },
                ],
            },
            balances: Immutable.Map {
                baseLayer: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.198937",
                            currency: "0x0000000000000000000000000000000000000000",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.198937",
                                btc: "0.00198937",
                                usd: "81.962044",
                            },
                        },
                        Immutable.Map {
                            balance: "1.231288e-12",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "1.231288e-13",
                                btc: "1.231288e-15",
                                usd: "1.231288e-12",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1989370000001231288",
                        btc: "0.001989370000001231288",
                        usd: "81.962044000001231288",
                    },
                },
                nahmiiAvailable: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.113",
                        btc: "0.00113",
                        usd: "41.33",
                    },
                },
                nahmiiStaging: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1",
                        btc: "0.001",
                        usd: "41.2",
                    },
                },
                nahmiiStaged: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                    ],
                    total: Immutable.Map {
                        eth: "0",
                        btc: "0",
                        usd: "0",
                    },
                },
                nahmiiCombined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.2",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.2",
                                btc: "0.002",
                                usd: "82.4",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.213",
                        btc: "0.00213",
                        usd: "82.53",
                    },
                },
                combined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.398937",
                            currency: "0x0000000000000000000000000000000000000000",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.398937",
                                btc: "0.00398937",
                                usd: "164.362044",
                            },
                        },
                        Immutable.Map {
                            balance: "0.130000000001231288",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.0130000000001231288",
                                btc: "0.000130000000001231288",
                                usd: "0.130000000001231288",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.4119370000001231288",
                        btc: "0.004119370000001231288",
                        usd: "164.492044000001231288",
                    },
                },
            },
        }
    }
    depositStatus={
        Immutable.Map {
            depositingEth: false,
            approvingTokenDeposit: false,
            completingTokenDeposit: false,
            error: null,
        }
    }
    gasStatistics={
        Immutable.Map {
        }
    }
    goWalletDetails={[Function]}
    intl={
        Object {
            "formatMessage": [Function],
            "formatNumber": [Function],
          }
    }
    ledgerNanoSInfo={
        Immutable.Map {
            status: "disconnected",
            addresses: Immutable.Map {
            },
            id: null,
            confTxOnDevice: false,
        }
    }
    nahmiiDeposit={[Function]}
    prices={
        Immutable.Map {
            loading: true,
            error: null,
            assets: Immutable.List [
            ],
        }
    }
    supportedAssets={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    symbol: "My20",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    symbol: "HBT",
                    decimals: 15,
                    color: "0063A5",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    symbol: "SBT",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    symbol: "WETH",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    symbol: "BOKKY",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x0000000000000000000000000000000000000000",
                    symbol: "ETH",
                    decimals: 18,
                    color: "5C78E4",
                },
            ],
        }
    }
    trezorInfo={
        Immutable.Map {
            status: "disconnected",
            connected: false,
            addresses: Immutable.Map {
            },
            id: "ajlsdfkjas",
            confTxOnDevice: false,
        }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <style__StyledSpin
        size="large"
        tip="synchronising"
/>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "size": "large",
        "tip": "synchronising",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <style__StyledSpin
          size="large"
          tip="synchronising"
/>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "size": "large",
          "tip": "synchronising",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<NahmiiDeposit /> should render correctly when supportedAssets are errored 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NahmiiDeposit
    currentNetwork={
        Object {
            "apiDomain": "api2.dev.hubii.net",
            "defaultNahmiiProvider": NahmiiProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "connection": Object {
                "url": "http://geth-ropsten.dev.hubii.net",
              },
              "ready": Promise {},
            },
            "identityServiceAppId": "appid",
            "identityServiceSecret": "secret",
            "nahmiiProvider": NahmiiProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "connection": Object {
                "url": "http://geth-ropsten.dev.hubii.net",
              },
              "ready": Promise {},
            },
            "name": "ropsten",
            "provider": FallbackProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "_providers": Array [
                InfuraProvider {
                  "_balances": Object {},
                  "_emitted": Object {
                    "block": -2,
                  },
                  "_events": Array [],
                  "_fastQueryDate": 0,
                  "_lastBlockNumber": -2,
                  "_network": Object {
                    "_defaultProvider": [Function],
                    "chainId": 3,
                    "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                    "name": "ropsten",
                  },
                  "_pollingInterval": 4000,
                  "apiAccessToken": null,
                  "connection": Object {
                    "url": "https://ropsten.infura.io/",
                  },
                  "ready": Promise {},
                },
                EtherscanProvider {
                  "_balances": Object {},
                  "_emitted": Object {
                    "block": -2,
                  },
                  "_events": Array [],
                  "_fastQueryDate": 0,
                  "_lastBlockNumber": -2,
                  "_network": Object {
                    "_defaultProvider": [Function],
                    "chainId": 3,
                    "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                    "name": "ropsten",
                  },
                  "_pollingInterval": 4000,
                  "apiKey": undefined,
                  "baseUrl": "https://api-ropsten.etherscan.io",
                  "ready": Promise {},
                },
              ],
              "ready": Promise {},
            },
            "walletApiEndpoint": [Function],
          }
    }
    currentWalletWithInfo={
        Immutable.Map {
            deviceId: "041ca8e96420e95a106e8c9bb3c9fb9e8c00d4b11cac562888c898000b5cec366c03a0f84574716fac6c7a7df47a925f0e30f5286546adf3179b5a08dc9d8e09da",
            address: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
            type: "lns",
            name: "lns",
            derivationPath: "m/44'/60'/0'/0",
            transactions: Immutable.Map {
                loading: false,
                error: null,
                transactions: Immutable.List [
                    Immutable.Map {
                        transfers: Immutable.Map {
                            single: "2111000000",
                            total: "3111000000",
                        },
                        created: "2018-12-17T01:59:03.718Z",
                        decimalAmount: "0.000000002111",
                        counterpartyAddress: "0x4231676a35483638796e2af8ed2af0a41b097524",
                        nonce: 21,
                        currency: "0x0000000000000000000000000000000000000000",
                        layer: "nahmii",
                        sender: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                    Immutable.Map {
                                        originId: "0",
                                        figure: Immutable.Map {
                                            currency: Immutable.Map {
                                                ct: "0x0000000000000000000000000000000000000000",
                                                id: "0",
                                            },
                                            amount: "4121100",
                                        },
                                    },
                                ],
                                single: Immutable.Map {
                                    currency: Immutable.Map {
                                        ct: "0x0000000000000000000000000000000000000000",
                                        id: "0",
                                    },
                                    amount: "2111000",
                                },
                            },
                            wallet: "0x4231676a35483638796e2af8ed2af0a41b097524",
                            nonce: 7,
                            balances: Immutable.Map {
                                current: "999995875778900",
                                previous: "999997988889900",
                            },
                        },
                        timestamp: "2018-12-17T01:59:03.776Z",
                        seals: Immutable.Map {
                            wallet: Immutable.Map {
                                hash: "0x57d9cf4ffc4b2aecce23d2e56083c7b437f5e105be74c1cd17d8522999b5d0be",
                                signature: Immutable.Map {
                                    s: "0x395b632dab03b34321c1aed7dcbac4a1b87582904d2898645b3ec90505c44348",
                                    r: "0x01cda7bddbc7c2194dd395aac73eaf1ca6760bfef83689c5a1240f936f0200d4",
                                    v: 28,
                                },
                            },
                            operator: Immutable.Map {
                                hash: "0x99c1a3a1cd8b15cdb969270f6e8f7fdce5b9c8377a00c38d800b9982c98eec5a",
                                signature: Immutable.Map {
                                    s: "0x129c9e071467ee98ddd799fa1ed7b3cbda11486955b9360afd22ce0ff4d91aab",
                                    r: "0x4d22165ff7382f998107a87e800a11581e7b99fa67ab613656706105157e5ab9",
                                    v: 28,
                                },
                            },
                        },
                        blockNumber: 4643058,
                        amount: "2111000000",
                        symbol: "ETH",
                        recipient: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                ],
                            },
                            wallet: "0x1c7429f62595097315289cebac1fdbda587ad512",
                            nonce: 4,
                            balances: Immutable.Map {
                                current: "10013111000000",
                                previous: "10011000000000",
                            },
                        },
                        type: "received",
                        updated: "2018-12-17T01:59:03.776Z",
                        id: "5c1702e78d9ea3000ea459d9",
                        operatorId: "0",
                        confirmed: true,
                    },
                    Immutable.Map {
                        decimalAmount: "0.0000000001",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780091,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x0000000000000000000000000000000000000000",
                        layer: "baseLayer",
                        sender: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        timestamp: "2018-08-06T02:32:00.000Z",
                        amount: "100000000",
                        symbol: "ETH",
                        recipient: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        type: "received",
                    },
                    Immutable.Map {
                        transfers: Immutable.Map {
                            single: "10000000000000000",
                            total: "10000000000000000",
                        },
                        created: "2018-11-16T22:40:54.951Z",
                        decimalAmount: "0.01",
                        counterpartyAddress: "0xc5768cdeda275fe5536147a3fbc8cfb6b0d8ac48",
                        nonce: 18,
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        layer: "nahmii",
                        sender: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                    Immutable.Map {
                                        originId: "0",
                                        figure: Immutable.Map {
                                            currency: Immutable.Map {
                                                ct: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                                                id: "0",
                                            },
                                            amount: "10000000000000",
                                        },
                                    },
                                ],
                                single: Immutable.Map {
                                    currency: Immutable.Map {
                                        ct: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                                        id: "0",
                                    },
                                    amount: "10000000000000",
                                },
                            },
                            wallet: "0x1c7429f62595097315289cebac1fdbda587ad512",
                            nonce: 3,
                            balances: Immutable.Map {
                                current: "89990000000000000",
                                previous: "100000000000000000",
                            },
                        },
                        timestamp: "2018-11-16T22:40:55.049Z",
                        seals: Immutable.Map {
                            wallet: Immutable.Map {
                                hash: "0x0b7d6d30e9665016246e6370e82579a35bc4d9c0cf88c65b38d538f7ad8ee828",
                                signature: Immutable.Map {
                                    s: "0x7d60c93b9037be6d880bbe86f258d0e371ad4015fc2528cf1312d924f9e76245",
                                    r: "0x9c11c2a5244a741f67837eb6efc1f12396c19d2490ff2bd872dbd9643a7c1013",
                                    v: 27,
                                },
                            },
                            operator: Immutable.Map {
                                hash: "0x92b0e8b3c705449eea1bce2e517468cec521e6451d4a7e6c4fe4c4efe7df6ab4",
                                signature: Immutable.Map {
                                    s: "0x09ad154d886899b36f15a2be68ddb61c15afe185acd498a9b6bb2577f317a942",
                                    r: "0x80d8f5e899f16c9a4abcc72d23399d4ddd3c08a29dae8233a46179ef54cc189c",
                                    v: 27,
                                },
                            },
                        },
                        blockNumber: 3780090,
                        amount: "10000000000000000",
                        symbol: "BOKKY",
                        recipient: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                ],
                            },
                            wallet: "0xc5768cdeda275fe5536147a3fbc8cfb6b0d8ac48",
                            nonce: 2,
                            balances: Immutable.Map {
                                current: "10000000000000000",
                                previous: "0",
                            },
                        },
                        type: "sent",
                        updated: "2018-11-16T22:40:55.049Z",
                        id: "5c16d4768d9ea3000ea45690",
                        operatorId: "0",
                        confirmed: true,
                    },
                    Immutable.Map {
                        decimalAmount: "0.000000000000000005",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780089,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        layer: "baseLayer",
                        sender: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        timestamp: "2018-08-06T02:32:00.000Z",
                        amount: "5",
                        symbol: "BOKKY",
                        recipient: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        type: "sent",
                    },
                ],
            },
            balances: Immutable.Map {
                baseLayer: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.198937",
                            currency: "0x0000000000000000000000000000000000000000",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.198937",
                                btc: "0.00198937",
                                usd: "81.962044",
                            },
                        },
                        Immutable.Map {
                            balance: "1.231288e-12",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "1.231288e-13",
                                btc: "1.231288e-15",
                                usd: "1.231288e-12",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1989370000001231288",
                        btc: "0.001989370000001231288",
                        usd: "81.962044000001231288",
                    },
                },
                nahmiiAvailable: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.113",
                        btc: "0.00113",
                        usd: "41.33",
                    },
                },
                nahmiiStaging: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1",
                        btc: "0.001",
                        usd: "41.2",
                    },
                },
                nahmiiStaged: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                    ],
                    total: Immutable.Map {
                        eth: "0",
                        btc: "0",
                        usd: "0",
                    },
                },
                nahmiiCombined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.2",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.2",
                                btc: "0.002",
                                usd: "82.4",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.213",
                        btc: "0.00213",
                        usd: "82.53",
                    },
                },
                combined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.398937",
                            currency: "0x0000000000000000000000000000000000000000",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.398937",
                                btc: "0.00398937",
                                usd: "164.362044",
                            },
                        },
                        Immutable.Map {
                            balance: "0.130000000001231288",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.0130000000001231288",
                                btc: "0.000130000000001231288",
                                usd: "0.130000000001231288",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.4119370000001231288",
                        btc: "0.004119370000001231288",
                        usd: "164.492044000001231288",
                    },
                },
            },
        }
    }
    depositStatus={
        Immutable.Map {
            depositingEth: false,
            approvingTokenDeposit: false,
            completingTokenDeposit: false,
            error: null,
        }
    }
    gasStatistics={
        Immutable.Map {
        }
    }
    goWalletDetails={[Function]}
    intl={
        Object {
            "formatMessage": [Function],
            "formatNumber": [Function],
          }
    }
    ledgerNanoSInfo={
        Immutable.Map {
            status: "disconnected",
            addresses: Immutable.Map {
            },
            id: null,
            confTxOnDevice: false,
        }
    }
    nahmiiDeposit={[Function]}
    prices={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    eth: 0.1,
                    btc: 0.001,
                    usd: 1,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x0000000000000000000000000000000000000000",
                    eth: 1,
                    btc: 0.01,
                    usd: 412,
                },
            ],
        }
    }
    supportedAssets={
        Immutable.Map {
            loading: false,
            error: true,
            assets: Immutable.List [
            ],
        }
    }
    trezorInfo={
        Immutable.Map {
            status: "disconnected",
            connected: false,
            addresses: Immutable.Map {
            },
            id: "ajlsdfkjas",
            confTxOnDevice: false,
        }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": "connection_problem",
    },
    "ref": null,
    "rendered": "connection_problem",
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": "connection_problem",
      },
      "ref": null,
      "rendered": "connection_problem",
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<NahmiiDeposit /> should render correctly when supportedAssets are loading 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NahmiiDeposit
    currentNetwork={
        Object {
            "apiDomain": "api2.dev.hubii.net",
            "defaultNahmiiProvider": NahmiiProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "connection": Object {
                "url": "http://geth-ropsten.dev.hubii.net",
              },
              "ready": Promise {},
            },
            "identityServiceAppId": "appid",
            "identityServiceSecret": "secret",
            "nahmiiProvider": NahmiiProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "connection": Object {
                "url": "http://geth-ropsten.dev.hubii.net",
              },
              "ready": Promise {},
            },
            "name": "ropsten",
            "provider": FallbackProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "_providers": Array [
                InfuraProvider {
                  "_balances": Object {},
                  "_emitted": Object {
                    "block": -2,
                  },
                  "_events": Array [],
                  "_fastQueryDate": 0,
                  "_lastBlockNumber": -2,
                  "_network": Object {
                    "_defaultProvider": [Function],
                    "chainId": 3,
                    "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                    "name": "ropsten",
                  },
                  "_pollingInterval": 4000,
                  "apiAccessToken": null,
                  "connection": Object {
                    "url": "https://ropsten.infura.io/",
                  },
                  "ready": Promise {},
                },
                EtherscanProvider {
                  "_balances": Object {},
                  "_emitted": Object {
                    "block": -2,
                  },
                  "_events": Array [],
                  "_fastQueryDate": 0,
                  "_lastBlockNumber": -2,
                  "_network": Object {
                    "_defaultProvider": [Function],
                    "chainId": 3,
                    "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                    "name": "ropsten",
                  },
                  "_pollingInterval": 4000,
                  "apiKey": undefined,
                  "baseUrl": "https://api-ropsten.etherscan.io",
                  "ready": Promise {},
                },
              ],
              "ready": Promise {},
            },
            "walletApiEndpoint": [Function],
          }
    }
    currentWalletWithInfo={
        Immutable.Map {
            deviceId: "041ca8e96420e95a106e8c9bb3c9fb9e8c00d4b11cac562888c898000b5cec366c03a0f84574716fac6c7a7df47a925f0e30f5286546adf3179b5a08dc9d8e09da",
            address: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
            type: "lns",
            name: "lns",
            derivationPath: "m/44'/60'/0'/0",
            transactions: Immutable.Map {
                loading: false,
                error: null,
                transactions: Immutable.List [
                    Immutable.Map {
                        transfers: Immutable.Map {
                            single: "2111000000",
                            total: "3111000000",
                        },
                        created: "2018-12-17T01:59:03.718Z",
                        decimalAmount: "0.000000002111",
                        counterpartyAddress: "0x4231676a35483638796e2af8ed2af0a41b097524",
                        nonce: 21,
                        currency: "0x0000000000000000000000000000000000000000",
                        layer: "nahmii",
                        sender: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                    Immutable.Map {
                                        originId: "0",
                                        figure: Immutable.Map {
                                            currency: Immutable.Map {
                                                ct: "0x0000000000000000000000000000000000000000",
                                                id: "0",
                                            },
                                            amount: "4121100",
                                        },
                                    },
                                ],
                                single: Immutable.Map {
                                    currency: Immutable.Map {
                                        ct: "0x0000000000000000000000000000000000000000",
                                        id: "0",
                                    },
                                    amount: "2111000",
                                },
                            },
                            wallet: "0x4231676a35483638796e2af8ed2af0a41b097524",
                            nonce: 7,
                            balances: Immutable.Map {
                                current: "999995875778900",
                                previous: "999997988889900",
                            },
                        },
                        timestamp: "2018-12-17T01:59:03.776Z",
                        seals: Immutable.Map {
                            wallet: Immutable.Map {
                                hash: "0x57d9cf4ffc4b2aecce23d2e56083c7b437f5e105be74c1cd17d8522999b5d0be",
                                signature: Immutable.Map {
                                    s: "0x395b632dab03b34321c1aed7dcbac4a1b87582904d2898645b3ec90505c44348",
                                    r: "0x01cda7bddbc7c2194dd395aac73eaf1ca6760bfef83689c5a1240f936f0200d4",
                                    v: 28,
                                },
                            },
                            operator: Immutable.Map {
                                hash: "0x99c1a3a1cd8b15cdb969270f6e8f7fdce5b9c8377a00c38d800b9982c98eec5a",
                                signature: Immutable.Map {
                                    s: "0x129c9e071467ee98ddd799fa1ed7b3cbda11486955b9360afd22ce0ff4d91aab",
                                    r: "0x4d22165ff7382f998107a87e800a11581e7b99fa67ab613656706105157e5ab9",
                                    v: 28,
                                },
                            },
                        },
                        blockNumber: 4643058,
                        amount: "2111000000",
                        symbol: "ETH",
                        recipient: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                ],
                            },
                            wallet: "0x1c7429f62595097315289cebac1fdbda587ad512",
                            nonce: 4,
                            balances: Immutable.Map {
                                current: "10013111000000",
                                previous: "10011000000000",
                            },
                        },
                        type: "received",
                        updated: "2018-12-17T01:59:03.776Z",
                        id: "5c1702e78d9ea3000ea459d9",
                        operatorId: "0",
                        confirmed: true,
                    },
                    Immutable.Map {
                        decimalAmount: "0.0000000001",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780091,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x0000000000000000000000000000000000000000",
                        layer: "baseLayer",
                        sender: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        timestamp: "2018-08-06T02:32:00.000Z",
                        amount: "100000000",
                        symbol: "ETH",
                        recipient: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        type: "received",
                    },
                    Immutable.Map {
                        transfers: Immutable.Map {
                            single: "10000000000000000",
                            total: "10000000000000000",
                        },
                        created: "2018-11-16T22:40:54.951Z",
                        decimalAmount: "0.01",
                        counterpartyAddress: "0xc5768cdeda275fe5536147a3fbc8cfb6b0d8ac48",
                        nonce: 18,
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        layer: "nahmii",
                        sender: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                    Immutable.Map {
                                        originId: "0",
                                        figure: Immutable.Map {
                                            currency: Immutable.Map {
                                                ct: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                                                id: "0",
                                            },
                                            amount: "10000000000000",
                                        },
                                    },
                                ],
                                single: Immutable.Map {
                                    currency: Immutable.Map {
                                        ct: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                                        id: "0",
                                    },
                                    amount: "10000000000000",
                                },
                            },
                            wallet: "0x1c7429f62595097315289cebac1fdbda587ad512",
                            nonce: 3,
                            balances: Immutable.Map {
                                current: "89990000000000000",
                                previous: "100000000000000000",
                            },
                        },
                        timestamp: "2018-11-16T22:40:55.049Z",
                        seals: Immutable.Map {
                            wallet: Immutable.Map {
                                hash: "0x0b7d6d30e9665016246e6370e82579a35bc4d9c0cf88c65b38d538f7ad8ee828",
                                signature: Immutable.Map {
                                    s: "0x7d60c93b9037be6d880bbe86f258d0e371ad4015fc2528cf1312d924f9e76245",
                                    r: "0x9c11c2a5244a741f67837eb6efc1f12396c19d2490ff2bd872dbd9643a7c1013",
                                    v: 27,
                                },
                            },
                            operator: Immutable.Map {
                                hash: "0x92b0e8b3c705449eea1bce2e517468cec521e6451d4a7e6c4fe4c4efe7df6ab4",
                                signature: Immutable.Map {
                                    s: "0x09ad154d886899b36f15a2be68ddb61c15afe185acd498a9b6bb2577f317a942",
                                    r: "0x80d8f5e899f16c9a4abcc72d23399d4ddd3c08a29dae8233a46179ef54cc189c",
                                    v: 27,
                                },
                            },
                        },
                        blockNumber: 3780090,
                        amount: "10000000000000000",
                        symbol: "BOKKY",
                        recipient: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                ],
                            },
                            wallet: "0xc5768cdeda275fe5536147a3fbc8cfb6b0d8ac48",
                            nonce: 2,
                            balances: Immutable.Map {
                                current: "10000000000000000",
                                previous: "0",
                            },
                        },
                        type: "sent",
                        updated: "2018-11-16T22:40:55.049Z",
                        id: "5c16d4768d9ea3000ea45690",
                        operatorId: "0",
                        confirmed: true,
                    },
                    Immutable.Map {
                        decimalAmount: "0.000000000000000005",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780089,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        layer: "baseLayer",
                        sender: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        timestamp: "2018-08-06T02:32:00.000Z",
                        amount: "5",
                        symbol: "BOKKY",
                        recipient: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        type: "sent",
                    },
                ],
            },
            balances: Immutable.Map {
                baseLayer: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.198937",
                            currency: "0x0000000000000000000000000000000000000000",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.198937",
                                btc: "0.00198937",
                                usd: "81.962044",
                            },
                        },
                        Immutable.Map {
                            balance: "1.231288e-12",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "1.231288e-13",
                                btc: "1.231288e-15",
                                usd: "1.231288e-12",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1989370000001231288",
                        btc: "0.001989370000001231288",
                        usd: "81.962044000001231288",
                    },
                },
                nahmiiAvailable: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.113",
                        btc: "0.00113",
                        usd: "41.33",
                    },
                },
                nahmiiStaging: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1",
                        btc: "0.001",
                        usd: "41.2",
                    },
                },
                nahmiiStaged: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                    ],
                    total: Immutable.Map {
                        eth: "0",
                        btc: "0",
                        usd: "0",
                    },
                },
                nahmiiCombined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.2",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.2",
                                btc: "0.002",
                                usd: "82.4",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.213",
                        btc: "0.00213",
                        usd: "82.53",
                    },
                },
                combined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.398937",
                            currency: "0x0000000000000000000000000000000000000000",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.398937",
                                btc: "0.00398937",
                                usd: "164.362044",
                            },
                        },
                        Immutable.Map {
                            balance: "0.130000000001231288",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.0130000000001231288",
                                btc: "0.000130000000001231288",
                                usd: "0.130000000001231288",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.4119370000001231288",
                        btc: "0.004119370000001231288",
                        usd: "164.492044000001231288",
                    },
                },
            },
        }
    }
    depositStatus={
        Immutable.Map {
            depositingEth: false,
            approvingTokenDeposit: false,
            completingTokenDeposit: false,
            error: null,
        }
    }
    gasStatistics={
        Immutable.Map {
        }
    }
    goWalletDetails={[Function]}
    intl={
        Object {
            "formatMessage": [Function],
            "formatNumber": [Function],
          }
    }
    ledgerNanoSInfo={
        Immutable.Map {
            status: "disconnected",
            addresses: Immutable.Map {
            },
            id: null,
            confTxOnDevice: false,
        }
    }
    nahmiiDeposit={[Function]}
    prices={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    eth: 0.1,
                    btc: 0.001,
                    usd: 1,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x0000000000000000000000000000000000000000",
                    eth: 1,
                    btc: 0.01,
                    usd: 412,
                },
            ],
        }
    }
    supportedAssets={
        Immutable.Map {
            loading: true,
            error: null,
            assets: Immutable.List [
            ],
        }
    }
    trezorInfo={
        Immutable.Map {
            status: "disconnected",
            connected: false,
            addresses: Immutable.Map {
            },
            id: "ajlsdfkjas",
            confTxOnDevice: false,
        }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <style__StyledSpin
        size="large"
        tip="synchronising"
/>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "size": "large",
        "tip": "synchronising",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <style__StyledSpin
          size="large"
          tip="synchronising"
/>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "size": "large",
          "tip": "synchronising",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<NahmiiDeposit /> should render correctly when trezor connected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NahmiiDeposit
    currentNetwork={
        Object {
            "apiDomain": "api2.dev.hubii.net",
            "defaultNahmiiProvider": NahmiiProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "connection": Object {
                "url": "http://geth-ropsten.dev.hubii.net",
              },
              "ready": Promise {},
            },
            "identityServiceAppId": "appid",
            "identityServiceSecret": "secret",
            "nahmiiProvider": NahmiiProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "connection": Object {
                "url": "http://geth-ropsten.dev.hubii.net",
              },
              "ready": Promise {},
            },
            "name": "ropsten",
            "provider": FallbackProvider {
              "_balances": Object {},
              "_emitted": Object {
                "block": -2,
              },
              "_events": Array [],
              "_fastQueryDate": 0,
              "_lastBlockNumber": -2,
              "_network": Object {
                "_defaultProvider": [Function],
                "chainId": 3,
                "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                "name": "ropsten",
              },
              "_pollingInterval": 4000,
              "_providers": Array [
                InfuraProvider {
                  "_balances": Object {},
                  "_emitted": Object {
                    "block": -2,
                  },
                  "_events": Array [],
                  "_fastQueryDate": 0,
                  "_lastBlockNumber": -2,
                  "_network": Object {
                    "_defaultProvider": [Function],
                    "chainId": 3,
                    "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                    "name": "ropsten",
                  },
                  "_pollingInterval": 4000,
                  "apiAccessToken": null,
                  "connection": Object {
                    "url": "https://ropsten.infura.io/",
                  },
                  "ready": Promise {},
                },
                EtherscanProvider {
                  "_balances": Object {},
                  "_emitted": Object {
                    "block": -2,
                  },
                  "_events": Array [],
                  "_fastQueryDate": 0,
                  "_lastBlockNumber": -2,
                  "_network": Object {
                    "_defaultProvider": [Function],
                    "chainId": 3,
                    "ensAddress": "0x112234455c3a32fd11230c42e7bccd4a84e02010",
                    "name": "ropsten",
                  },
                  "_pollingInterval": 4000,
                  "apiKey": undefined,
                  "baseUrl": "https://api-ropsten.etherscan.io",
                  "ready": Promise {},
                },
              ],
              "ready": Promise {},
            },
            "walletApiEndpoint": [Function],
          }
    }
    currentWalletWithInfo={
        Immutable.Map {
            deviceId: "041ca8e96420e95a106e8c9bb3c9fb9e8c00d4b11cac562888c898000b5cec366c03a0f84574716fac6c7a7df47a925f0e30f5286546adf3179b5a08dc9d8e09da",
            address: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
            type: "lns",
            name: "lns",
            derivationPath: "m/44'/60'/0'/0",
            transactions: Immutable.Map {
                loading: false,
                error: null,
                transactions: Immutable.List [
                    Immutable.Map {
                        transfers: Immutable.Map {
                            single: "2111000000",
                            total: "3111000000",
                        },
                        created: "2018-12-17T01:59:03.718Z",
                        decimalAmount: "0.000000002111",
                        counterpartyAddress: "0x4231676a35483638796e2af8ed2af0a41b097524",
                        nonce: 21,
                        currency: "0x0000000000000000000000000000000000000000",
                        layer: "nahmii",
                        sender: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                    Immutable.Map {
                                        originId: "0",
                                        figure: Immutable.Map {
                                            currency: Immutable.Map {
                                                ct: "0x0000000000000000000000000000000000000000",
                                                id: "0",
                                            },
                                            amount: "4121100",
                                        },
                                    },
                                ],
                                single: Immutable.Map {
                                    currency: Immutable.Map {
                                        ct: "0x0000000000000000000000000000000000000000",
                                        id: "0",
                                    },
                                    amount: "2111000",
                                },
                            },
                            wallet: "0x4231676a35483638796e2af8ed2af0a41b097524",
                            nonce: 7,
                            balances: Immutable.Map {
                                current: "999995875778900",
                                previous: "999997988889900",
                            },
                        },
                        timestamp: "2018-12-17T01:59:03.776Z",
                        seals: Immutable.Map {
                            wallet: Immutable.Map {
                                hash: "0x57d9cf4ffc4b2aecce23d2e56083c7b437f5e105be74c1cd17d8522999b5d0be",
                                signature: Immutable.Map {
                                    s: "0x395b632dab03b34321c1aed7dcbac4a1b87582904d2898645b3ec90505c44348",
                                    r: "0x01cda7bddbc7c2194dd395aac73eaf1ca6760bfef83689c5a1240f936f0200d4",
                                    v: 28,
                                },
                            },
                            operator: Immutable.Map {
                                hash: "0x99c1a3a1cd8b15cdb969270f6e8f7fdce5b9c8377a00c38d800b9982c98eec5a",
                                signature: Immutable.Map {
                                    s: "0x129c9e071467ee98ddd799fa1ed7b3cbda11486955b9360afd22ce0ff4d91aab",
                                    r: "0x4d22165ff7382f998107a87e800a11581e7b99fa67ab613656706105157e5ab9",
                                    v: 28,
                                },
                            },
                        },
                        blockNumber: 4643058,
                        amount: "2111000000",
                        symbol: "ETH",
                        recipient: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                ],
                            },
                            wallet: "0x1c7429f62595097315289cebac1fdbda587ad512",
                            nonce: 4,
                            balances: Immutable.Map {
                                current: "10013111000000",
                                previous: "10011000000000",
                            },
                        },
                        type: "received",
                        updated: "2018-12-17T01:59:03.776Z",
                        id: "5c1702e78d9ea3000ea459d9",
                        operatorId: "0",
                        confirmed: true,
                    },
                    Immutable.Map {
                        decimalAmount: "0.0000000001",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780091,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x0000000000000000000000000000000000000000",
                        layer: "baseLayer",
                        sender: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        timestamp: "2018-08-06T02:32:00.000Z",
                        amount: "100000000",
                        symbol: "ETH",
                        recipient: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        type: "received",
                    },
                    Immutable.Map {
                        transfers: Immutable.Map {
                            single: "10000000000000000",
                            total: "10000000000000000",
                        },
                        created: "2018-11-16T22:40:54.951Z",
                        decimalAmount: "0.01",
                        counterpartyAddress: "0xc5768cdeda275fe5536147a3fbc8cfb6b0d8ac48",
                        nonce: 18,
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        layer: "nahmii",
                        sender: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                    Immutable.Map {
                                        originId: "0",
                                        figure: Immutable.Map {
                                            currency: Immutable.Map {
                                                ct: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                                                id: "0",
                                            },
                                            amount: "10000000000000",
                                        },
                                    },
                                ],
                                single: Immutable.Map {
                                    currency: Immutable.Map {
                                        ct: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                                        id: "0",
                                    },
                                    amount: "10000000000000",
                                },
                            },
                            wallet: "0x1c7429f62595097315289cebac1fdbda587ad512",
                            nonce: 3,
                            balances: Immutable.Map {
                                current: "89990000000000000",
                                previous: "100000000000000000",
                            },
                        },
                        timestamp: "2018-11-16T22:40:55.049Z",
                        seals: Immutable.Map {
                            wallet: Immutable.Map {
                                hash: "0x0b7d6d30e9665016246e6370e82579a35bc4d9c0cf88c65b38d538f7ad8ee828",
                                signature: Immutable.Map {
                                    s: "0x7d60c93b9037be6d880bbe86f258d0e371ad4015fc2528cf1312d924f9e76245",
                                    r: "0x9c11c2a5244a741f67837eb6efc1f12396c19d2490ff2bd872dbd9643a7c1013",
                                    v: 27,
                                },
                            },
                            operator: Immutable.Map {
                                hash: "0x92b0e8b3c705449eea1bce2e517468cec521e6451d4a7e6c4fe4c4efe7df6ab4",
                                signature: Immutable.Map {
                                    s: "0x09ad154d886899b36f15a2be68ddb61c15afe185acd498a9b6bb2577f317a942",
                                    r: "0x80d8f5e899f16c9a4abcc72d23399d4ddd3c08a29dae8233a46179ef54cc189c",
                                    v: 27,
                                },
                            },
                        },
                        blockNumber: 3780090,
                        amount: "10000000000000000",
                        symbol: "BOKKY",
                        recipient: Immutable.Map {
                            fees: Immutable.Map {
                                total: Immutable.List [
                                ],
                            },
                            wallet: "0xc5768cdeda275fe5536147a3fbc8cfb6b0d8ac48",
                            nonce: 2,
                            balances: Immutable.Map {
                                current: "10000000000000000",
                                previous: "0",
                            },
                        },
                        type: "sent",
                        updated: "2018-11-16T22:40:55.049Z",
                        id: "5c16d4768d9ea3000ea45690",
                        operatorId: "0",
                        confirmed: true,
                    },
                    Immutable.Map {
                        decimalAmount: "0.000000000000000005",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780089,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        layer: "baseLayer",
                        sender: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        timestamp: "2018-08-06T02:32:00.000Z",
                        amount: "5",
                        symbol: "BOKKY",
                        recipient: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        type: "sent",
                    },
                ],
            },
            balances: Immutable.Map {
                baseLayer: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.198937",
                            currency: "0x0000000000000000000000000000000000000000",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.198937",
                                btc: "0.00198937",
                                usd: "81.962044",
                            },
                        },
                        Immutable.Map {
                            balance: "1.231288e-12",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "1.231288e-13",
                                btc: "1.231288e-15",
                                usd: "1.231288e-12",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1989370000001231288",
                        btc: "0.001989370000001231288",
                        usd: "81.962044000001231288",
                    },
                },
                nahmiiAvailable: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.113",
                        btc: "0.00113",
                        usd: "41.33",
                    },
                },
                nahmiiStaging: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1",
                        btc: "0.001",
                        usd: "41.2",
                    },
                },
                nahmiiStaged: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                    ],
                    total: Immutable.Map {
                        eth: "0",
                        btc: "0",
                        usd: "0",
                    },
                },
                nahmiiCombined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.2",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.2",
                                btc: "0.002",
                                usd: "82.4",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.213",
                        btc: "0.00213",
                        usd: "82.53",
                    },
                },
                combined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.398937",
                            currency: "0x0000000000000000000000000000000000000000",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.398937",
                                btc: "0.00398937",
                                usd: "164.362044",
                            },
                        },
                        Immutable.Map {
                            balance: "0.130000000001231288",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.0130000000001231288",
                                btc: "0.000130000000001231288",
                                usd: "0.130000000001231288",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.4119370000001231288",
                        btc: "0.004119370000001231288",
                        usd: "164.492044000001231288",
                    },
                },
            },
        }
    }
    depositStatus={
        Immutable.Map {
            depositingEth: false,
            approvingTokenDeposit: false,
            completingTokenDeposit: false,
            error: null,
        }
    }
    gasStatistics={
        Immutable.Map {
        }
    }
    goWalletDetails={[Function]}
    intl={
        Object {
            "formatMessage": [Function],
            "formatNumber": [Function],
          }
    }
    ledgerNanoSInfo={
        Immutable.Map {
            status: "disconnected",
            addresses: Immutable.Map {
            },
            id: null,
            confTxOnDevice: false,
        }
    }
    nahmiiDeposit={[Function]}
    prices={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    eth: 0.1,
                    btc: 0.001,
                    usd: 1,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x0000000000000000000000000000000000000000",
                    eth: 1,
                    btc: 0.01,
                    usd: 412,
                },
            ],
        }
    }
    supportedAssets={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    symbol: "My20",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    symbol: "HBT",
                    decimals: 15,
                    color: "0063A5",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    symbol: "SBT",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    symbol: "WETH",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    symbol: "BOKKY",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x0000000000000000000000000000000000000000",
                    symbol: "ETH",
                    decimals: 18,
                    color: "5C78E4",
                },
            ],
        }
    }
    trezorInfo={
        Immutable.Map {
            status: "connected",
            connected: true,
            addresses: Immutable.Map {
            },
            id: "ajlsdfkjas",
            confTxOnDevice: false,
        }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <div
        style={
                Object {
                        "display": "flex",
                        "flex": "1",
                        "flexWrap": "wrap",
                        "marginTop": "0.5rem",
                      }
        }
>
        <div
                style={
                        Object {
                                "flex": "1",
                                "marginBottom": "3rem",
                                "marginRight": "2rem",
                              }
                }
        >
                <Form__FlexForm>
                        <Form__FormItem
                                colon={false}
                                label={
                                        <Form__FormItemLabel>
                                                select_asset_to_deposit
                                        </Form__FormItemLabel>
                                }
                        >
                                <style__Image
                                        alt="logo"
                                        onError={[Function]}
                                        src="/public/images/assets/ETH.svg"
                                />
                                <Select
                                        defaultValue="ETH"
                                        onSelect={[Function]}
                                        style={
                                                Object {
                                                        "paddingLeft": "0.5rem",
                                                      }
                                        }
                                >
                                        <Option
                                                value="ETH"
                                        >
                                                ETH
                                        </Option>
                                        <Option
                                                value="BOKKY"
                                        >
                                                BOKKY
                                        </Option>
                                </Select>
                        </Form__FormItem>
                        <Form__FormItem
                                colon={false}
                                help={
                                        <HelperTextComponent
                                                left="$0.00"
                                                right="usd"
                                        />
                                }
                                label={
                                        <Form__FormItemLabel>
                                                enter_amount
                                        </Form__FormItemLabel>
                                }
                        >
                                <Input
                                        defaultValue="0"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        value="0"
                                />
                        </Form__FormItem>
                        <GasOptions
                                defaultGasLimit={600000}
                                defaultGasPrice={10}
                                defaultOption="average"
                                gasStatistics={undefined}
                                intl={
                                        Object {
                                                "formatMessage": [Function],
                                                "formatNumber": [Function],
                                              }
                                }
                                onChange={[Function]}
                        />
                        <style__DollarPrice>
                                1 ETH = 
                                <style__StyledNumericText
                                        type="currency"
                                        value="412"
                                />
                        </style__DollarPrice>
                </Form__FlexForm>
        </div>
        <div
                style={
                        Object {
                                "minWidth": "34rem",
                              }
                }
        >
                <Row
                        gutter={0}
                >
                        <style__StyledCol
                                span={12}
                        >
                                deposit
                        </style__StyledCol>
                </Row>
                <Row
                        gutter={0}
                >
                        <TransferDescriptionItem
                                main={
                                        <SelectableText>
                                                <NumericText
                                                        maxDecimalPlaces={18}
                                                        value="0"
                                                />
                                                 
                                                ETH
                                        </SelectableText>
                                }
                                subtitle={
                                        <NumericText
                                                type="currency"
                                                value="0"
                                        />
                                }
                        />
                </Row>
                <Row
                        gutter={0}
                >
                        <style__StyledCol
                                span={12}
                        >
                                <TooltipText
                                        details="max_base_layer_fee_explain"
                                >
                                        max_base_layer_fee
                                </TooltipText>
                        </style__StyledCol>
                </Row>
                <Row
                        gutter={0}
                >
                        <TransferDescriptionItem
                                main={
                                        <SelectableText>
                                                <NumericText
                                                        maxDecimalPlaces={18}
                                                        value="0.006"
                                                />
                                                 
                                                ETH
                                        </SelectableText>
                                }
                                subtitle={
                                        <NumericText
                                                type="currency"
                                                value="2.472"
                                        />
                                }
                        />
                </Row>
                <Row
                        gutter={0}
                >
                        <style__StyledCol
                                span={12}
                        >
                                base_layer
                                 ETH 
                                balance_before
                        </style__StyledCol>
                </Row>
                <Row
                        gutter={0}
                >
                        <TransferDescriptionItem
                                main={
                                        <SelectableText>
                                                <NumericText
                                                        maxDecimalPlaces={18}
                                                        value="0.198937"
                                                />
                                                 
                                                ETH
                                        </SelectableText>
                                }
                                subtitle={
                                        <NumericText
                                                type="currency"
                                                value="81.962044"
                                        />
                                }
                        />
                </Row>
                <Row
                        gutter={0}
                >
                        <style__StyledCol
                                span={12}
                        >
                                base_layer
                                 ETH 
                                balance_after
                        </style__StyledCol>
                </Row>
                <Row
                        gutter={0}
                >
                        <TransferDescriptionItem
                                main={
                                        <SelectableText>
                                                <NumericText
                                                        maxDecimalPlaces={18}
                                                        value="0.192937"
                                                />
                                                 
                                                ETH
                                        </SelectableText>
                                }
                                subtitle={
                                        <NumericText
                                                type="currency"
                                                value="79.490044"
                                        />
                                }
                        />
                </Row>
                <div>
                        <Row
                                gutter={0}
                        >
                                <style__StyledCol
                                        span={12}
                                >
                                        nahmii_available
                                         ETH 
                                        balance_before
                                </style__StyledCol>
                        </Row>
                        <Row
                                gutter={0}
                        >
                                <TransferDescriptionItem
                                        main={
                                                <SelectableText>
                                                        <NumericText
                                                                maxDecimalPlaces={18}
                                                                value="0.1"
                                                        />
                                                         
                                                        ETH
                                                </SelectableText>
                                        }
                                        subtitle={
                                                <NumericText
                                                        type="currency"
                                                        value="41.2"
                                                />
                                        }
                                />
                        </Row>
                        <Row
                                gutter={0}
                        >
                                <style__StyledCol
                                        span={12}
                                >
                                        nahmii_available
                                         ETH 
                                        balance_after
                                </style__StyledCol>
                        </Row>
                        <Row
                                gutter={0}
                        >
                                <TransferDescriptionItem
                                        main={
                                                <SelectableText>
                                                        <NumericText
                                                                maxDecimalPlaces={18}
                                                                value="0.1"
                                                        />
                                                         
                                                        ETH
                                                </SelectableText>
                                        }
                                        subtitle={
                                                <NumericText
                                                        type="currency"
                                                        value="41.2"
                                                />
                                        }
                                />
                        </Row>
                </div>
                <Row
                        gutter={0}
                >
                        <style__HWPromptWrapper>
                                <Connect(HWPromptContainer) />
                        </style__HWPromptWrapper>
                        <div
                                style={
                                        Object {
                                                "width": "fit-content",
                                              }
                                }
                        >
                                <style__StyledButton
                                        disabled={true}
                                        onClick={[Function]}
                                        type="primary"
                                >
                                        <span>
                                                deposit
                                        </span>
                                </style__StyledButton>
                        </div>
                </Row>
                <SectionHeading
                        style={
                                Object {
                                        "marginTop": "2rem",
                                        "maxWidth": "25rem",
                                      }
                        }
                >
                        deposits_note
                </SectionHeading>
        </div>
</div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            style={
                        Object {
                                    "flex": "1",
                                    "marginBottom": "3rem",
                                    "marginRight": "2rem",
                                  }
            }
>
            <Form__FlexForm>
                        <Form__FormItem
                                    colon={false}
                                    label={
                                                <Form__FormItemLabel>
                                                            select_asset_to_deposit
                                                </Form__FormItemLabel>
                                    }
                        >
                                    <style__Image
                                                alt="logo"
                                                onError={[Function]}
                                                src="/public/images/assets/ETH.svg"
                                    />
                                    <Select
                                                defaultValue="ETH"
                                                onSelect={[Function]}
                                                style={
                                                            Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                                                }
                                    >
                                                <Option
                                                            value="ETH"
                                                >
                                                            ETH
                                                </Option>
                                                <Option
                                                            value="BOKKY"
                                                >
                                                            BOKKY
                                                </Option>
                                    </Select>
                        </Form__FormItem>
                        <Form__FormItem
                                    colon={false}
                                    help={
                                                <HelperTextComponent
                                                            left="$0.00"
                                                            right="usd"
                                                />
                                    }
                                    label={
                                                <Form__FormItemLabel>
                                                            enter_amount
                                                </Form__FormItemLabel>
                                    }
                        >
                                    <Input
                                                defaultValue="0"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value="0"
                                    />
                        </Form__FormItem>
                        <GasOptions
                                    defaultGasLimit={600000}
                                    defaultGasPrice={10}
                                    defaultOption="average"
                                    gasStatistics={undefined}
                                    intl={
                                                Object {
                                                            "formatMessage": [Function],
                                                            "formatNumber": [Function],
                                                          }
                                    }
                                    onChange={[Function]}
                        />
                        <style__DollarPrice>
                                    1 ETH = 
                                    <style__StyledNumericText
                                                type="currency"
                                                value="412"
                                    />
                        </style__DollarPrice>
            </Form__FlexForm>
</div>,
          <div
            style={
                        Object {
                                    "minWidth": "34rem",
                                  }
            }
>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    deposit
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main={
                                                <SelectableText>
                                                            <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0"
                                                            />
                                                             
                                                            ETH
                                                </SelectableText>
                                    }
                                    subtitle={
                                                <NumericText
                                                            type="currency"
                                                            value="0"
                                                />
                                    }
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    <TooltipText
                                                details="max_base_layer_fee_explain"
                                    >
                                                max_base_layer_fee
                                    </TooltipText>
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main={
                                                <SelectableText>
                                                            <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.006"
                                                            />
                                                             
                                                            ETH
                                                </SelectableText>
                                    }
                                    subtitle={
                                                <NumericText
                                                            type="currency"
                                                            value="2.472"
                                                />
                                    }
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    base_layer
                                     ETH 
                                    balance_before
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main={
                                                <SelectableText>
                                                            <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.198937"
                                                            />
                                                             
                                                            ETH
                                                </SelectableText>
                                    }
                                    subtitle={
                                                <NumericText
                                                            type="currency"
                                                            value="81.962044"
                                                />
                                    }
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    base_layer
                                     ETH 
                                    balance_after
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main={
                                                <SelectableText>
                                                            <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.192937"
                                                            />
                                                             
                                                            ETH
                                                </SelectableText>
                                    }
                                    subtitle={
                                                <NumericText
                                                            type="currency"
                                                            value="79.490044"
                                                />
                                    }
                        />
            </Row>
            <div>
                        <Row
                                    gutter={0}
                        >
                                    <style__StyledCol
                                                span={12}
                                    >
                                                nahmii_available
                                                 ETH 
                                                balance_before
                                    </style__StyledCol>
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <TransferDescriptionItem
                                                main={
                                                            <SelectableText>
                                                                        <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.1"
                                                                        />
                                                                         
                                                                        ETH
                                                            </SelectableText>
                                                }
                                                subtitle={
                                                            <NumericText
                                                                        type="currency"
                                                                        value="41.2"
                                                            />
                                                }
                                    />
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <style__StyledCol
                                                span={12}
                                    >
                                                nahmii_available
                                                 ETH 
                                                balance_after
                                    </style__StyledCol>
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <TransferDescriptionItem
                                                main={
                                                            <SelectableText>
                                                                        <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.1"
                                                                        />
                                                                         
                                                                        ETH
                                                            </SelectableText>
                                                }
                                                subtitle={
                                                            <NumericText
                                                                        type="currency"
                                                                        value="41.2"
                                                            />
                                                }
                                    />
                        </Row>
            </div>
            <Row
                        gutter={0}
            >
                        <style__HWPromptWrapper>
                                    <Connect(HWPromptContainer) />
                        </style__HWPromptWrapper>
                        <div
                                    style={
                                                Object {
                                                            "width": "fit-content",
                                                          }
                                    }
                        >
                                    <style__StyledButton
                                                disabled={true}
                                                onClick={[Function]}
                                                type="primary"
                                    >
                                                <span>
                                                            deposit
                                                </span>
                                    </style__StyledButton>
                        </div>
            </Row>
            <SectionHeading
                        style={
                                    Object {
                                                "marginTop": "2rem",
                                                "maxWidth": "25rem",
                                              }
                        }
            >
                        deposits_note
            </SectionHeading>
</div>,
        ],
        "style": Object {
          "display": "flex",
          "flex": "1",
          "flexWrap": "wrap",
          "marginTop": "0.5rem",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Form__FlexForm>
              <Form__FormItem
                            colon={false}
                            label={
                                          <Form__FormItemLabel>
                                                        select_asset_to_deposit
                                          </Form__FormItemLabel>
                            }
              >
                            <style__Image
                                          alt="logo"
                                          onError={[Function]}
                                          src="/public/images/assets/ETH.svg"
                            />
                            <Select
                                          defaultValue="ETH"
                                          onSelect={[Function]}
                                          style={
                                                        Object {
                                                                      "paddingLeft": "0.5rem",
                                                                    }
                                          }
                            >
                                          <Option
                                                        value="ETH"
                                          >
                                                        ETH
                                          </Option>
                                          <Option
                                                        value="BOKKY"
                                          >
                                                        BOKKY
                                          </Option>
                            </Select>
              </Form__FormItem>
              <Form__FormItem
                            colon={false}
                            help={
                                          <HelperTextComponent
                                                        left="$0.00"
                                                        right="usd"
                                          />
                            }
                            label={
                                          <Form__FormItemLabel>
                                                        enter_amount
                                          </Form__FormItemLabel>
                            }
              >
                            <Input
                                          defaultValue="0"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          value="0"
                            />
              </Form__FormItem>
              <GasOptions
                            defaultGasLimit={600000}
                            defaultGasPrice={10}
                            defaultOption="average"
                            gasStatistics={undefined}
                            intl={
                                          Object {
                                                        "formatMessage": [Function],
                                                        "formatNumber": [Function],
                                                      }
                            }
                            onChange={[Function]}
              />
              <style__DollarPrice>
                            1 ETH = 
                            <style__StyledNumericText
                                          type="currency"
                                          value="412"
                            />
              </style__DollarPrice>
</Form__FlexForm>,
            "style": Object {
              "flex": "1",
              "marginBottom": "3rem",
              "marginRight": "2rem",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Form__FormItem
                  colon={false}
                  label={
                                    <Form__FormItemLabel>
                                                      select_asset_to_deposit
                                    </Form__FormItemLabel>
                  }
>
                  <style__Image
                                    alt="logo"
                                    onError={[Function]}
                                    src="/public/images/assets/ETH.svg"
                  />
                  <Select
                                    defaultValue="ETH"
                                    onSelect={[Function]}
                                    style={
                                                      Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                                    }
                  >
                                    <Option
                                                      value="ETH"
                                    >
                                                      ETH
                                    </Option>
                                    <Option
                                                      value="BOKKY"
                                    >
                                                      BOKKY
                                    </Option>
                  </Select>
</Form__FormItem>,
                <Form__FormItem
                  colon={false}
                  help={
                                    <HelperTextComponent
                                                      left="$0.00"
                                                      right="usd"
                                    />
                  }
                  label={
                                    <Form__FormItemLabel>
                                                      enter_amount
                                    </Form__FormItemLabel>
                  }
>
                  <Input
                                    defaultValue="0"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    value="0"
                  />
</Form__FormItem>,
                <GasOptions
                  defaultGasLimit={600000}
                  defaultGasPrice={10}
                  defaultOption="average"
                  gasStatistics={undefined}
                  intl={
                                    Object {
                                                      "formatMessage": [Function],
                                                      "formatNumber": [Function],
                                                    }
                  }
                  onChange={[Function]}
/>,
                <style__DollarPrice>
                  1 ETH = 
                  <style__StyledNumericText
                                    type="currency"
                                    value="412"
                  />
</style__DollarPrice>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <style__Image
                      alt="logo"
                      onError={[Function]}
                      src="/public/images/assets/ETH.svg"
/>,
                    <Select
                      defaultValue="ETH"
                      onSelect={[Function]}
                      style={
                                            Object {
                                                                  "paddingLeft": "0.5rem",
                                                                }
                      }
>
                      <Option
                                            value="ETH"
                      >
                                            ETH
                      </Option>
                      <Option
                                            value="BOKKY"
                      >
                                            BOKKY
                      </Option>
</Select>,
                  ],
                  "colon": false,
                  "label": <Form__FormItemLabel>
                    select_asset_to_deposit
</Form__FormItemLabel>,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "alt": "logo",
                      "onError": [Function],
                      "src": "/public/images/assets/ETH.svg",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <Option
                          value="ETH"
>
                          ETH
</Option>,
                        <Option
                          value="BOKKY"
>
                          BOKKY
</Option>,
                      ],
                      "defaultValue": "ETH",
                      "onSelect": [Function],
                      "style": Object {
                        "paddingLeft": "0.5rem",
                      },
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": "ETH",
                        "nodeType": "class",
                        "props": Object {
                          "children": "ETH",
                          "value": "ETH",
                        },
                        "ref": null,
                        "rendered": "ETH",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": "BOKKY",
                        "nodeType": "class",
                        "props": Object {
                          "children": "BOKKY",
                          "value": "BOKKY",
                        },
                        "ref": null,
                        "rendered": "BOKKY",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Input
                    defaultValue="0"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    value="0"
/>,
                  "colon": false,
                  "help": <HelperTextComponent
                    left="$0.00"
                    right="usd"
/>,
                  "label": <Form__FormItemLabel>
                    enter_amount
</Form__FormItemLabel>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "defaultValue": "0",
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "0",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "defaultGasLimit": 600000,
                  "defaultGasPrice": 10,
                  "defaultOption": "average",
                  "gasStatistics": undefined,
                  "intl": Object {
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                  },
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "1 ETH = ",
                    <style__StyledNumericText
                      type="currency"
                      value="412"
/>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "1 ETH = ",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "type": "currency",
                      "value": "412",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                deposit
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main={
                                                <SelectableText>
                                                                <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0"
                                                                />
                                                                 
                                                                ETH
                                                </SelectableText>
                                }
                                subtitle={
                                                <NumericText
                                                                type="currency"
                                                                value="0"
                                                />
                                }
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                <TooltipText
                                                details="max_base_layer_fee_explain"
                                >
                                                max_base_layer_fee
                                </TooltipText>
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main={
                                                <SelectableText>
                                                                <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.006"
                                                                />
                                                                 
                                                                ETH
                                                </SelectableText>
                                }
                                subtitle={
                                                <NumericText
                                                                type="currency"
                                                                value="2.472"
                                                />
                                }
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                base_layer
                                 ETH 
                                balance_before
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main={
                                                <SelectableText>
                                                                <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.198937"
                                                                />
                                                                 
                                                                ETH
                                                </SelectableText>
                                }
                                subtitle={
                                                <NumericText
                                                                type="currency"
                                                                value="81.962044"
                                                />
                                }
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                base_layer
                                 ETH 
                                balance_after
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main={
                                                <SelectableText>
                                                                <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.192937"
                                                                />
                                                                 
                                                                ETH
                                                </SelectableText>
                                }
                                subtitle={
                                                <NumericText
                                                                type="currency"
                                                                value="79.490044"
                                                />
                                }
                />
</Row>,
              <div>
                <Row
                                gutter={0}
                >
                                <style__StyledCol
                                                span={12}
                                >
                                                nahmii_available
                                                 ETH 
                                                balance_before
                                </style__StyledCol>
                </Row>
                <Row
                                gutter={0}
                >
                                <TransferDescriptionItem
                                                main={
                                                                <SelectableText>
                                                                                <NumericText
                                                                                                maxDecimalPlaces={18}
                                                                                                value="0.1"
                                                                                />
                                                                                 
                                                                                ETH
                                                                </SelectableText>
                                                }
                                                subtitle={
                                                                <NumericText
                                                                                type="currency"
                                                                                value="41.2"
                                                                />
                                                }
                                />
                </Row>
                <Row
                                gutter={0}
                >
                                <style__StyledCol
                                                span={12}
                                >
                                                nahmii_available
                                                 ETH 
                                                balance_after
                                </style__StyledCol>
                </Row>
                <Row
                                gutter={0}
                >
                                <TransferDescriptionItem
                                                main={
                                                                <SelectableText>
                                                                                <NumericText
                                                                                                maxDecimalPlaces={18}
                                                                                                value="0.1"
                                                                                />
                                                                                 
                                                                                ETH
                                                                </SelectableText>
                                                }
                                                subtitle={
                                                                <NumericText
                                                                                type="currency"
                                                                                value="41.2"
                                                                />
                                                }
                                />
                </Row>
</div>,
              false,
              <Row
                gutter={0}
>
                <style__HWPromptWrapper>
                                <Connect(HWPromptContainer) />
                </style__HWPromptWrapper>
                <div
                                style={
                                                Object {
                                                                "width": "fit-content",
                                                              }
                                }
                >
                                <style__StyledButton
                                                disabled={true}
                                                onClick={[Function]}
                                                type="primary"
                                >
                                                <span>
                                                                deposit
                                                </span>
                                </style__StyledButton>
                </div>
</Row>,
              <SectionHeading
                style={
                                Object {
                                                "marginTop": "2rem",
                                                "maxWidth": "25rem",
                                              }
                }
>
                deposits_note
</SectionHeading>,
            ],
            "style": Object {
              "minWidth": "34rem",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  deposit
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "deposit",
                  "span": 12,
                },
                "ref": null,
                "rendered": "deposit",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main={
                                    <SelectableText>
                                                      <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0"
                                                      />
                                                       
                                                      ETH
                                    </SelectableText>
                  }
                  subtitle={
                                    <NumericText
                                                      type="currency"
                                                      value="0"
                                    />
                  }
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": <SelectableText>
                    <NumericText
                                        maxDecimalPlaces={18}
                                        value="0"
                    />
                     
                    ETH
</SelectableText>,
                  "subtitle": <NumericText
                    type="currency"
                    value="0"
/>,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  <TooltipText
                                    details="max_base_layer_fee_explain"
                  >
                                    max_base_layer_fee
                  </TooltipText>
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TooltipText
                    details="max_base_layer_fee_explain"
>
                    max_base_layer_fee
</TooltipText>,
                  "span": 12,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "max_base_layer_fee",
                    "details": "max_base_layer_fee_explain",
                  },
                  "ref": null,
                  "rendered": "max_base_layer_fee",
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main={
                                    <SelectableText>
                                                      <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.006"
                                                      />
                                                       
                                                      ETH
                                    </SelectableText>
                  }
                  subtitle={
                                    <NumericText
                                                      type="currency"
                                                      value="2.472"
                                    />
                  }
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": <SelectableText>
                    <NumericText
                                        maxDecimalPlaces={18}
                                        value="0.006"
                    />
                     
                    ETH
</SelectableText>,
                  "subtitle": <NumericText
                    type="currency"
                    value="2.472"
/>,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  base_layer
                   ETH 
                  balance_before
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "base_layer",
                    " ETH ",
                    "balance_before",
                  ],
                  "span": 12,
                },
                "ref": null,
                "rendered": Array [
                  "base_layer",
                  " ETH ",
                  "balance_before",
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main={
                                    <SelectableText>
                                                      <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.198937"
                                                      />
                                                       
                                                      ETH
                                    </SelectableText>
                  }
                  subtitle={
                                    <NumericText
                                                      type="currency"
                                                      value="81.962044"
                                    />
                  }
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": <SelectableText>
                    <NumericText
                                        maxDecimalPlaces={18}
                                        value="0.198937"
                    />
                     
                    ETH
</SelectableText>,
                  "subtitle": <NumericText
                    type="currency"
                    value="81.962044"
/>,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  base_layer
                   ETH 
                  balance_after
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "base_layer",
                    " ETH ",
                    "balance_after",
                  ],
                  "span": 12,
                },
                "ref": null,
                "rendered": Array [
                  "base_layer",
                  " ETH ",
                  "balance_after",
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main={
                                    <SelectableText>
                                                      <NumericText
                                                                        maxDecimalPlaces={18}
                                                                        value="0.192937"
                                                      />
                                                       
                                                      ETH
                                    </SelectableText>
                  }
                  subtitle={
                                    <NumericText
                                                      type="currency"
                                                      value="79.490044"
                                    />
                  }
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": <SelectableText>
                    <NumericText
                                        maxDecimalPlaces={18}
                                        value="0.192937"
                    />
                     
                    ETH
</SelectableText>,
                  "subtitle": <NumericText
                    type="currency"
                    value="79.490044"
/>,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Row
                    gutter={0}
>
                    <style__StyledCol
                                        span={12}
                    >
                                        nahmii_available
                                         ETH 
                                        balance_before
                    </style__StyledCol>
</Row>,
                  <Row
                    gutter={0}
>
                    <TransferDescriptionItem
                                        main={
                                                            <SelectableText>
                                                                                <NumericText
                                                                                                    maxDecimalPlaces={18}
                                                                                                    value="0.1"
                                                                                />
                                                                                 
                                                                                ETH
                                                            </SelectableText>
                                        }
                                        subtitle={
                                                            <NumericText
                                                                                type="currency"
                                                                                value="41.2"
                                                            />
                                        }
                    />
</Row>,
                  <Row
                    gutter={0}
>
                    <style__StyledCol
                                        span={12}
                    >
                                        nahmii_available
                                         ETH 
                                        balance_after
                    </style__StyledCol>
</Row>,
                  <Row
                    gutter={0}
>
                    <TransferDescriptionItem
                                        main={
                                                            <SelectableText>
                                                                                <NumericText
                                                                                                    maxDecimalPlaces={18}
                                                                                                    value="0.1"
                                                                                />
                                                                                 
                                                                                ETH
                                                            </SelectableText>
                                        }
                                        subtitle={
                                                            <NumericText
                                                                                type="currency"
                                                                                value="41.2"
                                                            />
                                        }
                    />
</Row>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <style__StyledCol
                      span={12}
>
                      nahmii_available
                       ETH 
                      balance_before
</style__StyledCol>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "nahmii_available",
                        " ETH ",
                        "balance_before",
                      ],
                      "span": 12,
                    },
                    "ref": null,
                    "rendered": Array [
                      "nahmii_available",
                      " ETH ",
                      "balance_before",
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TransferDescriptionItem
                      main={
                                            <SelectableText>
                                                                  <NumericText
                                                                                        maxDecimalPlaces={18}
                                                                                        value="0.1"
                                                                  />
                                                                   
                                                                  ETH
                                            </SelectableText>
                      }
                      subtitle={
                                            <NumericText
                                                                  type="currency"
                                                                  value="41.2"
                                            />
                      }
/>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "main": <SelectableText>
                        <NumericText
                                                maxDecimalPlaces={18}
                                                value="0.1"
                        />
                         
                        ETH
</SelectableText>,
                      "subtitle": <NumericText
                        type="currency"
                        value="41.2"
/>,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <style__StyledCol
                      span={12}
>
                      nahmii_available
                       ETH 
                      balance_after
</style__StyledCol>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "nahmii_available",
                        " ETH ",
                        "balance_after",
                      ],
                      "span": 12,
                    },
                    "ref": null,
                    "rendered": Array [
                      "nahmii_available",
                      " ETH ",
                      "balance_after",
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TransferDescriptionItem
                      main={
                                            <SelectableText>
                                                                  <NumericText
                                                                                        maxDecimalPlaces={18}
                                                                                        value="0.1"
                                                                  />
                                                                   
                                                                  ETH
                                            </SelectableText>
                      }
                      subtitle={
                                            <NumericText
                                                                  type="currency"
                                                                  value="41.2"
                                            />
                      }
/>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "main": <SelectableText>
                        <NumericText
                                                maxDecimalPlaces={18}
                                                value="0.1"
                        />
                         
                        ETH
</SelectableText>,
                      "subtitle": <NumericText
                        type="currency"
                        value="41.2"
/>,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <style__HWPromptWrapper>
                    <Connect(HWPromptContainer) />
</style__HWPromptWrapper>,
                  <div
                    style={
                                        Object {
                                                            "width": "fit-content",
                                                          }
                    }
>
                    <style__StyledButton
                                        disabled={true}
                                        onClick={[Function]}
                                        type="primary"
                    >
                                        <span>
                                                            deposit
                                        </span>
                    </style__StyledButton>
</div>,
                ],
                "gutter": 0,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Connect(HWPromptContainer) />,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <style__StyledButton
                      disabled={true}
                      onClick={[Function]}
                      type="primary"
>
                      <span>
                                            deposit
                      </span>
</style__StyledButton>,
                    "style": Object {
                      "width": "fit-content",
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <span>
                        deposit
</span>,
                      "disabled": true,
                      "onClick": [Function],
                      "type": "primary",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "deposit",
                      },
                      "ref": null,
                      "rendered": "deposit",
                      "type": "span",
                    },
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "deposits_note",
                "style": Object {
                  "marginTop": "2rem",
                  "maxWidth": "25rem",
                },
              },
              "ref": null,
              "rendered": "deposits_note",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          style={
                    Object {
                              "display": "flex",
                              "flex": "1",
                              "flexWrap": "wrap",
                              "marginTop": "0.5rem",
                            }
          }
>
          <div
                    style={
                              Object {
                                        "flex": "1",
                                        "marginBottom": "3rem",
                                        "marginRight": "2rem",
                                      }
                    }
          >
                    <Form__FlexForm>
                              <Form__FormItem
                                        colon={false}
                                        label={
                                                  <Form__FormItemLabel>
                                                            select_asset_to_deposit
                                                  </Form__FormItemLabel>
                                        }
                              >
                                        <style__Image
                                                  alt="logo"
                                                  onError={[Function]}
                                                  src="/public/images/assets/ETH.svg"
                                        />
                                        <Select
                                                  defaultValue="ETH"
                                                  onSelect={[Function]}
                                                  style={
                                                            Object {
                                                                      "paddingLeft": "0.5rem",
                                                                    }
                                                  }
                                        >
                                                  <Option
                                                            value="ETH"
                                                  >
                                                            ETH
                                                  </Option>
                                                  <Option
                                                            value="BOKKY"
                                                  >
                                                            BOKKY
                                                  </Option>
                                        </Select>
                              </Form__FormItem>
                              <Form__FormItem
                                        colon={false}
                                        help={
                                                  <HelperTextComponent
                                                            left="$0.00"
                                                            right="usd"
                                                  />
                                        }
                                        label={
                                                  <Form__FormItemLabel>
                                                            enter_amount
                                                  </Form__FormItemLabel>
                                        }
                              >
                                        <Input
                                                  defaultValue="0"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  value="0"
                                        />
                              </Form__FormItem>
                              <GasOptions
                                        defaultGasLimit={600000}
                                        defaultGasPrice={10}
                                        defaultOption="average"
                                        gasStatistics={undefined}
                                        intl={
                                                  Object {
                                                            "formatMessage": [Function],
                                                            "formatNumber": [Function],
                                                          }
                                        }
                                        onChange={[Function]}
                              />
                              <style__DollarPrice>
                                        1 ETH = 
                                        <style__StyledNumericText
                                                  type="currency"
                                                  value="412"
                                        />
                              </style__DollarPrice>
                    </Form__FlexForm>
          </div>
          <div
                    style={
                              Object {
                                        "minWidth": "34rem",
                                      }
                    }
          >
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        deposit
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main={
                                                  <SelectableText>
                                                            <NumericText
                                                                      maxDecimalPlaces={18}
                                                                      value="0"
                                                            />
                                                             
                                                            ETH
                                                  </SelectableText>
                                        }
                                        subtitle={
                                                  <NumericText
                                                            type="currency"
                                                            value="0"
                                                  />
                                        }
                              />
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        <TooltipText
                                                  details="max_base_layer_fee_explain"
                                        >
                                                  max_base_layer_fee
                                        </TooltipText>
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main={
                                                  <SelectableText>
                                                            <NumericText
                                                                      maxDecimalPlaces={18}
                                                                      value="0.006"
                                                            />
                                                             
                                                            ETH
                                                  </SelectableText>
                                        }
                                        subtitle={
                                                  <NumericText
                                                            type="currency"
                                                            value="2.472"
                                                  />
                                        }
                              />
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        base_layer
                                         ETH 
                                        balance_before
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main={
                                                  <SelectableText>
                                                            <NumericText
                                                                      maxDecimalPlaces={18}
                                                                      value="0.198937"
                                                            />
                                                             
                                                            ETH
                                                  </SelectableText>
                                        }
                                        subtitle={
                                                  <NumericText
                                                            type="currency"
                                                            value="81.962044"
                                                  />
                                        }
                              />
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        base_layer
                                         ETH 
                                        balance_after
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main={
                                                  <SelectableText>
                                                            <NumericText
                                                                      maxDecimalPlaces={18}
                                                                      value="0.192937"
                                                            />
                                                             
                                                            ETH
                                                  </SelectableText>
                                        }
                                        subtitle={
                                                  <NumericText
                                                            type="currency"
                                                            value="79.490044"
                                                  />
                                        }
                              />
                    </Row>
                    <div>
                              <Row
                                        gutter={0}
                              >
                                        <style__StyledCol
                                                  span={12}
                                        >
                                                  nahmii_available
                                                   ETH 
                                                  balance_before
                                        </style__StyledCol>
                              </Row>
                              <Row
                                        gutter={0}
                              >
                                        <TransferDescriptionItem
                                                  main={
                                                            <SelectableText>
                                                                      <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.1"
                                                                      />
                                                                       
                                                                      ETH
                                                            </SelectableText>
                                                  }
                                                  subtitle={
                                                            <NumericText
                                                                      type="currency"
                                                                      value="41.2"
                                                            />
                                                  }
                                        />
                              </Row>
                              <Row
                                        gutter={0}
                              >
                                        <style__StyledCol
                                                  span={12}
                                        >
                                                  nahmii_available
                                                   ETH 
                                                  balance_after
                                        </style__StyledCol>
                              </Row>
                              <Row
                                        gutter={0}
                              >
                                        <TransferDescriptionItem
                                                  main={
                                                            <SelectableText>
                                                                      <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.1"
                                                                      />
                                                                       
                                                                      ETH
                                                            </SelectableText>
                                                  }
                                                  subtitle={
                                                            <NumericText
                                                                      type="currency"
                                                                      value="41.2"
                                                            />
                                                  }
                                        />
                              </Row>
                    </div>
                    <Row
                              gutter={0}
                    >
                              <style__HWPromptWrapper>
                                        <Connect(HWPromptContainer) />
                              </style__HWPromptWrapper>
                              <div
                                        style={
                                                  Object {
                                                            "width": "fit-content",
                                                          }
                                        }
                              >
                                        <style__StyledButton
                                                  disabled={true}
                                                  onClick={[Function]}
                                                  type="primary"
                                        >
                                                  <span>
                                                            deposit
                                                  </span>
                                        </style__StyledButton>
                              </div>
                    </Row>
                    <SectionHeading
                              style={
                                        Object {
                                                  "marginTop": "2rem",
                                                  "maxWidth": "25rem",
                                                }
                              }
                    >
                              deposits_note
                    </SectionHeading>
          </div>
</div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              style={
                            Object {
                                          "flex": "1",
                                          "marginBottom": "3rem",
                                          "marginRight": "2rem",
                                        }
              }
>
              <Form__FlexForm>
                            <Form__FormItem
                                          colon={false}
                                          label={
                                                        <Form__FormItemLabel>
                                                                      select_asset_to_deposit
                                                        </Form__FormItemLabel>
                                          }
                            >
                                          <style__Image
                                                        alt="logo"
                                                        onError={[Function]}
                                                        src="/public/images/assets/ETH.svg"
                                          />
                                          <Select
                                                        defaultValue="ETH"
                                                        onSelect={[Function]}
                                                        style={
                                                                      Object {
                                                                                    "paddingLeft": "0.5rem",
                                                                                  }
                                                        }
                                          >
                                                        <Option
                                                                      value="ETH"
                                                        >
                                                                      ETH
                                                        </Option>
                                                        <Option
                                                                      value="BOKKY"
                                                        >
                                                                      BOKKY
                                                        </Option>
                                          </Select>
                            </Form__FormItem>
                            <Form__FormItem
                                          colon={false}
                                          help={
                                                        <HelperTextComponent
                                                                      left="$0.00"
                                                                      right="usd"
                                                        />
                                          }
                                          label={
                                                        <Form__FormItemLabel>
                                                                      enter_amount
                                                        </Form__FormItemLabel>
                                          }
                            >
                                          <Input
                                                        defaultValue="0"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        value="0"
                                          />
                            </Form__FormItem>
                            <GasOptions
                                          defaultGasLimit={600000}
                                          defaultGasPrice={10}
                                          defaultOption="average"
                                          gasStatistics={undefined}
                                          intl={
                                                        Object {
                                                                      "formatMessage": [Function],
                                                                      "formatNumber": [Function],
                                                                    }
                                          }
                                          onChange={[Function]}
                            />
                            <style__DollarPrice>
                                          1 ETH = 
                                          <style__StyledNumericText
                                                        type="currency"
                                                        value="412"
                                          />
                            </style__DollarPrice>
              </Form__FlexForm>
</div>,
            <div
              style={
                            Object {
                                          "minWidth": "34rem",
                                        }
              }
>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          deposit
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main={
                                                        <SelectableText>
                                                                      <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0"
                                                                      />
                                                                       
                                                                      ETH
                                                        </SelectableText>
                                          }
                                          subtitle={
                                                        <NumericText
                                                                      type="currency"
                                                                      value="0"
                                                        />
                                          }
                            />
              </Row>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          <TooltipText
                                                        details="max_base_layer_fee_explain"
                                          >
                                                        max_base_layer_fee
                                          </TooltipText>
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main={
                                                        <SelectableText>
                                                                      <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.006"
                                                                      />
                                                                       
                                                                      ETH
                                                        </SelectableText>
                                          }
                                          subtitle={
                                                        <NumericText
                                                                      type="currency"
                                                                      value="2.472"
                                                        />
                                          }
                            />
              </Row>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          base_layer
                                           ETH 
                                          balance_before
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main={
                                                        <SelectableText>
                                                                      <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.198937"
                                                                      />
                                                                       
                                                                      ETH
                                                        </SelectableText>
                                          }
                                          subtitle={
                                                        <NumericText
                                                                      type="currency"
                                                                      value="81.962044"
                                                        />
                                          }
                            />
              </Row>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          base_layer
                                           ETH 
                                          balance_after
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main={
                                                        <SelectableText>
                                                                      <NumericText
                                                                                    maxDecimalPlaces={18}
                                                                                    value="0.192937"
                                                                      />
                                                                       
                                                                      ETH
                                                        </SelectableText>
                                          }
                                          subtitle={
                                                        <NumericText
                                                                      type="currency"
                                                                      value="79.490044"
                                                        />
                                          }
                            />
              </Row>
              <div>
                            <Row
                                          gutter={0}
                            >
                                          <style__StyledCol
                                                        span={12}
                                          >
                                                        nahmii_available
                                                         ETH 
                                                        balance_before
                                          </style__StyledCol>
                            </Row>
                            <Row
                                          gutter={0}
                            >
                                          <TransferDescriptionItem
                                                        main={
                                                                      <SelectableText>
                                                                                    <NumericText
                                                                                                  maxDecimalPlaces={18}
                                                                                                  value="0.1"
                                                                                    />
                                                                                     
                                                                                    ETH
                                                                      </SelectableText>
                                                        }
                                                        subtitle={
                                                                      <NumericText
                                                                                    type="currency"
                                                                                    value="41.2"
                                                                      />
                                                        }
                                          />
                            </Row>
                            <Row
                                          gutter={0}
                            >
                                          <style__StyledCol
                                                        span={12}
                                          >
                                                        nahmii_available
                                                         ETH 
                                                        balance_after
                                          </style__StyledCol>
                            </Row>
                            <Row
                                          gutter={0}
                            >
                                          <TransferDescriptionItem
                                                        main={
                                                                      <SelectableText>
                                                                                    <NumericText
                                                                                                  maxDecimalPlaces={18}
                                                                                                  value="0.1"
                                                                                    />
                                                                                     
                                                                                    ETH
                                                                      </SelectableText>
                                                        }
                                                        subtitle={
                                                                      <NumericText
                                                                                    type="currency"
                                                                                    value="41.2"
                                                                      />
                                                        }
                                          />
                            </Row>
              </div>
              <Row
                            gutter={0}
              >
                            <style__HWPromptWrapper>
                                          <Connect(HWPromptContainer) />
                            </style__HWPromptWrapper>
                            <div
                                          style={
                                                        Object {
                                                                      "width": "fit-content",
                                                                    }
                                          }
                            >
                                          <style__StyledButton
                                                        disabled={true}
                                                        onClick={[Function]}
                                                        type="primary"
                                          >
                                                        <span>
                                                                      deposit
                                                        </span>
                                          </style__StyledButton>
                            </div>
              </Row>
              <SectionHeading
                            style={
                                          Object {
                                                        "marginTop": "2rem",
                                                        "maxWidth": "25rem",
                                                      }
                            }
              >
                            deposits_note
              </SectionHeading>
</div>,
          ],
          "style": Object {
            "display": "flex",
            "flex": "1",
            "flexWrap": "wrap",
            "marginTop": "0.5rem",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Form__FlexForm>
                <Form__FormItem
                                colon={false}
                                label={
                                                <Form__FormItemLabel>
                                                                select_asset_to_deposit
                                                </Form__FormItemLabel>
                                }
                >
                                <style__Image
                                                alt="logo"
                                                onError={[Function]}
                                                src="/public/images/assets/ETH.svg"
                                />
                                <Select
                                                defaultValue="ETH"
                                                onSelect={[Function]}
                                                style={
                                                                Object {
                                                                                "paddingLeft": "0.5rem",
                                                                              }
                                                }
                                >
                                                <Option
                                                                value="ETH"
                                                >
                                                                ETH
                                                </Option>
                                                <Option
                                                                value="BOKKY"
                                                >
                                                                BOKKY
                                                </Option>
                                </Select>
                </Form__FormItem>
                <Form__FormItem
                                colon={false}
                                help={
                                                <HelperTextComponent
                                                                left="$0.00"
                                                                right="usd"
                                                />
                                }
                                label={
                                                <Form__FormItemLabel>
                                                                enter_amount
                                                </Form__FormItemLabel>
                                }
                >
                                <Input
                                                defaultValue="0"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value="0"
                                />
                </Form__FormItem>
                <GasOptions
                                defaultGasLimit={600000}
                                defaultGasPrice={10}
                                defaultOption="average"
                                gasStatistics={undefined}
                                intl={
                                                Object {
                                                                "formatMessage": [Function],
                                                                "formatNumber": [Function],
                                                              }
                                }
                                onChange={[Function]}
                />
                <style__DollarPrice>
                                1 ETH = 
                                <style__StyledNumericText
                                                type="currency"
                                                value="412"
                                />
                </style__DollarPrice>
</Form__FlexForm>,
              "style": Object {
                "flex": "1",
                "marginBottom": "3rem",
                "marginRight": "2rem",
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Form__FormItem
                    colon={false}
                    label={
                                        <Form__FormItemLabel>
                                                            select_asset_to_deposit
                                        </Form__FormItemLabel>
                    }
>
                    <style__Image
                                        alt="logo"
                                        onError={[Function]}
                                        src="/public/images/assets/ETH.svg"
                    />
                    <Select
                                        defaultValue="ETH"
                                        onSelect={[Function]}
                                        style={
                                                            Object {
                                                                                "paddingLeft": "0.5rem",
                                                                              }
                                        }
                    >
                                        <Option
                                                            value="ETH"
                                        >
                                                            ETH
                                        </Option>
                                        <Option
                                                            value="BOKKY"
                                        >
                                                            BOKKY
                                        </Option>
                    </Select>
</Form__FormItem>,
                  <Form__FormItem
                    colon={false}
                    help={
                                        <HelperTextComponent
                                                            left="$0.00"
                                                            right="usd"
                                        />
                    }
                    label={
                                        <Form__FormItemLabel>
                                                            enter_amount
                                        </Form__FormItemLabel>
                    }
>
                    <Input
                                        defaultValue="0"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        value="0"
                    />
</Form__FormItem>,
                  <GasOptions
                    defaultGasLimit={600000}
                    defaultGasPrice={10}
                    defaultOption="average"
                    gasStatistics={undefined}
                    intl={
                                        Object {
                                                            "formatMessage": [Function],
                                                            "formatNumber": [Function],
                                                          }
                    }
                    onChange={[Function]}
/>,
                  <style__DollarPrice>
                    1 ETH = 
                    <style__StyledNumericText
                                        type="currency"
                                        value="412"
                    />
</style__DollarPrice>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <style__Image
                        alt="logo"
                        onError={[Function]}
                        src="/public/images/assets/ETH.svg"
/>,
                      <Select
                        defaultValue="ETH"
                        onSelect={[Function]}
                        style={
                                                Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                        }
>
                        <Option
                                                value="ETH"
                        >
                                                ETH
                        </Option>
                        <Option
                                                value="BOKKY"
                        >
                                                BOKKY
                        </Option>
</Select>,
                    ],
                    "colon": false,
                    "label": <Form__FormItemLabel>
                      select_asset_to_deposit
</Form__FormItemLabel>,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "alt": "logo",
                        "onError": [Function],
                        "src": "/public/images/assets/ETH.svg",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          <Option
                            value="ETH"
>
                            ETH
</Option>,
                          <Option
                            value="BOKKY"
>
                            BOKKY
</Option>,
                        ],
                        "defaultValue": "ETH",
                        "onSelect": [Function],
                        "style": Object {
                          "paddingLeft": "0.5rem",
                        },
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": "ETH",
                          "nodeType": "class",
                          "props": Object {
                            "children": "ETH",
                            "value": "ETH",
                          },
                          "ref": null,
                          "rendered": "ETH",
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": "BOKKY",
                          "nodeType": "class",
                          "props": Object {
                            "children": "BOKKY",
                            "value": "BOKKY",
                          },
                          "ref": null,
                          "rendered": "BOKKY",
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Input
                      defaultValue="0"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      value="0"
/>,
                    "colon": false,
                    "help": <HelperTextComponent
                      left="$0.00"
                      right="usd"
/>,
                    "label": <Form__FormItemLabel>
                      enter_amount
</Form__FormItemLabel>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "defaultValue": "0",
                      "onBlur": [Function],
                      "onChange": [Function],
                      "onFocus": [Function],
                      "value": "0",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "defaultGasLimit": 600000,
                    "defaultGasPrice": 10,
                    "defaultOption": "average",
                    "gasStatistics": undefined,
                    "intl": Object {
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                    },
                    "onChange": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "1 ETH = ",
                      <style__StyledNumericText
                        type="currency"
                        value="412"
/>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    "1 ETH = ",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "type": "currency",
                        "value": "412",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    deposit
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main={
                                                      <SelectableText>
                                                                        <NumericText
                                                                                          maxDecimalPlaces={18}
                                                                                          value="0"
                                                                        />
                                                                         
                                                                        ETH
                                                      </SelectableText>
                                    }
                                    subtitle={
                                                      <NumericText
                                                                        type="currency"
                                                                        value="0"
                                                      />
                                    }
                  />
</Row>,
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    <TooltipText
                                                      details="max_base_layer_fee_explain"
                                    >
                                                      max_base_layer_fee
                                    </TooltipText>
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main={
                                                      <SelectableText>
                                                                        <NumericText
                                                                                          maxDecimalPlaces={18}
                                                                                          value="0.006"
                                                                        />
                                                                         
                                                                        ETH
                                                      </SelectableText>
                                    }
                                    subtitle={
                                                      <NumericText
                                                                        type="currency"
                                                                        value="2.472"
                                                      />
                                    }
                  />
</Row>,
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    base_layer
                                     ETH 
                                    balance_before
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main={
                                                      <SelectableText>
                                                                        <NumericText
                                                                                          maxDecimalPlaces={18}
                                                                                          value="0.198937"
                                                                        />
                                                                         
                                                                        ETH
                                                      </SelectableText>
                                    }
                                    subtitle={
                                                      <NumericText
                                                                        type="currency"
                                                                        value="81.962044"
                                                      />
                                    }
                  />
</Row>,
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    base_layer
                                     ETH 
                                    balance_after
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main={
                                                      <SelectableText>
                                                                        <NumericText
                                                                                          maxDecimalPlaces={18}
                                                                                          value="0.192937"
                                                                        />
                                                                         
                                                                        ETH
                                                      </SelectableText>
                                    }
                                    subtitle={
                                                      <NumericText
                                                                        type="currency"
                                                                        value="79.490044"
                                                      />
                                    }
                  />
</Row>,
                <div>
                  <Row
                                    gutter={0}
                  >
                                    <style__StyledCol
                                                      span={12}
                                    >
                                                      nahmii_available
                                                       ETH 
                                                      balance_before
                                    </style__StyledCol>
                  </Row>
                  <Row
                                    gutter={0}
                  >
                                    <TransferDescriptionItem
                                                      main={
                                                                        <SelectableText>
                                                                                          <NumericText
                                                                                                            maxDecimalPlaces={18}
                                                                                                            value="0.1"
                                                                                          />
                                                                                           
                                                                                          ETH
                                                                        </SelectableText>
                                                      }
                                                      subtitle={
                                                                        <NumericText
                                                                                          type="currency"
                                                                                          value="41.2"
                                                                        />
                                                      }
                                    />
                  </Row>
                  <Row
                                    gutter={0}
                  >
                                    <style__StyledCol
                                                      span={12}
                                    >
                                                      nahmii_available
                                                       ETH 
                                                      balance_after
                                    </style__StyledCol>
                  </Row>
                  <Row
                                    gutter={0}
                  >
                                    <TransferDescriptionItem
                                                      main={
                                                                        <SelectableText>
                                                                                          <NumericText
                                                                                                            maxDecimalPlaces={18}
                                                                                                            value="0.1"
                                                                                          />
                                                                                           
                                                                                          ETH
                                                                        </SelectableText>
                                                      }
                                                      subtitle={
                                                                        <NumericText
                                                                                          type="currency"
                                                                                          value="41.2"
                                                                        />
                                                      }
                                    />
                  </Row>
</div>,
                false,
                <Row
                  gutter={0}
>
                  <style__HWPromptWrapper>
                                    <Connect(HWPromptContainer) />
                  </style__HWPromptWrapper>
                  <div
                                    style={
                                                      Object {
                                                                        "width": "fit-content",
                                                                      }
                                    }
                  >
                                    <style__StyledButton
                                                      disabled={true}
                                                      onClick={[Function]}
                                                      type="primary"
                                    >
                                                      <span>
                                                                        deposit
                                                      </span>
                                    </style__StyledButton>
                  </div>
</Row>,
                <SectionHeading
                  style={
                                    Object {
                                                      "marginTop": "2rem",
                                                      "maxWidth": "25rem",
                                                    }
                  }
>
                  deposits_note
</SectionHeading>,
              ],
              "style": Object {
                "minWidth": "34rem",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    deposit
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "deposit",
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": "deposit",
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main={
                                        <SelectableText>
                                                            <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0"
                                                            />
                                                             
                                                            ETH
                                        </SelectableText>
                    }
                    subtitle={
                                        <NumericText
                                                            type="currency"
                                                            value="0"
                                        />
                    }
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": <SelectableText>
                      <NumericText
                                            maxDecimalPlaces={18}
                                            value="0"
                      />
                       
                      ETH
</SelectableText>,
                    "subtitle": <NumericText
                      type="currency"
                      value="0"
/>,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    <TooltipText
                                        details="max_base_layer_fee_explain"
                    >
                                        max_base_layer_fee
                    </TooltipText>
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TooltipText
                      details="max_base_layer_fee_explain"
>
                      max_base_layer_fee
</TooltipText>,
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": "max_base_layer_fee",
                      "details": "max_base_layer_fee_explain",
                    },
                    "ref": null,
                    "rendered": "max_base_layer_fee",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main={
                                        <SelectableText>
                                                            <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.006"
                                                            />
                                                             
                                                            ETH
                                        </SelectableText>
                    }
                    subtitle={
                                        <NumericText
                                                            type="currency"
                                                            value="2.472"
                                        />
                    }
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": <SelectableText>
                      <NumericText
                                            maxDecimalPlaces={18}
                                            value="0.006"
                      />
                       
                      ETH
</SelectableText>,
                    "subtitle": <NumericText
                      type="currency"
                      value="2.472"
/>,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    base_layer
                     ETH 
                    balance_before
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "base_layer",
                      " ETH ",
                      "balance_before",
                    ],
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Array [
                    "base_layer",
                    " ETH ",
                    "balance_before",
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main={
                                        <SelectableText>
                                                            <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.198937"
                                                            />
                                                             
                                                            ETH
                                        </SelectableText>
                    }
                    subtitle={
                                        <NumericText
                                                            type="currency"
                                                            value="81.962044"
                                        />
                    }
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": <SelectableText>
                      <NumericText
                                            maxDecimalPlaces={18}
                                            value="0.198937"
                      />
                       
                      ETH
</SelectableText>,
                    "subtitle": <NumericText
                      type="currency"
                      value="81.962044"
/>,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    base_layer
                     ETH 
                    balance_after
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "base_layer",
                      " ETH ",
                      "balance_after",
                    ],
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Array [
                    "base_layer",
                    " ETH ",
                    "balance_after",
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main={
                                        <SelectableText>
                                                            <NumericText
                                                                                maxDecimalPlaces={18}
                                                                                value="0.192937"
                                                            />
                                                             
                                                            ETH
                                        </SelectableText>
                    }
                    subtitle={
                                        <NumericText
                                                            type="currency"
                                                            value="79.490044"
                                        />
                    }
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": <SelectableText>
                      <NumericText
                                            maxDecimalPlaces={18}
                                            value="0.192937"
                      />
                       
                      ETH
</SelectableText>,
                    "subtitle": <NumericText
                      type="currency"
                      value="79.490044"
/>,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Row
                      gutter={0}
>
                      <style__StyledCol
                                            span={12}
                      >
                                            nahmii_available
                                             ETH 
                                            balance_before
                      </style__StyledCol>
</Row>,
                    <Row
                      gutter={0}
>
                      <TransferDescriptionItem
                                            main={
                                                                  <SelectableText>
                                                                                        <NumericText
                                                                                                              maxDecimalPlaces={18}
                                                                                                              value="0.1"
                                                                                        />
                                                                                         
                                                                                        ETH
                                                                  </SelectableText>
                                            }
                                            subtitle={
                                                                  <NumericText
                                                                                        type="currency"
                                                                                        value="41.2"
                                                                  />
                                            }
                      />
</Row>,
                    <Row
                      gutter={0}
>
                      <style__StyledCol
                                            span={12}
                      >
                                            nahmii_available
                                             ETH 
                                            balance_after
                      </style__StyledCol>
</Row>,
                    <Row
                      gutter={0}
>
                      <TransferDescriptionItem
                                            main={
                                                                  <SelectableText>
                                                                                        <NumericText
                                                                                                              maxDecimalPlaces={18}
                                                                                                              value="0.1"
                                                                                        />
                                                                                         
                                                                                        ETH
                                                                  </SelectableText>
                                            }
                                            subtitle={
                                                                  <NumericText
                                                                                        type="currency"
                                                                                        value="41.2"
                                                                  />
                                            }
                      />
</Row>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <style__StyledCol
                        span={12}
>
                        nahmii_available
                         ETH 
                        balance_before
</style__StyledCol>,
                      "gutter": 0,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          "nahmii_available",
                          " ETH ",
                          "balance_before",
                        ],
                        "span": 12,
                      },
                      "ref": null,
                      "rendered": Array [
                        "nahmii_available",
                        " ETH ",
                        "balance_before",
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <TransferDescriptionItem
                        main={
                                                <SelectableText>
                                                                        <NumericText
                                                                                                maxDecimalPlaces={18}
                                                                                                value="0.1"
                                                                        />
                                                                         
                                                                        ETH
                                                </SelectableText>
                        }
                        subtitle={
                                                <NumericText
                                                                        type="currency"
                                                                        value="41.2"
                                                />
                        }
/>,
                      "gutter": 0,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "main": <SelectableText>
                          <NumericText
                                                    maxDecimalPlaces={18}
                                                    value="0.1"
                          />
                           
                          ETH
</SelectableText>,
                        "subtitle": <NumericText
                          type="currency"
                          value="41.2"
/>,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <style__StyledCol
                        span={12}
>
                        nahmii_available
                         ETH 
                        balance_after
</style__StyledCol>,
                      "gutter": 0,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          "nahmii_available",
                          " ETH ",
                          "balance_after",
                        ],
                        "span": 12,
                      },
                      "ref": null,
                      "rendered": Array [
                        "nahmii_available",
                        " ETH ",
                        "balance_after",
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <TransferDescriptionItem
                        main={
                                                <SelectableText>
                                                                        <NumericText
                                                                                                maxDecimalPlaces={18}
                                                                                                value="0.1"
                                                                        />
                                                                         
                                                                        ETH
                                                </SelectableText>
                        }
                        subtitle={
                                                <NumericText
                                                                        type="currency"
                                                                        value="41.2"
                                                />
                        }
/>,
                      "gutter": 0,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "main": <SelectableText>
                          <NumericText
                                                    maxDecimalPlaces={18}
                                                    value="0.1"
                          />
                           
                          ETH
</SelectableText>,
                        "subtitle": <NumericText
                          type="currency"
                          value="41.2"
/>,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              false,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <style__HWPromptWrapper>
                      <Connect(HWPromptContainer) />
</style__HWPromptWrapper>,
                    <div
                      style={
                                            Object {
                                                                  "width": "fit-content",
                                                                }
                      }
>
                      <style__StyledButton
                                            disabled={true}
                                            onClick={[Function]}
                                            type="primary"
                      >
                                            <span>
                                                                  deposit
                                            </span>
                      </style__StyledButton>
</div>,
                  ],
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Connect(HWPromptContainer) />,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <style__StyledButton
                        disabled={true}
                        onClick={[Function]}
                        type="primary"
>
                        <span>
                                                deposit
                        </span>
</style__StyledButton>,
                      "style": Object {
                        "width": "fit-content",
                      },
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <span>
                          deposit
</span>,
                        "disabled": true,
                        "onClick": [Function],
                        "type": "primary",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "deposit",
                        },
                        "ref": null,
                        "rendered": "deposit",
                        "type": "span",
                      },
                      "type": [Function],
                    },
                    "type": "div",
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "deposits_note",
                  "style": Object {
                    "marginTop": "2rem",
                    "maxWidth": "25rem",
                  },
                },
                "ref": null,
                "rendered": "deposits_note",
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
