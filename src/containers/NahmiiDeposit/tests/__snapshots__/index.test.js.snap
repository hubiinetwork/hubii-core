// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<NahmiiDeposit /> should render correctly when approving a token deposit 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NahmiiDeposit
    currentNetwork={
        Object {
            "identityServiceAppId": "appid",
            "identityServiceSecret": "secret",
            "nahmiiProvider": NahmiiProvider {
              "_emitted": Object {
                "block": -1,
              },
              "_events": Object {},
              "chainId": 3,
              "ensAddress": "0x112234455C3a32FD11230C42E7Bccd4A84e02010",
              "name": "ropsten",
              "resetEventsBlock": [Function],
              "url": "http://geth-ropsten.dev.hubii.net",
            },
            "provider": FallbackProvider {
              "_emitted": Object {
                "block": -1,
              },
              "_events": Object {},
              "chainId": 3,
              "ensAddress": "0x112234455C3a32FD11230C42E7Bccd4A84e02010",
              "name": "ropsten",
              "resetEventsBlock": [Function],
            },
            "walletApiEndpoint": [Function],
          }
    }
    currentWalletWithInfo={
        Immutable.Map {
            deviceId: "041ca8e96420e95a106e8c9bb3c9fb9e8c00d4b11cac562888c898000b5cec366c03a0f84574716fac6c7a7df47a925f0e30f5286546adf3179b5a08dc9d8e09da",
            address: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
            type: "lns",
            name: "lns",
            derivationPath: "m/44'/60'/0'/0",
            transactions: Immutable.Map {
                loading: false,
                error: null,
                transactions: Immutable.List [
                    Immutable.Map {
                        decimalAmount: "0.0000000001",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780091,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "ETH",
                        sender: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        amount: "100000000",
                        symbol: "ETH",
                        recipient: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        type: "received",
                        fiatValue: "0.0000000412",
                        confirmations: "3",
                    },
                    Immutable.Map {
                        decimalAmount: "0.000000000000000005",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780091,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        sender: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        amount: "5",
                        symbol: "BOKKY",
                        recipient: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        type: "sent",
                        fiatValue: "0.000000000000000005",
                        confirmations: "3",
                    },
                ],
            },
            balances: Immutable.Map {
                baseLayer: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.198937",
                            currency: "ETH",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.198937",
                                btc: "0.00198937",
                                usd: "81.962044",
                            },
                        },
                        Immutable.Map {
                            balance: "1.231288e-12",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "1.231288e-13",
                                btc: "1.231288e-15",
                                usd: "1.231288e-12",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1989370000001231288",
                        btc: "0.001989370000001231288",
                        usd: "81.962044000001231288",
                    },
                },
                nahmiiAvailable: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "ETH",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.113",
                        btc: "0.00113",
                        usd: "41.33",
                    },
                },
                nahmiiStaging: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "ETH",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1",
                        btc: "0.001",
                        usd: "41.2",
                    },
                },
                nahmiiStaged: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                    ],
                    total: Immutable.Map {
                        eth: "0",
                        btc: "0",
                        usd: "0",
                    },
                },
                nahmiiCombined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "ETH",
                            balance: "0.2",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.2",
                                btc: "0.002",
                                usd: "82.4",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.213",
                        btc: "0.00213",
                        usd: "82.53",
                    },
                },
                combined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.398937",
                            currency: "ETH",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.398937",
                                btc: "0.00398937",
                                usd: "164.362044",
                            },
                        },
                        Immutable.Map {
                            balance: "0.130000000001231288",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.0130000000001231288",
                                btc: "0.000130000000001231288",
                                usd: "0.130000000001231288",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.4119370000001231288",
                        btc: "0.004119370000001231288",
                        usd: "164.492044000001231288",
                    },
                },
            },
        }
    }
    depositStatus={
        Immutable.Map {
            depositingEth: false,
            approvingTokenDeposit: true,
            completingTokenDeposit: false,
            error: null,
        }
    }
    intl={
        Object {
            "formatMessage": [Function],
          }
    }
    nahmiiDeposit={[Function]}
    prices={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    eth: 0.1,
                    btc: 0.001,
                    usd: 1,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "ETH",
                    eth: 1,
                    btc: 0.01,
                    usd: 412,
                },
            ],
        }
    }
    supportedAssets={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    symbol: "My20",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    symbol: "HBT",
                    decimals: 15,
                    color: "0063A5",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    symbol: "SBT",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    symbol: "WETH",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    symbol: "BOKKY",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "ETH",
                    symbol: "ETH",
                    decimals: 18,
                    color: "5C78E4",
                },
            ],
        }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          style={
                    Object {
                              "flex": "1",
                              "marginRight": "2rem",
                            }
          }
>
          <Form.style__FlexForm>
                    <Form.style__FormItem
                              colon={false}
                              label={
                                        <Form.style__FormItemLabel>
                                                  Select an asset to deposit
                                        </Form.style__FormItemLabel>
                              }
                    >
                              <style__Image
                                        alt="logo"
                                        src="/public/images/assets/ETH.svg"
                              />
                              <Select.style
                                        defaultValue="ETH"
                                        onSelect={[Function]}
                                        style={
                                                  Object {
                                                            "paddingLeft": "0.5rem",
                                                          }
                                        }
                              >
                                        <Option
                                                  value="ETH"
                                        >
                                                  ETH
                                        </Option>
                                        <Option
                                                  value="BOKKY"
                                        >
                                                  BOKKY
                                        </Option>
                              </Select.style>
                    </Form.style__FormItem>
                    <Form.style__FormItem
                              colon={false}
                              help={
                                        <HelperTextComponent
                                                  left="$0.00"
                                                  right="usd"
                                        />
                              }
                              label={
                                        <Form.style__FormItemLabel>
                                                  enter_amount
                                        </Form.style__FormItemLabel>
                              }
                    >
                              <Input.style
                                        defaultValue="0"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        value="0"
                              />
                    </Form.style__FormItem>
                    <Collapse
                              bordered={false}
                              defaultActiveKey={
                                        Array [
                                                  "2",
                                                ]
                              }
                    >
                              <CollapsePanel
                                        header={
                                                  <style__AdvancedSettingsHeader>
                                                            advanced_settings
                                                  </style__AdvancedSettingsHeader>
                                        }
                              >
                                        <Form.style__FormItem
                                                  colon={false}
                                                  label={
                                                            <Form.style__FormItemLabel>
                                                                      gas_price
                                                            </Form.style__FormItemLabel>
                                                  }
                                        >
                                                  <Input.style
                                                            defaultValue="10"
                                                            min={0}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="10"
                                                  />
                                        </Form.style__FormItem>
                                        <Form.style__FormItem
                                                  colon={false}
                                                  label={
                                                            <Form.style__FormItemLabel>
                                                                      gas_limit
                                                            </Form.style__FormItemLabel>
                                                  }
                                        >
                                                  <Input.style
                                                            defaultValue="600000"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="600000"
                                                  />
                                        </Form.style__FormItem>
                              </CollapsePanel>
                    </Collapse>
                    <style__DollarPrice>
                              1 ETH = $412.00
                    </style__DollarPrice>
          </Form.style__FlexForm>
</div>,
        <div
          style={
                    Object {
                              "minWidth": "34rem",
                            }
          }
>
          <Row
                    gutter={0}
          >
                    <style__StyledCol
                              span={12}
                    >
                              Deposit
                    </style__StyledCol>
          </Row>
          <Row
                    gutter={0}
          >
                    <TransferDescriptionItem
                              main="0 ETH"
                              subtitle="$0.00"
                    />
          </Row>
          <Row
                    gutter={0}
          >
                    <style__StyledCol
                              span={12}
                    >
                              Base layer fee
                    </style__StyledCol>
          </Row>
          <Row
                    gutter={0}
          >
                    <TransferDescriptionItem
                              main="0.006 ETH"
                              subtitle="$2.47"
                    />
          </Row>
          <Row
                    gutter={0}
          >
                    <style__StyledCol
                              span={12}
                    >
                              Base layer ETH 
                              balance_before
                    </style__StyledCol>
          </Row>
          <Row
                    gutter={0}
          >
                    <TransferDescriptionItem
                              main="0.198937 ETH"
                              subtitle="$81.96"
                    />
          </Row>
          <Row
                    gutter={0}
          >
                    <style__StyledCol
                              span={12}
                    >
                              Base layer ETH 
                              balance_after
                    </style__StyledCol>
          </Row>
          <Row
                    gutter={0}
          >
                    <TransferDescriptionItem
                              main="0.192937 ETH"
                              subtitle="$79.49"
                    />
          </Row>
          <div>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        nahmii ETH 
                                        balance_before
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main="0.2 ETH"
                                        subtitle="$82.40"
                              />
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        nahmii ETH 
                                        balance_after
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main="0.2 ETH"
                                        subtitle="$82.40"
                              />
                    </Row>
          </div>
          <Row
                    gutter={0}
          >
                    <style__HWPromptWrapper>
                              <Connect(HWPromptContainer) />
                    </style__HWPromptWrapper>
                    <div
                              style={
                                        Object {
                                                  "display": "flex",
                                                  "flexDirection": "column",
                                                  "marginTop": "2rem",
                                                }
                              }
                    >
                              <div>
                                        <span>
                                                  <Text
                                                            large={true}
                                                  >
                                                            Waiting for transaction 1/2 to be mined...
                                                  </Text>
                                        </span>
                                        <Icon
                                                  style={
                                                            Object {
                                                                      "color": "white",
                                                                      "fontSize": "1.5rem",
                                                                      "marginLeft": "1rem",
                                                                    }
                                                  }
                                                  type="loading"
                                        />
                              </div>
                              <a
                                        onClick={[Function]}
                                        role="link"
                                        tabIndex={0}
                              >
                                        Track progress on Etherscan
                              </a>
                    </div>
          </Row>
</div>,
      ],
      "style": Object {
        "display": "flex",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Form.style__FlexForm>
            <Form.style__FormItem
                        colon={false}
                        label={
                                    <Form.style__FormItemLabel>
                                                Select an asset to deposit
                                    </Form.style__FormItemLabel>
                        }
            >
                        <style__Image
                                    alt="logo"
                                    src="/public/images/assets/ETH.svg"
                        />
                        <Select.style
                                    defaultValue="ETH"
                                    onSelect={[Function]}
                                    style={
                                                Object {
                                                            "paddingLeft": "0.5rem",
                                                          }
                                    }
                        >
                                    <Option
                                                value="ETH"
                                    >
                                                ETH
                                    </Option>
                                    <Option
                                                value="BOKKY"
                                    >
                                                BOKKY
                                    </Option>
                        </Select.style>
            </Form.style__FormItem>
            <Form.style__FormItem
                        colon={false}
                        help={
                                    <HelperTextComponent
                                                left="$0.00"
                                                right="usd"
                                    />
                        }
                        label={
                                    <Form.style__FormItemLabel>
                                                enter_amount
                                    </Form.style__FormItemLabel>
                        }
            >
                        <Input.style
                                    defaultValue="0"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    value="0"
                        />
            </Form.style__FormItem>
            <Collapse
                        bordered={false}
                        defaultActiveKey={
                                    Array [
                                                "2",
                                              ]
                        }
            >
                        <CollapsePanel
                                    header={
                                                <style__AdvancedSettingsHeader>
                                                            advanced_settings
                                                </style__AdvancedSettingsHeader>
                                    }
                        >
                                    <Form.style__FormItem
                                                colon={false}
                                                label={
                                                            <Form.style__FormItemLabel>
                                                                        gas_price
                                                            </Form.style__FormItemLabel>
                                                }
                                    >
                                                <Input.style
                                                            defaultValue="10"
                                                            min={0}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="10"
                                                />
                                    </Form.style__FormItem>
                                    <Form.style__FormItem
                                                colon={false}
                                                label={
                                                            <Form.style__FormItemLabel>
                                                                        gas_limit
                                                            </Form.style__FormItemLabel>
                                                }
                                    >
                                                <Input.style
                                                            defaultValue="600000"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="600000"
                                                />
                                    </Form.style__FormItem>
                        </CollapsePanel>
            </Collapse>
            <style__DollarPrice>
                        1 ETH = $412.00
            </style__DollarPrice>
</Form.style__FlexForm>,
          "style": Object {
            "flex": "1",
            "marginRight": "2rem",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Form.style__FormItem
                colon={false}
                label={
                                <Form.style__FormItemLabel>
                                                Select an asset to deposit
                                </Form.style__FormItemLabel>
                }
>
                <style__Image
                                alt="logo"
                                src="/public/images/assets/ETH.svg"
                />
                <Select.style
                                defaultValue="ETH"
                                onSelect={[Function]}
                                style={
                                                Object {
                                                                "paddingLeft": "0.5rem",
                                                              }
                                }
                >
                                <Option
                                                value="ETH"
                                >
                                                ETH
                                </Option>
                                <Option
                                                value="BOKKY"
                                >
                                                BOKKY
                                </Option>
                </Select.style>
</Form.style__FormItem>,
              <Form.style__FormItem
                colon={false}
                help={
                                <HelperTextComponent
                                                left="$0.00"
                                                right="usd"
                                />
                }
                label={
                                <Form.style__FormItemLabel>
                                                enter_amount
                                </Form.style__FormItemLabel>
                }
>
                <Input.style
                                defaultValue="0"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                value="0"
                />
</Form.style__FormItem>,
              <Collapse
                bordered={false}
                defaultActiveKey={
                                Array [
                                                "2",
                                              ]
                }
>
                <CollapsePanel
                                header={
                                                <style__AdvancedSettingsHeader>
                                                                advanced_settings
                                                </style__AdvancedSettingsHeader>
                                }
                >
                                <Form.style__FormItem
                                                colon={false}
                                                label={
                                                                <Form.style__FormItemLabel>
                                                                                gas_price
                                                                </Form.style__FormItemLabel>
                                                }
                                >
                                                <Input.style
                                                                defaultValue="10"
                                                                min={0}
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                value="10"
                                                />
                                </Form.style__FormItem>
                                <Form.style__FormItem
                                                colon={false}
                                                label={
                                                                <Form.style__FormItemLabel>
                                                                                gas_limit
                                                                </Form.style__FormItemLabel>
                                                }
                                >
                                                <Input.style
                                                                defaultValue="600000"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                value="600000"
                                                />
                                </Form.style__FormItem>
                </CollapsePanel>
</Collapse>,
              <style__DollarPrice>
                1 ETH = $412.00
</style__DollarPrice>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <style__Image
                    alt="logo"
                    src="/public/images/assets/ETH.svg"
/>,
                  <Select.style
                    defaultValue="ETH"
                    onSelect={[Function]}
                    style={
                                        Object {
                                                            "paddingLeft": "0.5rem",
                                                          }
                    }
>
                    <Option
                                        value="ETH"
                    >
                                        ETH
                    </Option>
                    <Option
                                        value="BOKKY"
                    >
                                        BOKKY
                    </Option>
</Select.style>,
                ],
                "colon": false,
                "label": <Form.style__FormItemLabel>
                  Select an asset to deposit
</Form.style__FormItemLabel>,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "alt": "logo",
                    "src": "/public/images/assets/ETH.svg",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <Option
                        value="ETH"
>
                        ETH
</Option>,
                      <Option
                        value="BOKKY"
>
                        BOKKY
</Option>,
                    ],
                    "defaultValue": "ETH",
                    "onSelect": [Function],
                    "style": Object {
                      "paddingLeft": "0.5rem",
                    },
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "ETH",
                      "nodeType": "class",
                      "props": Object {
                        "children": "ETH",
                        "value": "ETH",
                      },
                      "ref": null,
                      "rendered": "ETH",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "BOKKY",
                      "nodeType": "class",
                      "props": Object {
                        "children": "BOKKY",
                        "value": "BOKKY",
                      },
                      "ref": null,
                      "rendered": "BOKKY",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Input.style
                  defaultValue="0"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  value="0"
/>,
                "colon": false,
                "help": <HelperTextComponent
                  left="$0.00"
                  right="usd"
/>,
                "label": <Form.style__FormItemLabel>
                  enter_amount
</Form.style__FormItemLabel>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "defaultValue": "0",
                  "onBlur": [Function],
                  "onChange": [Function],
                  "onFocus": [Function],
                  "value": "0",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bordered": false,
                "children": <CollapsePanel
                  header={
                                    <style__AdvancedSettingsHeader>
                                                      advanced_settings
                                    </style__AdvancedSettingsHeader>
                  }
>
                  <Form.style__FormItem
                                    colon={false}
                                    label={
                                                      <Form.style__FormItemLabel>
                                                                        gas_price
                                                      </Form.style__FormItemLabel>
                                    }
                  >
                                    <Input.style
                                                      defaultValue="10"
                                                      min={0}
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      value="10"
                                    />
                  </Form.style__FormItem>
                  <Form.style__FormItem
                                    colon={false}
                                    label={
                                                      <Form.style__FormItemLabel>
                                                                        gas_limit
                                                      </Form.style__FormItemLabel>
                                    }
                  >
                                    <Input.style
                                                      defaultValue="600000"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      value="600000"
                                    />
                  </Form.style__FormItem>
</CollapsePanel>,
                "defaultActiveKey": Array [
                  "2",
                ],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": "1",
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Form.style__FormItem
                      colon={false}
                      label={
                                            <Form.style__FormItemLabel>
                                                                  gas_price
                                            </Form.style__FormItemLabel>
                      }
>
                      <Input.style
                                            defaultValue="10"
                                            min={0}
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            value="10"
                      />
</Form.style__FormItem>,
                    <Form.style__FormItem
                      colon={false}
                      label={
                                            <Form.style__FormItemLabel>
                                                                  gas_limit
                                            </Form.style__FormItemLabel>
                      }
>
                      <Input.style
                                            defaultValue="600000"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            value="600000"
                      />
</Form.style__FormItem>,
                  ],
                  "header": <style__AdvancedSettingsHeader>
                    advanced_settings
</style__AdvancedSettingsHeader>,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Input.style
                        defaultValue="10"
                        min={0}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        value="10"
/>,
                      "colon": false,
                      "label": <Form.style__FormItemLabel>
                        gas_price
</Form.style__FormItemLabel>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "defaultValue": "10",
                        "min": 0,
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onFocus": [Function],
                        "value": "10",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Input.style
                        defaultValue="600000"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        value="600000"
/>,
                      "colon": false,
                      "label": <Form.style__FormItemLabel>
                        gas_limit
</Form.style__FormItemLabel>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "defaultValue": "600000",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onFocus": [Function],
                        "value": "600000",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "1 ETH = $412.00",
              },
              "ref": null,
              "rendered": "1 ETH = $412.00",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Row
              gutter={0}
>
              <style__StyledCol
                            span={12}
              >
                            Deposit
              </style__StyledCol>
</Row>,
            <Row
              gutter={0}
>
              <TransferDescriptionItem
                            main="0 ETH"
                            subtitle="$0.00"
              />
</Row>,
            <Row
              gutter={0}
>
              <style__StyledCol
                            span={12}
              >
                            Base layer fee
              </style__StyledCol>
</Row>,
            <Row
              gutter={0}
>
              <TransferDescriptionItem
                            main="0.006 ETH"
                            subtitle="$2.47"
              />
</Row>,
            <Row
              gutter={0}
>
              <style__StyledCol
                            span={12}
              >
                            Base layer ETH 
                            balance_before
              </style__StyledCol>
</Row>,
            <Row
              gutter={0}
>
              <TransferDescriptionItem
                            main="0.198937 ETH"
                            subtitle="$81.96"
              />
</Row>,
            <Row
              gutter={0}
>
              <style__StyledCol
                            span={12}
              >
                            Base layer ETH 
                            balance_after
              </style__StyledCol>
</Row>,
            <Row
              gutter={0}
>
              <TransferDescriptionItem
                            main="0.192937 ETH"
                            subtitle="$79.49"
              />
</Row>,
            <div>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          nahmii ETH 
                                          balance_before
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main="0.2 ETH"
                                          subtitle="$82.40"
                            />
              </Row>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          nahmii ETH 
                                          balance_after
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main="0.2 ETH"
                                          subtitle="$82.40"
                            />
              </Row>
</div>,
            false,
            <Row
              gutter={0}
>
              <style__HWPromptWrapper>
                            <Connect(HWPromptContainer) />
              </style__HWPromptWrapper>
              <div
                            style={
                                          Object {
                                                        "display": "flex",
                                                        "flexDirection": "column",
                                                        "marginTop": "2rem",
                                                      }
                            }
              >
                            <div>
                                          <span>
                                                        <Text
                                                                      large={true}
                                                        >
                                                                      Waiting for transaction 1/2 to be mined...
                                                        </Text>
                                          </span>
                                          <Icon
                                                        style={
                                                                      Object {
                                                                                    "color": "white",
                                                                                    "fontSize": "1.5rem",
                                                                                    "marginLeft": "1rem",
                                                                                  }
                                                        }
                                                        type="loading"
                                          />
                            </div>
                            <a
                                          onClick={[Function]}
                                          role="link"
                                          tabIndex={0}
                            >
                                          Track progress on Etherscan
                            </a>
              </div>
</Row>,
          ],
          "style": Object {
            "minWidth": "34rem",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <style__StyledCol
                span={12}
>
                Deposit
</style__StyledCol>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Deposit",
                "span": 12,
              },
              "ref": null,
              "rendered": "Deposit",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <TransferDescriptionItem
                main="0 ETH"
                subtitle="$0.00"
/>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "main": "0 ETH",
                "subtitle": "$0.00",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <style__StyledCol
                span={12}
>
                Base layer fee
</style__StyledCol>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Base layer fee",
                "span": 12,
              },
              "ref": null,
              "rendered": "Base layer fee",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <TransferDescriptionItem
                main="0.006 ETH"
                subtitle="$2.47"
/>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "main": "0.006 ETH",
                "subtitle": "$2.47",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <style__StyledCol
                span={12}
>
                Base layer ETH 
                balance_before
</style__StyledCol>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  "Base layer ETH ",
                  "balance_before",
                ],
                "span": 12,
              },
              "ref": null,
              "rendered": Array [
                "Base layer ETH ",
                "balance_before",
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <TransferDescriptionItem
                main="0.198937 ETH"
                subtitle="$81.96"
/>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "main": "0.198937 ETH",
                "subtitle": "$81.96",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <style__StyledCol
                span={12}
>
                Base layer ETH 
                balance_after
</style__StyledCol>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  "Base layer ETH ",
                  "balance_after",
                ],
                "span": 12,
              },
              "ref": null,
              "rendered": Array [
                "Base layer ETH ",
                "balance_after",
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <TransferDescriptionItem
                main="0.192937 ETH"
                subtitle="$79.49"
/>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "main": "0.192937 ETH",
                "subtitle": "$79.49",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    nahmii ETH 
                                    balance_before
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main="0.2 ETH"
                                    subtitle="$82.40"
                  />
</Row>,
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    nahmii ETH 
                                    balance_after
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main="0.2 ETH"
                                    subtitle="$82.40"
                  />
</Row>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    nahmii ETH 
                    balance_before
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "nahmii ETH ",
                      "balance_before",
                    ],
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Array [
                    "nahmii ETH ",
                    "balance_before",
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main="0.2 ETH"
                    subtitle="$82.40"
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": "0.2 ETH",
                    "subtitle": "$82.40",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    nahmii ETH 
                    balance_after
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "nahmii ETH ",
                      "balance_after",
                    ],
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Array [
                    "nahmii ETH ",
                    "balance_after",
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main="0.2 ETH"
                    subtitle="$82.40"
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": "0.2 ETH",
                    "subtitle": "$82.40",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": "div",
          },
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <style__HWPromptWrapper>
                  <Connect(HWPromptContainer) />
</style__HWPromptWrapper>,
                null,
                <div
                  style={
                                    Object {
                                                      "display": "flex",
                                                      "flexDirection": "column",
                                                      "marginTop": "2rem",
                                                    }
                  }
>
                  <div>
                                    <span>
                                                      <Text
                                                                        large={true}
                                                      >
                                                                        Waiting for transaction 1/2 to be mined...
                                                      </Text>
                                    </span>
                                    <Icon
                                                      style={
                                                                        Object {
                                                                                          "color": "white",
                                                                                          "fontSize": "1.5rem",
                                                                                          "marginLeft": "1rem",
                                                                                        }
                                                      }
                                                      type="loading"
                                    />
                  </div>
                  <a
                                    onClick={[Function]}
                                    role="link"
                                    tabIndex={0}
                  >
                                    Track progress on Etherscan
                  </a>
</div>,
              ],
              "gutter": 0,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Connect(HWPromptContainer) />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              null,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div>
                      <span>
                                            <Text
                                                                  large={true}
                                            >
                                                                  Waiting for transaction 1/2 to be mined...
                                            </Text>
                      </span>
                      <Icon
                                            style={
                                                                  Object {
                                                                                        "color": "white",
                                                                                        "fontSize": "1.5rem",
                                                                                        "marginLeft": "1rem",
                                                                                      }
                                            }
                                            type="loading"
                      />
</div>,
                    <a
                      onClick={[Function]}
                      role="link"
                      tabIndex={0}
>
                      Track progress on Etherscan
</a>,
                  ],
                  "style": Object {
                    "display": "flex",
                    "flexDirection": "column",
                    "marginTop": "2rem",
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <span>
                          <Text
                                                    large={true}
                          >
                                                    Waiting for transaction 1/2 to be mined...
                          </Text>
</span>,
                        <Icon
                          style={
                                                    Object {
                                                                              "color": "white",
                                                                              "fontSize": "1.5rem",
                                                                              "marginLeft": "1rem",
                                                                            }
                          }
                          type="loading"
/>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <Text
                            large={true}
>
                            Waiting for transaction 1/2 to be mined...
</Text>,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": "Waiting for transaction 1/2 to be mined...",
                            "large": true,
                          },
                          "ref": null,
                          "rendered": "Waiting for transaction 1/2 to be mined...",
                          "type": [Function],
                        },
                        "type": "span",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "style": Object {
                            "color": "white",
                            "fontSize": "1.5rem",
                            "marginLeft": "1rem",
                          },
                          "type": "loading",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Track progress on Etherscan",
                      "onClick": [Function],
                      "role": "link",
                      "tabIndex": 0,
                    },
                    "ref": null,
                    "rendered": "Track progress on Etherscan",
                    "type": "a",
                  },
                ],
                "type": "div",
              },
            ],
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            style={
                        Object {
                                    "flex": "1",
                                    "marginRight": "2rem",
                                  }
            }
>
            <Form.style__FlexForm>
                        <Form.style__FormItem
                                    colon={false}
                                    label={
                                                <Form.style__FormItemLabel>
                                                            Select an asset to deposit
                                                </Form.style__FormItemLabel>
                                    }
                        >
                                    <style__Image
                                                alt="logo"
                                                src="/public/images/assets/ETH.svg"
                                    />
                                    <Select.style
                                                defaultValue="ETH"
                                                onSelect={[Function]}
                                                style={
                                                            Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                                                }
                                    >
                                                <Option
                                                            value="ETH"
                                                >
                                                            ETH
                                                </Option>
                                                <Option
                                                            value="BOKKY"
                                                >
                                                            BOKKY
                                                </Option>
                                    </Select.style>
                        </Form.style__FormItem>
                        <Form.style__FormItem
                                    colon={false}
                                    help={
                                                <HelperTextComponent
                                                            left="$0.00"
                                                            right="usd"
                                                />
                                    }
                                    label={
                                                <Form.style__FormItemLabel>
                                                            enter_amount
                                                </Form.style__FormItemLabel>
                                    }
                        >
                                    <Input.style
                                                defaultValue="0"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value="0"
                                    />
                        </Form.style__FormItem>
                        <Collapse
                                    bordered={false}
                                    defaultActiveKey={
                                                Array [
                                                            "2",
                                                          ]
                                    }
                        >
                                    <CollapsePanel
                                                header={
                                                            <style__AdvancedSettingsHeader>
                                                                        advanced_settings
                                                            </style__AdvancedSettingsHeader>
                                                }
                                    >
                                                <Form.style__FormItem
                                                            colon={false}
                                                            label={
                                                                        <Form.style__FormItemLabel>
                                                                                    gas_price
                                                                        </Form.style__FormItemLabel>
                                                            }
                                                >
                                                            <Input.style
                                                                        defaultValue="10"
                                                                        min={0}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        value="10"
                                                            />
                                                </Form.style__FormItem>
                                                <Form.style__FormItem
                                                            colon={false}
                                                            label={
                                                                        <Form.style__FormItemLabel>
                                                                                    gas_limit
                                                                        </Form.style__FormItemLabel>
                                                            }
                                                >
                                                            <Input.style
                                                                        defaultValue="600000"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        value="600000"
                                                            />
                                                </Form.style__FormItem>
                                    </CollapsePanel>
                        </Collapse>
                        <style__DollarPrice>
                                    1 ETH = $412.00
                        </style__DollarPrice>
            </Form.style__FlexForm>
</div>,
          <div
            style={
                        Object {
                                    "minWidth": "34rem",
                                  }
            }
>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    Deposit
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main="0 ETH"
                                    subtitle="$0.00"
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    Base layer fee
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main="0.006 ETH"
                                    subtitle="$2.47"
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    Base layer ETH 
                                    balance_before
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main="0.198937 ETH"
                                    subtitle="$81.96"
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    Base layer ETH 
                                    balance_after
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main="0.192937 ETH"
                                    subtitle="$79.49"
                        />
            </Row>
            <div>
                        <Row
                                    gutter={0}
                        >
                                    <style__StyledCol
                                                span={12}
                                    >
                                                nahmii ETH 
                                                balance_before
                                    </style__StyledCol>
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <TransferDescriptionItem
                                                main="0.2 ETH"
                                                subtitle="$82.40"
                                    />
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <style__StyledCol
                                                span={12}
                                    >
                                                nahmii ETH 
                                                balance_after
                                    </style__StyledCol>
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <TransferDescriptionItem
                                                main="0.2 ETH"
                                                subtitle="$82.40"
                                    />
                        </Row>
            </div>
            <Row
                        gutter={0}
            >
                        <style__HWPromptWrapper>
                                    <Connect(HWPromptContainer) />
                        </style__HWPromptWrapper>
                        <div
                                    style={
                                                Object {
                                                            "display": "flex",
                                                            "flexDirection": "column",
                                                            "marginTop": "2rem",
                                                          }
                                    }
                        >
                                    <div>
                                                <span>
                                                            <Text
                                                                        large={true}
                                                            >
                                                                        Waiting for transaction 1/2 to be mined...
                                                            </Text>
                                                </span>
                                                <Icon
                                                            style={
                                                                        Object {
                                                                                    "color": "white",
                                                                                    "fontSize": "1.5rem",
                                                                                    "marginLeft": "1rem",
                                                                                  }
                                                            }
                                                            type="loading"
                                                />
                                    </div>
                                    <a
                                                onClick={[Function]}
                                                role="link"
                                                tabIndex={0}
                                    >
                                                Track progress on Etherscan
                                    </a>
                        </div>
            </Row>
</div>,
        ],
        "style": Object {
          "display": "flex",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Form.style__FlexForm>
              <Form.style__FormItem
                            colon={false}
                            label={
                                          <Form.style__FormItemLabel>
                                                        Select an asset to deposit
                                          </Form.style__FormItemLabel>
                            }
              >
                            <style__Image
                                          alt="logo"
                                          src="/public/images/assets/ETH.svg"
                            />
                            <Select.style
                                          defaultValue="ETH"
                                          onSelect={[Function]}
                                          style={
                                                        Object {
                                                                      "paddingLeft": "0.5rem",
                                                                    }
                                          }
                            >
                                          <Option
                                                        value="ETH"
                                          >
                                                        ETH
                                          </Option>
                                          <Option
                                                        value="BOKKY"
                                          >
                                                        BOKKY
                                          </Option>
                            </Select.style>
              </Form.style__FormItem>
              <Form.style__FormItem
                            colon={false}
                            help={
                                          <HelperTextComponent
                                                        left="$0.00"
                                                        right="usd"
                                          />
                            }
                            label={
                                          <Form.style__FormItemLabel>
                                                        enter_amount
                                          </Form.style__FormItemLabel>
                            }
              >
                            <Input.style
                                          defaultValue="0"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          value="0"
                            />
              </Form.style__FormItem>
              <Collapse
                            bordered={false}
                            defaultActiveKey={
                                          Array [
                                                        "2",
                                                      ]
                            }
              >
                            <CollapsePanel
                                          header={
                                                        <style__AdvancedSettingsHeader>
                                                                      advanced_settings
                                                        </style__AdvancedSettingsHeader>
                                          }
                            >
                                          <Form.style__FormItem
                                                        colon={false}
                                                        label={
                                                                      <Form.style__FormItemLabel>
                                                                                    gas_price
                                                                      </Form.style__FormItemLabel>
                                                        }
                                          >
                                                        <Input.style
                                                                      defaultValue="10"
                                                                      min={0}
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      value="10"
                                                        />
                                          </Form.style__FormItem>
                                          <Form.style__FormItem
                                                        colon={false}
                                                        label={
                                                                      <Form.style__FormItemLabel>
                                                                                    gas_limit
                                                                      </Form.style__FormItemLabel>
                                                        }
                                          >
                                                        <Input.style
                                                                      defaultValue="600000"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      value="600000"
                                                        />
                                          </Form.style__FormItem>
                            </CollapsePanel>
              </Collapse>
              <style__DollarPrice>
                            1 ETH = $412.00
              </style__DollarPrice>
</Form.style__FlexForm>,
            "style": Object {
              "flex": "1",
              "marginRight": "2rem",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Form.style__FormItem
                  colon={false}
                  label={
                                    <Form.style__FormItemLabel>
                                                      Select an asset to deposit
                                    </Form.style__FormItemLabel>
                  }
>
                  <style__Image
                                    alt="logo"
                                    src="/public/images/assets/ETH.svg"
                  />
                  <Select.style
                                    defaultValue="ETH"
                                    onSelect={[Function]}
                                    style={
                                                      Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                                    }
                  >
                                    <Option
                                                      value="ETH"
                                    >
                                                      ETH
                                    </Option>
                                    <Option
                                                      value="BOKKY"
                                    >
                                                      BOKKY
                                    </Option>
                  </Select.style>
</Form.style__FormItem>,
                <Form.style__FormItem
                  colon={false}
                  help={
                                    <HelperTextComponent
                                                      left="$0.00"
                                                      right="usd"
                                    />
                  }
                  label={
                                    <Form.style__FormItemLabel>
                                                      enter_amount
                                    </Form.style__FormItemLabel>
                  }
>
                  <Input.style
                                    defaultValue="0"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    value="0"
                  />
</Form.style__FormItem>,
                <Collapse
                  bordered={false}
                  defaultActiveKey={
                                    Array [
                                                      "2",
                                                    ]
                  }
>
                  <CollapsePanel
                                    header={
                                                      <style__AdvancedSettingsHeader>
                                                                        advanced_settings
                                                      </style__AdvancedSettingsHeader>
                                    }
                  >
                                    <Form.style__FormItem
                                                      colon={false}
                                                      label={
                                                                        <Form.style__FormItemLabel>
                                                                                          gas_price
                                                                        </Form.style__FormItemLabel>
                                                      }
                                    >
                                                      <Input.style
                                                                        defaultValue="10"
                                                                        min={0}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        value="10"
                                                      />
                                    </Form.style__FormItem>
                                    <Form.style__FormItem
                                                      colon={false}
                                                      label={
                                                                        <Form.style__FormItemLabel>
                                                                                          gas_limit
                                                                        </Form.style__FormItemLabel>
                                                      }
                                    >
                                                      <Input.style
                                                                        defaultValue="600000"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        value="600000"
                                                      />
                                    </Form.style__FormItem>
                  </CollapsePanel>
</Collapse>,
                <style__DollarPrice>
                  1 ETH = $412.00
</style__DollarPrice>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <style__Image
                      alt="logo"
                      src="/public/images/assets/ETH.svg"
/>,
                    <Select.style
                      defaultValue="ETH"
                      onSelect={[Function]}
                      style={
                                            Object {
                                                                  "paddingLeft": "0.5rem",
                                                                }
                      }
>
                      <Option
                                            value="ETH"
                      >
                                            ETH
                      </Option>
                      <Option
                                            value="BOKKY"
                      >
                                            BOKKY
                      </Option>
</Select.style>,
                  ],
                  "colon": false,
                  "label": <Form.style__FormItemLabel>
                    Select an asset to deposit
</Form.style__FormItemLabel>,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "alt": "logo",
                      "src": "/public/images/assets/ETH.svg",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <Option
                          value="ETH"
>
                          ETH
</Option>,
                        <Option
                          value="BOKKY"
>
                          BOKKY
</Option>,
                      ],
                      "defaultValue": "ETH",
                      "onSelect": [Function],
                      "style": Object {
                        "paddingLeft": "0.5rem",
                      },
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": "ETH",
                        "nodeType": "class",
                        "props": Object {
                          "children": "ETH",
                          "value": "ETH",
                        },
                        "ref": null,
                        "rendered": "ETH",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": "BOKKY",
                        "nodeType": "class",
                        "props": Object {
                          "children": "BOKKY",
                          "value": "BOKKY",
                        },
                        "ref": null,
                        "rendered": "BOKKY",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Input.style
                    defaultValue="0"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    value="0"
/>,
                  "colon": false,
                  "help": <HelperTextComponent
                    left="$0.00"
                    right="usd"
/>,
                  "label": <Form.style__FormItemLabel>
                    enter_amount
</Form.style__FormItemLabel>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "defaultValue": "0",
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "0",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bordered": false,
                  "children": <CollapsePanel
                    header={
                                        <style__AdvancedSettingsHeader>
                                                            advanced_settings
                                        </style__AdvancedSettingsHeader>
                    }
>
                    <Form.style__FormItem
                                        colon={false}
                                        label={
                                                            <Form.style__FormItemLabel>
                                                                                gas_price
                                                            </Form.style__FormItemLabel>
                                        }
                    >
                                        <Input.style
                                                            defaultValue="10"
                                                            min={0}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="10"
                                        />
                    </Form.style__FormItem>
                    <Form.style__FormItem
                                        colon={false}
                                        label={
                                                            <Form.style__FormItemLabel>
                                                                                gas_limit
                                                            </Form.style__FormItemLabel>
                                        }
                    >
                                        <Input.style
                                                            defaultValue="600000"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="600000"
                                        />
                    </Form.style__FormItem>
</CollapsePanel>,
                  "defaultActiveKey": Array [
                    "2",
                  ],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <Form.style__FormItem
                        colon={false}
                        label={
                                                <Form.style__FormItemLabel>
                                                                        gas_price
                                                </Form.style__FormItemLabel>
                        }
>
                        <Input.style
                                                defaultValue="10"
                                                min={0}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value="10"
                        />
</Form.style__FormItem>,
                      <Form.style__FormItem
                        colon={false}
                        label={
                                                <Form.style__FormItemLabel>
                                                                        gas_limit
                                                </Form.style__FormItemLabel>
                        }
>
                        <Input.style
                                                defaultValue="600000"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value="600000"
                        />
</Form.style__FormItem>,
                    ],
                    "header": <style__AdvancedSettingsHeader>
                      advanced_settings
</style__AdvancedSettingsHeader>,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Input.style
                          defaultValue="10"
                          min={0}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          value="10"
/>,
                        "colon": false,
                        "label": <Form.style__FormItemLabel>
                          gas_price
</Form.style__FormItemLabel>,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "defaultValue": "10",
                          "min": 0,
                          "onBlur": [Function],
                          "onChange": [Function],
                          "onFocus": [Function],
                          "value": "10",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Input.style
                          defaultValue="600000"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          value="600000"
/>,
                        "colon": false,
                        "label": <Form.style__FormItemLabel>
                          gas_limit
</Form.style__FormItemLabel>,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "defaultValue": "600000",
                          "onBlur": [Function],
                          "onChange": [Function],
                          "onFocus": [Function],
                          "value": "600000",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "1 ETH = $412.00",
                },
                "ref": null,
                "rendered": "1 ETH = $412.00",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                Deposit
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main="0 ETH"
                                subtitle="$0.00"
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                Base layer fee
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main="0.006 ETH"
                                subtitle="$2.47"
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                Base layer ETH 
                                balance_before
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main="0.198937 ETH"
                                subtitle="$81.96"
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                Base layer ETH 
                                balance_after
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main="0.192937 ETH"
                                subtitle="$79.49"
                />
</Row>,
              <div>
                <Row
                                gutter={0}
                >
                                <style__StyledCol
                                                span={12}
                                >
                                                nahmii ETH 
                                                balance_before
                                </style__StyledCol>
                </Row>
                <Row
                                gutter={0}
                >
                                <TransferDescriptionItem
                                                main="0.2 ETH"
                                                subtitle="$82.40"
                                />
                </Row>
                <Row
                                gutter={0}
                >
                                <style__StyledCol
                                                span={12}
                                >
                                                nahmii ETH 
                                                balance_after
                                </style__StyledCol>
                </Row>
                <Row
                                gutter={0}
                >
                                <TransferDescriptionItem
                                                main="0.2 ETH"
                                                subtitle="$82.40"
                                />
                </Row>
</div>,
              false,
              <Row
                gutter={0}
>
                <style__HWPromptWrapper>
                                <Connect(HWPromptContainer) />
                </style__HWPromptWrapper>
                <div
                                style={
                                                Object {
                                                                "display": "flex",
                                                                "flexDirection": "column",
                                                                "marginTop": "2rem",
                                                              }
                                }
                >
                                <div>
                                                <span>
                                                                <Text
                                                                                large={true}
                                                                >
                                                                                Waiting for transaction 1/2 to be mined...
                                                                </Text>
                                                </span>
                                                <Icon
                                                                style={
                                                                                Object {
                                                                                                "color": "white",
                                                                                                "fontSize": "1.5rem",
                                                                                                "marginLeft": "1rem",
                                                                                              }
                                                                }
                                                                type="loading"
                                                />
                                </div>
                                <a
                                                onClick={[Function]}
                                                role="link"
                                                tabIndex={0}
                                >
                                                Track progress on Etherscan
                                </a>
                </div>
</Row>,
            ],
            "style": Object {
              "minWidth": "34rem",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  Deposit
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Deposit",
                  "span": 12,
                },
                "ref": null,
                "rendered": "Deposit",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main="0 ETH"
                  subtitle="$0.00"
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": "0 ETH",
                  "subtitle": "$0.00",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  Base layer fee
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Base layer fee",
                  "span": 12,
                },
                "ref": null,
                "rendered": "Base layer fee",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main="0.006 ETH"
                  subtitle="$2.47"
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": "0.006 ETH",
                  "subtitle": "$2.47",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  Base layer ETH 
                  balance_before
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "Base layer ETH ",
                    "balance_before",
                  ],
                  "span": 12,
                },
                "ref": null,
                "rendered": Array [
                  "Base layer ETH ",
                  "balance_before",
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main="0.198937 ETH"
                  subtitle="$81.96"
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": "0.198937 ETH",
                  "subtitle": "$81.96",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  Base layer ETH 
                  balance_after
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "Base layer ETH ",
                    "balance_after",
                  ],
                  "span": 12,
                },
                "ref": null,
                "rendered": Array [
                  "Base layer ETH ",
                  "balance_after",
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main="0.192937 ETH"
                  subtitle="$79.49"
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": "0.192937 ETH",
                  "subtitle": "$79.49",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Row
                    gutter={0}
>
                    <style__StyledCol
                                        span={12}
                    >
                                        nahmii ETH 
                                        balance_before
                    </style__StyledCol>
</Row>,
                  <Row
                    gutter={0}
>
                    <TransferDescriptionItem
                                        main="0.2 ETH"
                                        subtitle="$82.40"
                    />
</Row>,
                  <Row
                    gutter={0}
>
                    <style__StyledCol
                                        span={12}
                    >
                                        nahmii ETH 
                                        balance_after
                    </style__StyledCol>
</Row>,
                  <Row
                    gutter={0}
>
                    <TransferDescriptionItem
                                        main="0.2 ETH"
                                        subtitle="$82.40"
                    />
</Row>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <style__StyledCol
                      span={12}
>
                      nahmii ETH 
                      balance_before
</style__StyledCol>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "nahmii ETH ",
                        "balance_before",
                      ],
                      "span": 12,
                    },
                    "ref": null,
                    "rendered": Array [
                      "nahmii ETH ",
                      "balance_before",
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TransferDescriptionItem
                      main="0.2 ETH"
                      subtitle="$82.40"
/>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "main": "0.2 ETH",
                      "subtitle": "$82.40",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <style__StyledCol
                      span={12}
>
                      nahmii ETH 
                      balance_after
</style__StyledCol>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "nahmii ETH ",
                        "balance_after",
                      ],
                      "span": 12,
                    },
                    "ref": null,
                    "rendered": Array [
                      "nahmii ETH ",
                      "balance_after",
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TransferDescriptionItem
                      main="0.2 ETH"
                      subtitle="$82.40"
/>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "main": "0.2 ETH",
                      "subtitle": "$82.40",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <style__HWPromptWrapper>
                    <Connect(HWPromptContainer) />
</style__HWPromptWrapper>,
                  null,
                  <div
                    style={
                                        Object {
                                                            "display": "flex",
                                                            "flexDirection": "column",
                                                            "marginTop": "2rem",
                                                          }
                    }
>
                    <div>
                                        <span>
                                                            <Text
                                                                                large={true}
                                                            >
                                                                                Waiting for transaction 1/2 to be mined...
                                                            </Text>
                                        </span>
                                        <Icon
                                                            style={
                                                                                Object {
                                                                                                    "color": "white",
                                                                                                    "fontSize": "1.5rem",
                                                                                                    "marginLeft": "1rem",
                                                                                                  }
                                                            }
                                                            type="loading"
                                        />
                    </div>
                    <a
                                        onClick={[Function]}
                                        role="link"
                                        tabIndex={0}
                    >
                                        Track progress on Etherscan
                    </a>
</div>,
                ],
                "gutter": 0,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Connect(HWPromptContainer) />,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                null,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div>
                        <span>
                                                <Text
                                                                        large={true}
                                                >
                                                                        Waiting for transaction 1/2 to be mined...
                                                </Text>
                        </span>
                        <Icon
                                                style={
                                                                        Object {
                                                                                                "color": "white",
                                                                                                "fontSize": "1.5rem",
                                                                                                "marginLeft": "1rem",
                                                                                              }
                                                }
                                                type="loading"
                        />
</div>,
                      <a
                        onClick={[Function]}
                        role="link"
                        tabIndex={0}
>
                        Track progress on Etherscan
</a>,
                    ],
                    "style": Object {
                      "display": "flex",
                      "flexDirection": "column",
                      "marginTop": "2rem",
                    },
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <span>
                            <Text
                                                        large={true}
                            >
                                                        Waiting for transaction 1/2 to be mined...
                            </Text>
</span>,
                          <Icon
                            style={
                                                        Object {
                                                                                    "color": "white",
                                                                                    "fontSize": "1.5rem",
                                                                                    "marginLeft": "1rem",
                                                                                  }
                            }
                            type="loading"
/>,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <Text
                              large={true}
>
                              Waiting for transaction 1/2 to be mined...
</Text>,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": "Waiting for transaction 1/2 to be mined...",
                              "large": true,
                            },
                            "ref": null,
                            "rendered": "Waiting for transaction 1/2 to be mined...",
                            "type": [Function],
                          },
                          "type": "span",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "style": Object {
                              "color": "white",
                              "fontSize": "1.5rem",
                              "marginLeft": "1rem",
                            },
                            "type": "loading",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                      ],
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Track progress on Etherscan",
                        "onClick": [Function],
                        "role": "link",
                        "tabIndex": 0,
                      },
                      "ref": null,
                      "rendered": "Track progress on Etherscan",
                      "type": "a",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<NahmiiDeposit /> should render correctly when completing a token deposit 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NahmiiDeposit
    currentNetwork={
        Object {
            "identityServiceAppId": "appid",
            "identityServiceSecret": "secret",
            "nahmiiProvider": NahmiiProvider {
              "_emitted": Object {
                "block": -1,
              },
              "_events": Object {},
              "chainId": 3,
              "ensAddress": "0x112234455C3a32FD11230C42E7Bccd4A84e02010",
              "name": "ropsten",
              "resetEventsBlock": [Function],
              "url": "http://geth-ropsten.dev.hubii.net",
            },
            "provider": FallbackProvider {
              "_emitted": Object {
                "block": -1,
              },
              "_events": Object {},
              "chainId": 3,
              "ensAddress": "0x112234455C3a32FD11230C42E7Bccd4A84e02010",
              "name": "ropsten",
              "resetEventsBlock": [Function],
            },
            "walletApiEndpoint": [Function],
          }
    }
    currentWalletWithInfo={
        Immutable.Map {
            deviceId: "041ca8e96420e95a106e8c9bb3c9fb9e8c00d4b11cac562888c898000b5cec366c03a0f84574716fac6c7a7df47a925f0e30f5286546adf3179b5a08dc9d8e09da",
            address: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
            type: "lns",
            name: "lns",
            derivationPath: "m/44'/60'/0'/0",
            transactions: Immutable.Map {
                loading: false,
                error: null,
                transactions: Immutable.List [
                    Immutable.Map {
                        decimalAmount: "0.0000000001",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780091,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "ETH",
                        sender: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        amount: "100000000",
                        symbol: "ETH",
                        recipient: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        type: "received",
                        fiatValue: "0.0000000412",
                        confirmations: "3",
                    },
                    Immutable.Map {
                        decimalAmount: "0.000000000000000005",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780091,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        sender: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        amount: "5",
                        symbol: "BOKKY",
                        recipient: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        type: "sent",
                        fiatValue: "0.000000000000000005",
                        confirmations: "3",
                    },
                ],
            },
            balances: Immutable.Map {
                baseLayer: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.198937",
                            currency: "ETH",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.198937",
                                btc: "0.00198937",
                                usd: "81.962044",
                            },
                        },
                        Immutable.Map {
                            balance: "1.231288e-12",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "1.231288e-13",
                                btc: "1.231288e-15",
                                usd: "1.231288e-12",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1989370000001231288",
                        btc: "0.001989370000001231288",
                        usd: "81.962044000001231288",
                    },
                },
                nahmiiAvailable: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "ETH",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.113",
                        btc: "0.00113",
                        usd: "41.33",
                    },
                },
                nahmiiStaging: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "ETH",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1",
                        btc: "0.001",
                        usd: "41.2",
                    },
                },
                nahmiiStaged: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                    ],
                    total: Immutable.Map {
                        eth: "0",
                        btc: "0",
                        usd: "0",
                    },
                },
                nahmiiCombined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "ETH",
                            balance: "0.2",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.2",
                                btc: "0.002",
                                usd: "82.4",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.213",
                        btc: "0.00213",
                        usd: "82.53",
                    },
                },
                combined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.398937",
                            currency: "ETH",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.398937",
                                btc: "0.00398937",
                                usd: "164.362044",
                            },
                        },
                        Immutable.Map {
                            balance: "0.130000000001231288",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.0130000000001231288",
                                btc: "0.000130000000001231288",
                                usd: "0.130000000001231288",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.4119370000001231288",
                        btc: "0.004119370000001231288",
                        usd: "164.492044000001231288",
                    },
                },
            },
        }
    }
    depositStatus={
        Immutable.Map {
            depositingEth: false,
            approvingTokenDeposit: false,
            completingTokenDeposit: true,
            error: null,
        }
    }
    intl={
        Object {
            "formatMessage": [Function],
          }
    }
    nahmiiDeposit={[Function]}
    prices={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    eth: 0.1,
                    btc: 0.001,
                    usd: 1,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "ETH",
                    eth: 1,
                    btc: 0.01,
                    usd: 412,
                },
            ],
        }
    }
    supportedAssets={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    symbol: "My20",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    symbol: "HBT",
                    decimals: 15,
                    color: "0063A5",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    symbol: "SBT",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    symbol: "WETH",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    symbol: "BOKKY",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "ETH",
                    symbol: "ETH",
                    decimals: 18,
                    color: "5C78E4",
                },
            ],
        }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          style={
                    Object {
                              "flex": "1",
                              "marginRight": "2rem",
                            }
          }
>
          <Form.style__FlexForm>
                    <Form.style__FormItem
                              colon={false}
                              label={
                                        <Form.style__FormItemLabel>
                                                  Select an asset to deposit
                                        </Form.style__FormItemLabel>
                              }
                    >
                              <style__Image
                                        alt="logo"
                                        src="/public/images/assets/ETH.svg"
                              />
                              <Select.style
                                        defaultValue="ETH"
                                        onSelect={[Function]}
                                        style={
                                                  Object {
                                                            "paddingLeft": "0.5rem",
                                                          }
                                        }
                              >
                                        <Option
                                                  value="ETH"
                                        >
                                                  ETH
                                        </Option>
                                        <Option
                                                  value="BOKKY"
                                        >
                                                  BOKKY
                                        </Option>
                              </Select.style>
                    </Form.style__FormItem>
                    <Form.style__FormItem
                              colon={false}
                              help={
                                        <HelperTextComponent
                                                  left="$0.00"
                                                  right="usd"
                                        />
                              }
                              label={
                                        <Form.style__FormItemLabel>
                                                  enter_amount
                                        </Form.style__FormItemLabel>
                              }
                    >
                              <Input.style
                                        defaultValue="0"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        value="0"
                              />
                    </Form.style__FormItem>
                    <Collapse
                              bordered={false}
                              defaultActiveKey={
                                        Array [
                                                  "2",
                                                ]
                              }
                    >
                              <CollapsePanel
                                        header={
                                                  <style__AdvancedSettingsHeader>
                                                            advanced_settings
                                                  </style__AdvancedSettingsHeader>
                                        }
                              >
                                        <Form.style__FormItem
                                                  colon={false}
                                                  label={
                                                            <Form.style__FormItemLabel>
                                                                      gas_price
                                                            </Form.style__FormItemLabel>
                                                  }
                                        >
                                                  <Input.style
                                                            defaultValue="10"
                                                            min={0}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="10"
                                                  />
                                        </Form.style__FormItem>
                                        <Form.style__FormItem
                                                  colon={false}
                                                  label={
                                                            <Form.style__FormItemLabel>
                                                                      gas_limit
                                                            </Form.style__FormItemLabel>
                                                  }
                                        >
                                                  <Input.style
                                                            defaultValue="600000"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="600000"
                                                  />
                                        </Form.style__FormItem>
                              </CollapsePanel>
                    </Collapse>
                    <style__DollarPrice>
                              1 ETH = $412.00
                    </style__DollarPrice>
          </Form.style__FlexForm>
</div>,
        <div
          style={
                    Object {
                              "minWidth": "34rem",
                            }
          }
>
          <Row
                    gutter={0}
          >
                    <style__StyledCol
                              span={12}
                    >
                              Deposit
                    </style__StyledCol>
          </Row>
          <Row
                    gutter={0}
          >
                    <TransferDescriptionItem
                              main="0 ETH"
                              subtitle="$0.00"
                    />
          </Row>
          <Row
                    gutter={0}
          >
                    <style__StyledCol
                              span={12}
                    >
                              Base layer fee
                    </style__StyledCol>
          </Row>
          <Row
                    gutter={0}
          >
                    <TransferDescriptionItem
                              main="0.006 ETH"
                              subtitle="$2.47"
                    />
          </Row>
          <Row
                    gutter={0}
          >
                    <style__StyledCol
                              span={12}
                    >
                              Base layer ETH 
                              balance_before
                    </style__StyledCol>
          </Row>
          <Row
                    gutter={0}
          >
                    <TransferDescriptionItem
                              main="0.198937 ETH"
                              subtitle="$81.96"
                    />
          </Row>
          <Row
                    gutter={0}
          >
                    <style__StyledCol
                              span={12}
                    >
                              Base layer ETH 
                              balance_after
                    </style__StyledCol>
          </Row>
          <Row
                    gutter={0}
          >
                    <TransferDescriptionItem
                              main="0.192937 ETH"
                              subtitle="$79.49"
                    />
          </Row>
          <div>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        nahmii ETH 
                                        balance_before
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main="0.2 ETH"
                                        subtitle="$82.40"
                              />
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        nahmii ETH 
                                        balance_after
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main="0.2 ETH"
                                        subtitle="$82.40"
                              />
                    </Row>
          </div>
          <Row
                    gutter={0}
          >
                    <style__HWPromptWrapper>
                              <Connect(HWPromptContainer) />
                    </style__HWPromptWrapper>
                    <div
                              style={
                                        Object {
                                                  "display": "flex",
                                                  "flexDirection": "column",
                                                  "marginTop": "2rem",
                                                }
                              }
                    >
                              <div>
                                        <span>
                                                  <Text
                                                            large={true}
                                                  >
                                                            Waiting for transaction 2/2 to be mined...
                                                  </Text>
                                        </span>
                                        <Icon
                                                  style={
                                                            Object {
                                                                      "color": "white",
                                                                      "fontSize": "1.5rem",
                                                                      "marginLeft": "1rem",
                                                                    }
                                                  }
                                                  type="loading"
                                        />
                              </div>
                              <a
                                        onClick={[Function]}
                                        role="link"
                                        tabIndex={0}
                              >
                                        Track progress on Etherscan
                              </a>
                    </div>
          </Row>
</div>,
      ],
      "style": Object {
        "display": "flex",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Form.style__FlexForm>
            <Form.style__FormItem
                        colon={false}
                        label={
                                    <Form.style__FormItemLabel>
                                                Select an asset to deposit
                                    </Form.style__FormItemLabel>
                        }
            >
                        <style__Image
                                    alt="logo"
                                    src="/public/images/assets/ETH.svg"
                        />
                        <Select.style
                                    defaultValue="ETH"
                                    onSelect={[Function]}
                                    style={
                                                Object {
                                                            "paddingLeft": "0.5rem",
                                                          }
                                    }
                        >
                                    <Option
                                                value="ETH"
                                    >
                                                ETH
                                    </Option>
                                    <Option
                                                value="BOKKY"
                                    >
                                                BOKKY
                                    </Option>
                        </Select.style>
            </Form.style__FormItem>
            <Form.style__FormItem
                        colon={false}
                        help={
                                    <HelperTextComponent
                                                left="$0.00"
                                                right="usd"
                                    />
                        }
                        label={
                                    <Form.style__FormItemLabel>
                                                enter_amount
                                    </Form.style__FormItemLabel>
                        }
            >
                        <Input.style
                                    defaultValue="0"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    value="0"
                        />
            </Form.style__FormItem>
            <Collapse
                        bordered={false}
                        defaultActiveKey={
                                    Array [
                                                "2",
                                              ]
                        }
            >
                        <CollapsePanel
                                    header={
                                                <style__AdvancedSettingsHeader>
                                                            advanced_settings
                                                </style__AdvancedSettingsHeader>
                                    }
                        >
                                    <Form.style__FormItem
                                                colon={false}
                                                label={
                                                            <Form.style__FormItemLabel>
                                                                        gas_price
                                                            </Form.style__FormItemLabel>
                                                }
                                    >
                                                <Input.style
                                                            defaultValue="10"
                                                            min={0}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="10"
                                                />
                                    </Form.style__FormItem>
                                    <Form.style__FormItem
                                                colon={false}
                                                label={
                                                            <Form.style__FormItemLabel>
                                                                        gas_limit
                                                            </Form.style__FormItemLabel>
                                                }
                                    >
                                                <Input.style
                                                            defaultValue="600000"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="600000"
                                                />
                                    </Form.style__FormItem>
                        </CollapsePanel>
            </Collapse>
            <style__DollarPrice>
                        1 ETH = $412.00
            </style__DollarPrice>
</Form.style__FlexForm>,
          "style": Object {
            "flex": "1",
            "marginRight": "2rem",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Form.style__FormItem
                colon={false}
                label={
                                <Form.style__FormItemLabel>
                                                Select an asset to deposit
                                </Form.style__FormItemLabel>
                }
>
                <style__Image
                                alt="logo"
                                src="/public/images/assets/ETH.svg"
                />
                <Select.style
                                defaultValue="ETH"
                                onSelect={[Function]}
                                style={
                                                Object {
                                                                "paddingLeft": "0.5rem",
                                                              }
                                }
                >
                                <Option
                                                value="ETH"
                                >
                                                ETH
                                </Option>
                                <Option
                                                value="BOKKY"
                                >
                                                BOKKY
                                </Option>
                </Select.style>
</Form.style__FormItem>,
              <Form.style__FormItem
                colon={false}
                help={
                                <HelperTextComponent
                                                left="$0.00"
                                                right="usd"
                                />
                }
                label={
                                <Form.style__FormItemLabel>
                                                enter_amount
                                </Form.style__FormItemLabel>
                }
>
                <Input.style
                                defaultValue="0"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                value="0"
                />
</Form.style__FormItem>,
              <Collapse
                bordered={false}
                defaultActiveKey={
                                Array [
                                                "2",
                                              ]
                }
>
                <CollapsePanel
                                header={
                                                <style__AdvancedSettingsHeader>
                                                                advanced_settings
                                                </style__AdvancedSettingsHeader>
                                }
                >
                                <Form.style__FormItem
                                                colon={false}
                                                label={
                                                                <Form.style__FormItemLabel>
                                                                                gas_price
                                                                </Form.style__FormItemLabel>
                                                }
                                >
                                                <Input.style
                                                                defaultValue="10"
                                                                min={0}
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                value="10"
                                                />
                                </Form.style__FormItem>
                                <Form.style__FormItem
                                                colon={false}
                                                label={
                                                                <Form.style__FormItemLabel>
                                                                                gas_limit
                                                                </Form.style__FormItemLabel>
                                                }
                                >
                                                <Input.style
                                                                defaultValue="600000"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                value="600000"
                                                />
                                </Form.style__FormItem>
                </CollapsePanel>
</Collapse>,
              <style__DollarPrice>
                1 ETH = $412.00
</style__DollarPrice>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <style__Image
                    alt="logo"
                    src="/public/images/assets/ETH.svg"
/>,
                  <Select.style
                    defaultValue="ETH"
                    onSelect={[Function]}
                    style={
                                        Object {
                                                            "paddingLeft": "0.5rem",
                                                          }
                    }
>
                    <Option
                                        value="ETH"
                    >
                                        ETH
                    </Option>
                    <Option
                                        value="BOKKY"
                    >
                                        BOKKY
                    </Option>
</Select.style>,
                ],
                "colon": false,
                "label": <Form.style__FormItemLabel>
                  Select an asset to deposit
</Form.style__FormItemLabel>,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "alt": "logo",
                    "src": "/public/images/assets/ETH.svg",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <Option
                        value="ETH"
>
                        ETH
</Option>,
                      <Option
                        value="BOKKY"
>
                        BOKKY
</Option>,
                    ],
                    "defaultValue": "ETH",
                    "onSelect": [Function],
                    "style": Object {
                      "paddingLeft": "0.5rem",
                    },
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "ETH",
                      "nodeType": "class",
                      "props": Object {
                        "children": "ETH",
                        "value": "ETH",
                      },
                      "ref": null,
                      "rendered": "ETH",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "BOKKY",
                      "nodeType": "class",
                      "props": Object {
                        "children": "BOKKY",
                        "value": "BOKKY",
                      },
                      "ref": null,
                      "rendered": "BOKKY",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Input.style
                  defaultValue="0"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  value="0"
/>,
                "colon": false,
                "help": <HelperTextComponent
                  left="$0.00"
                  right="usd"
/>,
                "label": <Form.style__FormItemLabel>
                  enter_amount
</Form.style__FormItemLabel>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "defaultValue": "0",
                  "onBlur": [Function],
                  "onChange": [Function],
                  "onFocus": [Function],
                  "value": "0",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bordered": false,
                "children": <CollapsePanel
                  header={
                                    <style__AdvancedSettingsHeader>
                                                      advanced_settings
                                    </style__AdvancedSettingsHeader>
                  }
>
                  <Form.style__FormItem
                                    colon={false}
                                    label={
                                                      <Form.style__FormItemLabel>
                                                                        gas_price
                                                      </Form.style__FormItemLabel>
                                    }
                  >
                                    <Input.style
                                                      defaultValue="10"
                                                      min={0}
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      value="10"
                                    />
                  </Form.style__FormItem>
                  <Form.style__FormItem
                                    colon={false}
                                    label={
                                                      <Form.style__FormItemLabel>
                                                                        gas_limit
                                                      </Form.style__FormItemLabel>
                                    }
                  >
                                    <Input.style
                                                      defaultValue="600000"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      value="600000"
                                    />
                  </Form.style__FormItem>
</CollapsePanel>,
                "defaultActiveKey": Array [
                  "2",
                ],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": "1",
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Form.style__FormItem
                      colon={false}
                      label={
                                            <Form.style__FormItemLabel>
                                                                  gas_price
                                            </Form.style__FormItemLabel>
                      }
>
                      <Input.style
                                            defaultValue="10"
                                            min={0}
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            value="10"
                      />
</Form.style__FormItem>,
                    <Form.style__FormItem
                      colon={false}
                      label={
                                            <Form.style__FormItemLabel>
                                                                  gas_limit
                                            </Form.style__FormItemLabel>
                      }
>
                      <Input.style
                                            defaultValue="600000"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            value="600000"
                      />
</Form.style__FormItem>,
                  ],
                  "header": <style__AdvancedSettingsHeader>
                    advanced_settings
</style__AdvancedSettingsHeader>,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Input.style
                        defaultValue="10"
                        min={0}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        value="10"
/>,
                      "colon": false,
                      "label": <Form.style__FormItemLabel>
                        gas_price
</Form.style__FormItemLabel>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "defaultValue": "10",
                        "min": 0,
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onFocus": [Function],
                        "value": "10",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Input.style
                        defaultValue="600000"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        value="600000"
/>,
                      "colon": false,
                      "label": <Form.style__FormItemLabel>
                        gas_limit
</Form.style__FormItemLabel>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "defaultValue": "600000",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onFocus": [Function],
                        "value": "600000",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "1 ETH = $412.00",
              },
              "ref": null,
              "rendered": "1 ETH = $412.00",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Row
              gutter={0}
>
              <style__StyledCol
                            span={12}
              >
                            Deposit
              </style__StyledCol>
</Row>,
            <Row
              gutter={0}
>
              <TransferDescriptionItem
                            main="0 ETH"
                            subtitle="$0.00"
              />
</Row>,
            <Row
              gutter={0}
>
              <style__StyledCol
                            span={12}
              >
                            Base layer fee
              </style__StyledCol>
</Row>,
            <Row
              gutter={0}
>
              <TransferDescriptionItem
                            main="0.006 ETH"
                            subtitle="$2.47"
              />
</Row>,
            <Row
              gutter={0}
>
              <style__StyledCol
                            span={12}
              >
                            Base layer ETH 
                            balance_before
              </style__StyledCol>
</Row>,
            <Row
              gutter={0}
>
              <TransferDescriptionItem
                            main="0.198937 ETH"
                            subtitle="$81.96"
              />
</Row>,
            <Row
              gutter={0}
>
              <style__StyledCol
                            span={12}
              >
                            Base layer ETH 
                            balance_after
              </style__StyledCol>
</Row>,
            <Row
              gutter={0}
>
              <TransferDescriptionItem
                            main="0.192937 ETH"
                            subtitle="$79.49"
              />
</Row>,
            <div>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          nahmii ETH 
                                          balance_before
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main="0.2 ETH"
                                          subtitle="$82.40"
                            />
              </Row>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          nahmii ETH 
                                          balance_after
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main="0.2 ETH"
                                          subtitle="$82.40"
                            />
              </Row>
</div>,
            false,
            <Row
              gutter={0}
>
              <style__HWPromptWrapper>
                            <Connect(HWPromptContainer) />
              </style__HWPromptWrapper>
              <div
                            style={
                                          Object {
                                                        "display": "flex",
                                                        "flexDirection": "column",
                                                        "marginTop": "2rem",
                                                      }
                            }
              >
                            <div>
                                          <span>
                                                        <Text
                                                                      large={true}
                                                        >
                                                                      Waiting for transaction 2/2 to be mined...
                                                        </Text>
                                          </span>
                                          <Icon
                                                        style={
                                                                      Object {
                                                                                    "color": "white",
                                                                                    "fontSize": "1.5rem",
                                                                                    "marginLeft": "1rem",
                                                                                  }
                                                        }
                                                        type="loading"
                                          />
                            </div>
                            <a
                                          onClick={[Function]}
                                          role="link"
                                          tabIndex={0}
                            >
                                          Track progress on Etherscan
                            </a>
              </div>
</Row>,
          ],
          "style": Object {
            "minWidth": "34rem",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <style__StyledCol
                span={12}
>
                Deposit
</style__StyledCol>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Deposit",
                "span": 12,
              },
              "ref": null,
              "rendered": "Deposit",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <TransferDescriptionItem
                main="0 ETH"
                subtitle="$0.00"
/>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "main": "0 ETH",
                "subtitle": "$0.00",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <style__StyledCol
                span={12}
>
                Base layer fee
</style__StyledCol>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Base layer fee",
                "span": 12,
              },
              "ref": null,
              "rendered": "Base layer fee",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <TransferDescriptionItem
                main="0.006 ETH"
                subtitle="$2.47"
/>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "main": "0.006 ETH",
                "subtitle": "$2.47",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <style__StyledCol
                span={12}
>
                Base layer ETH 
                balance_before
</style__StyledCol>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  "Base layer ETH ",
                  "balance_before",
                ],
                "span": 12,
              },
              "ref": null,
              "rendered": Array [
                "Base layer ETH ",
                "balance_before",
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <TransferDescriptionItem
                main="0.198937 ETH"
                subtitle="$81.96"
/>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "main": "0.198937 ETH",
                "subtitle": "$81.96",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <style__StyledCol
                span={12}
>
                Base layer ETH 
                balance_after
</style__StyledCol>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  "Base layer ETH ",
                  "balance_after",
                ],
                "span": 12,
              },
              "ref": null,
              "rendered": Array [
                "Base layer ETH ",
                "balance_after",
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <TransferDescriptionItem
                main="0.192937 ETH"
                subtitle="$79.49"
/>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "main": "0.192937 ETH",
                "subtitle": "$79.49",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    nahmii ETH 
                                    balance_before
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main="0.2 ETH"
                                    subtitle="$82.40"
                  />
</Row>,
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    nahmii ETH 
                                    balance_after
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main="0.2 ETH"
                                    subtitle="$82.40"
                  />
</Row>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    nahmii ETH 
                    balance_before
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "nahmii ETH ",
                      "balance_before",
                    ],
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Array [
                    "nahmii ETH ",
                    "balance_before",
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main="0.2 ETH"
                    subtitle="$82.40"
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": "0.2 ETH",
                    "subtitle": "$82.40",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    nahmii ETH 
                    balance_after
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "nahmii ETH ",
                      "balance_after",
                    ],
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Array [
                    "nahmii ETH ",
                    "balance_after",
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main="0.2 ETH"
                    subtitle="$82.40"
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": "0.2 ETH",
                    "subtitle": "$82.40",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": "div",
          },
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <style__HWPromptWrapper>
                  <Connect(HWPromptContainer) />
</style__HWPromptWrapper>,
                null,
                <div
                  style={
                                    Object {
                                                      "display": "flex",
                                                      "flexDirection": "column",
                                                      "marginTop": "2rem",
                                                    }
                  }
>
                  <div>
                                    <span>
                                                      <Text
                                                                        large={true}
                                                      >
                                                                        Waiting for transaction 2/2 to be mined...
                                                      </Text>
                                    </span>
                                    <Icon
                                                      style={
                                                                        Object {
                                                                                          "color": "white",
                                                                                          "fontSize": "1.5rem",
                                                                                          "marginLeft": "1rem",
                                                                                        }
                                                      }
                                                      type="loading"
                                    />
                  </div>
                  <a
                                    onClick={[Function]}
                                    role="link"
                                    tabIndex={0}
                  >
                                    Track progress on Etherscan
                  </a>
</div>,
              ],
              "gutter": 0,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Connect(HWPromptContainer) />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              null,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div>
                      <span>
                                            <Text
                                                                  large={true}
                                            >
                                                                  Waiting for transaction 2/2 to be mined...
                                            </Text>
                      </span>
                      <Icon
                                            style={
                                                                  Object {
                                                                                        "color": "white",
                                                                                        "fontSize": "1.5rem",
                                                                                        "marginLeft": "1rem",
                                                                                      }
                                            }
                                            type="loading"
                      />
</div>,
                    <a
                      onClick={[Function]}
                      role="link"
                      tabIndex={0}
>
                      Track progress on Etherscan
</a>,
                  ],
                  "style": Object {
                    "display": "flex",
                    "flexDirection": "column",
                    "marginTop": "2rem",
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <span>
                          <Text
                                                    large={true}
                          >
                                                    Waiting for transaction 2/2 to be mined...
                          </Text>
</span>,
                        <Icon
                          style={
                                                    Object {
                                                                              "color": "white",
                                                                              "fontSize": "1.5rem",
                                                                              "marginLeft": "1rem",
                                                                            }
                          }
                          type="loading"
/>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <Text
                            large={true}
>
                            Waiting for transaction 2/2 to be mined...
</Text>,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": "Waiting for transaction 2/2 to be mined...",
                            "large": true,
                          },
                          "ref": null,
                          "rendered": "Waiting for transaction 2/2 to be mined...",
                          "type": [Function],
                        },
                        "type": "span",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "style": Object {
                            "color": "white",
                            "fontSize": "1.5rem",
                            "marginLeft": "1rem",
                          },
                          "type": "loading",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Track progress on Etherscan",
                      "onClick": [Function],
                      "role": "link",
                      "tabIndex": 0,
                    },
                    "ref": null,
                    "rendered": "Track progress on Etherscan",
                    "type": "a",
                  },
                ],
                "type": "div",
              },
            ],
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            style={
                        Object {
                                    "flex": "1",
                                    "marginRight": "2rem",
                                  }
            }
>
            <Form.style__FlexForm>
                        <Form.style__FormItem
                                    colon={false}
                                    label={
                                                <Form.style__FormItemLabel>
                                                            Select an asset to deposit
                                                </Form.style__FormItemLabel>
                                    }
                        >
                                    <style__Image
                                                alt="logo"
                                                src="/public/images/assets/ETH.svg"
                                    />
                                    <Select.style
                                                defaultValue="ETH"
                                                onSelect={[Function]}
                                                style={
                                                            Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                                                }
                                    >
                                                <Option
                                                            value="ETH"
                                                >
                                                            ETH
                                                </Option>
                                                <Option
                                                            value="BOKKY"
                                                >
                                                            BOKKY
                                                </Option>
                                    </Select.style>
                        </Form.style__FormItem>
                        <Form.style__FormItem
                                    colon={false}
                                    help={
                                                <HelperTextComponent
                                                            left="$0.00"
                                                            right="usd"
                                                />
                                    }
                                    label={
                                                <Form.style__FormItemLabel>
                                                            enter_amount
                                                </Form.style__FormItemLabel>
                                    }
                        >
                                    <Input.style
                                                defaultValue="0"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value="0"
                                    />
                        </Form.style__FormItem>
                        <Collapse
                                    bordered={false}
                                    defaultActiveKey={
                                                Array [
                                                            "2",
                                                          ]
                                    }
                        >
                                    <CollapsePanel
                                                header={
                                                            <style__AdvancedSettingsHeader>
                                                                        advanced_settings
                                                            </style__AdvancedSettingsHeader>
                                                }
                                    >
                                                <Form.style__FormItem
                                                            colon={false}
                                                            label={
                                                                        <Form.style__FormItemLabel>
                                                                                    gas_price
                                                                        </Form.style__FormItemLabel>
                                                            }
                                                >
                                                            <Input.style
                                                                        defaultValue="10"
                                                                        min={0}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        value="10"
                                                            />
                                                </Form.style__FormItem>
                                                <Form.style__FormItem
                                                            colon={false}
                                                            label={
                                                                        <Form.style__FormItemLabel>
                                                                                    gas_limit
                                                                        </Form.style__FormItemLabel>
                                                            }
                                                >
                                                            <Input.style
                                                                        defaultValue="600000"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        value="600000"
                                                            />
                                                </Form.style__FormItem>
                                    </CollapsePanel>
                        </Collapse>
                        <style__DollarPrice>
                                    1 ETH = $412.00
                        </style__DollarPrice>
            </Form.style__FlexForm>
</div>,
          <div
            style={
                        Object {
                                    "minWidth": "34rem",
                                  }
            }
>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    Deposit
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main="0 ETH"
                                    subtitle="$0.00"
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    Base layer fee
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main="0.006 ETH"
                                    subtitle="$2.47"
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    Base layer ETH 
                                    balance_before
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main="0.198937 ETH"
                                    subtitle="$81.96"
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    Base layer ETH 
                                    balance_after
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main="0.192937 ETH"
                                    subtitle="$79.49"
                        />
            </Row>
            <div>
                        <Row
                                    gutter={0}
                        >
                                    <style__StyledCol
                                                span={12}
                                    >
                                                nahmii ETH 
                                                balance_before
                                    </style__StyledCol>
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <TransferDescriptionItem
                                                main="0.2 ETH"
                                                subtitle="$82.40"
                                    />
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <style__StyledCol
                                                span={12}
                                    >
                                                nahmii ETH 
                                                balance_after
                                    </style__StyledCol>
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <TransferDescriptionItem
                                                main="0.2 ETH"
                                                subtitle="$82.40"
                                    />
                        </Row>
            </div>
            <Row
                        gutter={0}
            >
                        <style__HWPromptWrapper>
                                    <Connect(HWPromptContainer) />
                        </style__HWPromptWrapper>
                        <div
                                    style={
                                                Object {
                                                            "display": "flex",
                                                            "flexDirection": "column",
                                                            "marginTop": "2rem",
                                                          }
                                    }
                        >
                                    <div>
                                                <span>
                                                            <Text
                                                                        large={true}
                                                            >
                                                                        Waiting for transaction 2/2 to be mined...
                                                            </Text>
                                                </span>
                                                <Icon
                                                            style={
                                                                        Object {
                                                                                    "color": "white",
                                                                                    "fontSize": "1.5rem",
                                                                                    "marginLeft": "1rem",
                                                                                  }
                                                            }
                                                            type="loading"
                                                />
                                    </div>
                                    <a
                                                onClick={[Function]}
                                                role="link"
                                                tabIndex={0}
                                    >
                                                Track progress on Etherscan
                                    </a>
                        </div>
            </Row>
</div>,
        ],
        "style": Object {
          "display": "flex",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Form.style__FlexForm>
              <Form.style__FormItem
                            colon={false}
                            label={
                                          <Form.style__FormItemLabel>
                                                        Select an asset to deposit
                                          </Form.style__FormItemLabel>
                            }
              >
                            <style__Image
                                          alt="logo"
                                          src="/public/images/assets/ETH.svg"
                            />
                            <Select.style
                                          defaultValue="ETH"
                                          onSelect={[Function]}
                                          style={
                                                        Object {
                                                                      "paddingLeft": "0.5rem",
                                                                    }
                                          }
                            >
                                          <Option
                                                        value="ETH"
                                          >
                                                        ETH
                                          </Option>
                                          <Option
                                                        value="BOKKY"
                                          >
                                                        BOKKY
                                          </Option>
                            </Select.style>
              </Form.style__FormItem>
              <Form.style__FormItem
                            colon={false}
                            help={
                                          <HelperTextComponent
                                                        left="$0.00"
                                                        right="usd"
                                          />
                            }
                            label={
                                          <Form.style__FormItemLabel>
                                                        enter_amount
                                          </Form.style__FormItemLabel>
                            }
              >
                            <Input.style
                                          defaultValue="0"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          value="0"
                            />
              </Form.style__FormItem>
              <Collapse
                            bordered={false}
                            defaultActiveKey={
                                          Array [
                                                        "2",
                                                      ]
                            }
              >
                            <CollapsePanel
                                          header={
                                                        <style__AdvancedSettingsHeader>
                                                                      advanced_settings
                                                        </style__AdvancedSettingsHeader>
                                          }
                            >
                                          <Form.style__FormItem
                                                        colon={false}
                                                        label={
                                                                      <Form.style__FormItemLabel>
                                                                                    gas_price
                                                                      </Form.style__FormItemLabel>
                                                        }
                                          >
                                                        <Input.style
                                                                      defaultValue="10"
                                                                      min={0}
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      value="10"
                                                        />
                                          </Form.style__FormItem>
                                          <Form.style__FormItem
                                                        colon={false}
                                                        label={
                                                                      <Form.style__FormItemLabel>
                                                                                    gas_limit
                                                                      </Form.style__FormItemLabel>
                                                        }
                                          >
                                                        <Input.style
                                                                      defaultValue="600000"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      value="600000"
                                                        />
                                          </Form.style__FormItem>
                            </CollapsePanel>
              </Collapse>
              <style__DollarPrice>
                            1 ETH = $412.00
              </style__DollarPrice>
</Form.style__FlexForm>,
            "style": Object {
              "flex": "1",
              "marginRight": "2rem",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Form.style__FormItem
                  colon={false}
                  label={
                                    <Form.style__FormItemLabel>
                                                      Select an asset to deposit
                                    </Form.style__FormItemLabel>
                  }
>
                  <style__Image
                                    alt="logo"
                                    src="/public/images/assets/ETH.svg"
                  />
                  <Select.style
                                    defaultValue="ETH"
                                    onSelect={[Function]}
                                    style={
                                                      Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                                    }
                  >
                                    <Option
                                                      value="ETH"
                                    >
                                                      ETH
                                    </Option>
                                    <Option
                                                      value="BOKKY"
                                    >
                                                      BOKKY
                                    </Option>
                  </Select.style>
</Form.style__FormItem>,
                <Form.style__FormItem
                  colon={false}
                  help={
                                    <HelperTextComponent
                                                      left="$0.00"
                                                      right="usd"
                                    />
                  }
                  label={
                                    <Form.style__FormItemLabel>
                                                      enter_amount
                                    </Form.style__FormItemLabel>
                  }
>
                  <Input.style
                                    defaultValue="0"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    value="0"
                  />
</Form.style__FormItem>,
                <Collapse
                  bordered={false}
                  defaultActiveKey={
                                    Array [
                                                      "2",
                                                    ]
                  }
>
                  <CollapsePanel
                                    header={
                                                      <style__AdvancedSettingsHeader>
                                                                        advanced_settings
                                                      </style__AdvancedSettingsHeader>
                                    }
                  >
                                    <Form.style__FormItem
                                                      colon={false}
                                                      label={
                                                                        <Form.style__FormItemLabel>
                                                                                          gas_price
                                                                        </Form.style__FormItemLabel>
                                                      }
                                    >
                                                      <Input.style
                                                                        defaultValue="10"
                                                                        min={0}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        value="10"
                                                      />
                                    </Form.style__FormItem>
                                    <Form.style__FormItem
                                                      colon={false}
                                                      label={
                                                                        <Form.style__FormItemLabel>
                                                                                          gas_limit
                                                                        </Form.style__FormItemLabel>
                                                      }
                                    >
                                                      <Input.style
                                                                        defaultValue="600000"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        value="600000"
                                                      />
                                    </Form.style__FormItem>
                  </CollapsePanel>
</Collapse>,
                <style__DollarPrice>
                  1 ETH = $412.00
</style__DollarPrice>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <style__Image
                      alt="logo"
                      src="/public/images/assets/ETH.svg"
/>,
                    <Select.style
                      defaultValue="ETH"
                      onSelect={[Function]}
                      style={
                                            Object {
                                                                  "paddingLeft": "0.5rem",
                                                                }
                      }
>
                      <Option
                                            value="ETH"
                      >
                                            ETH
                      </Option>
                      <Option
                                            value="BOKKY"
                      >
                                            BOKKY
                      </Option>
</Select.style>,
                  ],
                  "colon": false,
                  "label": <Form.style__FormItemLabel>
                    Select an asset to deposit
</Form.style__FormItemLabel>,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "alt": "logo",
                      "src": "/public/images/assets/ETH.svg",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <Option
                          value="ETH"
>
                          ETH
</Option>,
                        <Option
                          value="BOKKY"
>
                          BOKKY
</Option>,
                      ],
                      "defaultValue": "ETH",
                      "onSelect": [Function],
                      "style": Object {
                        "paddingLeft": "0.5rem",
                      },
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": "ETH",
                        "nodeType": "class",
                        "props": Object {
                          "children": "ETH",
                          "value": "ETH",
                        },
                        "ref": null,
                        "rendered": "ETH",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": "BOKKY",
                        "nodeType": "class",
                        "props": Object {
                          "children": "BOKKY",
                          "value": "BOKKY",
                        },
                        "ref": null,
                        "rendered": "BOKKY",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Input.style
                    defaultValue="0"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    value="0"
/>,
                  "colon": false,
                  "help": <HelperTextComponent
                    left="$0.00"
                    right="usd"
/>,
                  "label": <Form.style__FormItemLabel>
                    enter_amount
</Form.style__FormItemLabel>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "defaultValue": "0",
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "0",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bordered": false,
                  "children": <CollapsePanel
                    header={
                                        <style__AdvancedSettingsHeader>
                                                            advanced_settings
                                        </style__AdvancedSettingsHeader>
                    }
>
                    <Form.style__FormItem
                                        colon={false}
                                        label={
                                                            <Form.style__FormItemLabel>
                                                                                gas_price
                                                            </Form.style__FormItemLabel>
                                        }
                    >
                                        <Input.style
                                                            defaultValue="10"
                                                            min={0}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="10"
                                        />
                    </Form.style__FormItem>
                    <Form.style__FormItem
                                        colon={false}
                                        label={
                                                            <Form.style__FormItemLabel>
                                                                                gas_limit
                                                            </Form.style__FormItemLabel>
                                        }
                    >
                                        <Input.style
                                                            defaultValue="600000"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="600000"
                                        />
                    </Form.style__FormItem>
</CollapsePanel>,
                  "defaultActiveKey": Array [
                    "2",
                  ],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <Form.style__FormItem
                        colon={false}
                        label={
                                                <Form.style__FormItemLabel>
                                                                        gas_price
                                                </Form.style__FormItemLabel>
                        }
>
                        <Input.style
                                                defaultValue="10"
                                                min={0}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value="10"
                        />
</Form.style__FormItem>,
                      <Form.style__FormItem
                        colon={false}
                        label={
                                                <Form.style__FormItemLabel>
                                                                        gas_limit
                                                </Form.style__FormItemLabel>
                        }
>
                        <Input.style
                                                defaultValue="600000"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value="600000"
                        />
</Form.style__FormItem>,
                    ],
                    "header": <style__AdvancedSettingsHeader>
                      advanced_settings
</style__AdvancedSettingsHeader>,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Input.style
                          defaultValue="10"
                          min={0}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          value="10"
/>,
                        "colon": false,
                        "label": <Form.style__FormItemLabel>
                          gas_price
</Form.style__FormItemLabel>,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "defaultValue": "10",
                          "min": 0,
                          "onBlur": [Function],
                          "onChange": [Function],
                          "onFocus": [Function],
                          "value": "10",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Input.style
                          defaultValue="600000"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          value="600000"
/>,
                        "colon": false,
                        "label": <Form.style__FormItemLabel>
                          gas_limit
</Form.style__FormItemLabel>,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "defaultValue": "600000",
                          "onBlur": [Function],
                          "onChange": [Function],
                          "onFocus": [Function],
                          "value": "600000",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "1 ETH = $412.00",
                },
                "ref": null,
                "rendered": "1 ETH = $412.00",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                Deposit
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main="0 ETH"
                                subtitle="$0.00"
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                Base layer fee
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main="0.006 ETH"
                                subtitle="$2.47"
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                Base layer ETH 
                                balance_before
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main="0.198937 ETH"
                                subtitle="$81.96"
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                Base layer ETH 
                                balance_after
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main="0.192937 ETH"
                                subtitle="$79.49"
                />
</Row>,
              <div>
                <Row
                                gutter={0}
                >
                                <style__StyledCol
                                                span={12}
                                >
                                                nahmii ETH 
                                                balance_before
                                </style__StyledCol>
                </Row>
                <Row
                                gutter={0}
                >
                                <TransferDescriptionItem
                                                main="0.2 ETH"
                                                subtitle="$82.40"
                                />
                </Row>
                <Row
                                gutter={0}
                >
                                <style__StyledCol
                                                span={12}
                                >
                                                nahmii ETH 
                                                balance_after
                                </style__StyledCol>
                </Row>
                <Row
                                gutter={0}
                >
                                <TransferDescriptionItem
                                                main="0.2 ETH"
                                                subtitle="$82.40"
                                />
                </Row>
</div>,
              false,
              <Row
                gutter={0}
>
                <style__HWPromptWrapper>
                                <Connect(HWPromptContainer) />
                </style__HWPromptWrapper>
                <div
                                style={
                                                Object {
                                                                "display": "flex",
                                                                "flexDirection": "column",
                                                                "marginTop": "2rem",
                                                              }
                                }
                >
                                <div>
                                                <span>
                                                                <Text
                                                                                large={true}
                                                                >
                                                                                Waiting for transaction 2/2 to be mined...
                                                                </Text>
                                                </span>
                                                <Icon
                                                                style={
                                                                                Object {
                                                                                                "color": "white",
                                                                                                "fontSize": "1.5rem",
                                                                                                "marginLeft": "1rem",
                                                                                              }
                                                                }
                                                                type="loading"
                                                />
                                </div>
                                <a
                                                onClick={[Function]}
                                                role="link"
                                                tabIndex={0}
                                >
                                                Track progress on Etherscan
                                </a>
                </div>
</Row>,
            ],
            "style": Object {
              "minWidth": "34rem",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  Deposit
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Deposit",
                  "span": 12,
                },
                "ref": null,
                "rendered": "Deposit",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main="0 ETH"
                  subtitle="$0.00"
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": "0 ETH",
                  "subtitle": "$0.00",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  Base layer fee
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Base layer fee",
                  "span": 12,
                },
                "ref": null,
                "rendered": "Base layer fee",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main="0.006 ETH"
                  subtitle="$2.47"
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": "0.006 ETH",
                  "subtitle": "$2.47",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  Base layer ETH 
                  balance_before
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "Base layer ETH ",
                    "balance_before",
                  ],
                  "span": 12,
                },
                "ref": null,
                "rendered": Array [
                  "Base layer ETH ",
                  "balance_before",
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main="0.198937 ETH"
                  subtitle="$81.96"
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": "0.198937 ETH",
                  "subtitle": "$81.96",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  Base layer ETH 
                  balance_after
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "Base layer ETH ",
                    "balance_after",
                  ],
                  "span": 12,
                },
                "ref": null,
                "rendered": Array [
                  "Base layer ETH ",
                  "balance_after",
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main="0.192937 ETH"
                  subtitle="$79.49"
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": "0.192937 ETH",
                  "subtitle": "$79.49",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Row
                    gutter={0}
>
                    <style__StyledCol
                                        span={12}
                    >
                                        nahmii ETH 
                                        balance_before
                    </style__StyledCol>
</Row>,
                  <Row
                    gutter={0}
>
                    <TransferDescriptionItem
                                        main="0.2 ETH"
                                        subtitle="$82.40"
                    />
</Row>,
                  <Row
                    gutter={0}
>
                    <style__StyledCol
                                        span={12}
                    >
                                        nahmii ETH 
                                        balance_after
                    </style__StyledCol>
</Row>,
                  <Row
                    gutter={0}
>
                    <TransferDescriptionItem
                                        main="0.2 ETH"
                                        subtitle="$82.40"
                    />
</Row>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <style__StyledCol
                      span={12}
>
                      nahmii ETH 
                      balance_before
</style__StyledCol>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "nahmii ETH ",
                        "balance_before",
                      ],
                      "span": 12,
                    },
                    "ref": null,
                    "rendered": Array [
                      "nahmii ETH ",
                      "balance_before",
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TransferDescriptionItem
                      main="0.2 ETH"
                      subtitle="$82.40"
/>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "main": "0.2 ETH",
                      "subtitle": "$82.40",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <style__StyledCol
                      span={12}
>
                      nahmii ETH 
                      balance_after
</style__StyledCol>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "nahmii ETH ",
                        "balance_after",
                      ],
                      "span": 12,
                    },
                    "ref": null,
                    "rendered": Array [
                      "nahmii ETH ",
                      "balance_after",
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TransferDescriptionItem
                      main="0.2 ETH"
                      subtitle="$82.40"
/>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "main": "0.2 ETH",
                      "subtitle": "$82.40",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <style__HWPromptWrapper>
                    <Connect(HWPromptContainer) />
</style__HWPromptWrapper>,
                  null,
                  <div
                    style={
                                        Object {
                                                            "display": "flex",
                                                            "flexDirection": "column",
                                                            "marginTop": "2rem",
                                                          }
                    }
>
                    <div>
                                        <span>
                                                            <Text
                                                                                large={true}
                                                            >
                                                                                Waiting for transaction 2/2 to be mined...
                                                            </Text>
                                        </span>
                                        <Icon
                                                            style={
                                                                                Object {
                                                                                                    "color": "white",
                                                                                                    "fontSize": "1.5rem",
                                                                                                    "marginLeft": "1rem",
                                                                                                  }
                                                            }
                                                            type="loading"
                                        />
                    </div>
                    <a
                                        onClick={[Function]}
                                        role="link"
                                        tabIndex={0}
                    >
                                        Track progress on Etherscan
                    </a>
</div>,
                ],
                "gutter": 0,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Connect(HWPromptContainer) />,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                null,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div>
                        <span>
                                                <Text
                                                                        large={true}
                                                >
                                                                        Waiting for transaction 2/2 to be mined...
                                                </Text>
                        </span>
                        <Icon
                                                style={
                                                                        Object {
                                                                                                "color": "white",
                                                                                                "fontSize": "1.5rem",
                                                                                                "marginLeft": "1rem",
                                                                                              }
                                                }
                                                type="loading"
                        />
</div>,
                      <a
                        onClick={[Function]}
                        role="link"
                        tabIndex={0}
>
                        Track progress on Etherscan
</a>,
                    ],
                    "style": Object {
                      "display": "flex",
                      "flexDirection": "column",
                      "marginTop": "2rem",
                    },
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <span>
                            <Text
                                                        large={true}
                            >
                                                        Waiting for transaction 2/2 to be mined...
                            </Text>
</span>,
                          <Icon
                            style={
                                                        Object {
                                                                                    "color": "white",
                                                                                    "fontSize": "1.5rem",
                                                                                    "marginLeft": "1rem",
                                                                                  }
                            }
                            type="loading"
/>,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <Text
                              large={true}
>
                              Waiting for transaction 2/2 to be mined...
</Text>,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": "Waiting for transaction 2/2 to be mined...",
                              "large": true,
                            },
                            "ref": null,
                            "rendered": "Waiting for transaction 2/2 to be mined...",
                            "type": [Function],
                          },
                          "type": "span",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "style": Object {
                              "color": "white",
                              "fontSize": "1.5rem",
                              "marginLeft": "1rem",
                            },
                            "type": "loading",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                      ],
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Track progress on Etherscan",
                        "onClick": [Function],
                        "role": "link",
                        "tabIndex": 0,
                      },
                      "ref": null,
                      "rendered": "Track progress on Etherscan",
                      "type": "a",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<NahmiiDeposit /> should render correctly when depositing eth 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NahmiiDeposit
    currentNetwork={
        Object {
            "identityServiceAppId": "appid",
            "identityServiceSecret": "secret",
            "nahmiiProvider": NahmiiProvider {
              "_emitted": Object {
                "block": -1,
              },
              "_events": Object {},
              "chainId": 3,
              "ensAddress": "0x112234455C3a32FD11230C42E7Bccd4A84e02010",
              "name": "ropsten",
              "resetEventsBlock": [Function],
              "url": "http://geth-ropsten.dev.hubii.net",
            },
            "provider": FallbackProvider {
              "_emitted": Object {
                "block": -1,
              },
              "_events": Object {},
              "chainId": 3,
              "ensAddress": "0x112234455C3a32FD11230C42E7Bccd4A84e02010",
              "name": "ropsten",
              "resetEventsBlock": [Function],
            },
            "walletApiEndpoint": [Function],
          }
    }
    currentWalletWithInfo={
        Immutable.Map {
            deviceId: "041ca8e96420e95a106e8c9bb3c9fb9e8c00d4b11cac562888c898000b5cec366c03a0f84574716fac6c7a7df47a925f0e30f5286546adf3179b5a08dc9d8e09da",
            address: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
            type: "lns",
            name: "lns",
            derivationPath: "m/44'/60'/0'/0",
            transactions: Immutable.Map {
                loading: false,
                error: null,
                transactions: Immutable.List [
                    Immutable.Map {
                        decimalAmount: "0.0000000001",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780091,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "ETH",
                        sender: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        amount: "100000000",
                        symbol: "ETH",
                        recipient: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        type: "received",
                        fiatValue: "0.0000000412",
                        confirmations: "3",
                    },
                    Immutable.Map {
                        decimalAmount: "0.000000000000000005",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780091,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        sender: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        amount: "5",
                        symbol: "BOKKY",
                        recipient: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        type: "sent",
                        fiatValue: "0.000000000000000005",
                        confirmations: "3",
                    },
                ],
            },
            balances: Immutable.Map {
                baseLayer: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.198937",
                            currency: "ETH",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.198937",
                                btc: "0.00198937",
                                usd: "81.962044",
                            },
                        },
                        Immutable.Map {
                            balance: "1.231288e-12",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "1.231288e-13",
                                btc: "1.231288e-15",
                                usd: "1.231288e-12",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1989370000001231288",
                        btc: "0.001989370000001231288",
                        usd: "81.962044000001231288",
                    },
                },
                nahmiiAvailable: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "ETH",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.113",
                        btc: "0.00113",
                        usd: "41.33",
                    },
                },
                nahmiiStaging: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "ETH",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1",
                        btc: "0.001",
                        usd: "41.2",
                    },
                },
                nahmiiStaged: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                    ],
                    total: Immutable.Map {
                        eth: "0",
                        btc: "0",
                        usd: "0",
                    },
                },
                nahmiiCombined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "ETH",
                            balance: "0.2",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.2",
                                btc: "0.002",
                                usd: "82.4",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.213",
                        btc: "0.00213",
                        usd: "82.53",
                    },
                },
                combined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.398937",
                            currency: "ETH",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.398937",
                                btc: "0.00398937",
                                usd: "164.362044",
                            },
                        },
                        Immutable.Map {
                            balance: "0.130000000001231288",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.0130000000001231288",
                                btc: "0.000130000000001231288",
                                usd: "0.130000000001231288",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.4119370000001231288",
                        btc: "0.004119370000001231288",
                        usd: "164.492044000001231288",
                    },
                },
            },
        }
    }
    depositStatus={
        Immutable.Map {
            depositingEth: true,
            approvingTokenDeposit: false,
            completingTokenDeposit: false,
            error: null,
        }
    }
    intl={
        Object {
            "formatMessage": [Function],
          }
    }
    nahmiiDeposit={[Function]}
    prices={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    eth: 0.1,
                    btc: 0.001,
                    usd: 1,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "ETH",
                    eth: 1,
                    btc: 0.01,
                    usd: 412,
                },
            ],
        }
    }
    supportedAssets={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    symbol: "My20",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    symbol: "HBT",
                    decimals: 15,
                    color: "0063A5",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    symbol: "SBT",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    symbol: "WETH",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    symbol: "BOKKY",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "ETH",
                    symbol: "ETH",
                    decimals: 18,
                    color: "5C78E4",
                },
            ],
        }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          style={
                    Object {
                              "flex": "1",
                              "marginRight": "2rem",
                            }
          }
>
          <Form.style__FlexForm>
                    <Form.style__FormItem
                              colon={false}
                              label={
                                        <Form.style__FormItemLabel>
                                                  Select an asset to deposit
                                        </Form.style__FormItemLabel>
                              }
                    >
                              <style__Image
                                        alt="logo"
                                        src="/public/images/assets/ETH.svg"
                              />
                              <Select.style
                                        defaultValue="ETH"
                                        onSelect={[Function]}
                                        style={
                                                  Object {
                                                            "paddingLeft": "0.5rem",
                                                          }
                                        }
                              >
                                        <Option
                                                  value="ETH"
                                        >
                                                  ETH
                                        </Option>
                                        <Option
                                                  value="BOKKY"
                                        >
                                                  BOKKY
                                        </Option>
                              </Select.style>
                    </Form.style__FormItem>
                    <Form.style__FormItem
                              colon={false}
                              help={
                                        <HelperTextComponent
                                                  left="$0.00"
                                                  right="usd"
                                        />
                              }
                              label={
                                        <Form.style__FormItemLabel>
                                                  enter_amount
                                        </Form.style__FormItemLabel>
                              }
                    >
                              <Input.style
                                        defaultValue="0"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        value="0"
                              />
                    </Form.style__FormItem>
                    <Collapse
                              bordered={false}
                              defaultActiveKey={
                                        Array [
                                                  "2",
                                                ]
                              }
                    >
                              <CollapsePanel
                                        header={
                                                  <style__AdvancedSettingsHeader>
                                                            advanced_settings
                                                  </style__AdvancedSettingsHeader>
                                        }
                              >
                                        <Form.style__FormItem
                                                  colon={false}
                                                  label={
                                                            <Form.style__FormItemLabel>
                                                                      gas_price
                                                            </Form.style__FormItemLabel>
                                                  }
                                        >
                                                  <Input.style
                                                            defaultValue="10"
                                                            min={0}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="10"
                                                  />
                                        </Form.style__FormItem>
                                        <Form.style__FormItem
                                                  colon={false}
                                                  label={
                                                            <Form.style__FormItemLabel>
                                                                      gas_limit
                                                            </Form.style__FormItemLabel>
                                                  }
                                        >
                                                  <Input.style
                                                            defaultValue="600000"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="600000"
                                                  />
                                        </Form.style__FormItem>
                              </CollapsePanel>
                    </Collapse>
                    <style__DollarPrice>
                              1 ETH = $412.00
                    </style__DollarPrice>
          </Form.style__FlexForm>
</div>,
        <div
          style={
                    Object {
                              "minWidth": "34rem",
                            }
          }
>
          <Row
                    gutter={0}
          >
                    <style__StyledCol
                              span={12}
                    >
                              Deposit
                    </style__StyledCol>
          </Row>
          <Row
                    gutter={0}
          >
                    <TransferDescriptionItem
                              main="0 ETH"
                              subtitle="$0.00"
                    />
          </Row>
          <Row
                    gutter={0}
          >
                    <style__StyledCol
                              span={12}
                    >
                              Base layer fee
                    </style__StyledCol>
          </Row>
          <Row
                    gutter={0}
          >
                    <TransferDescriptionItem
                              main="0.006 ETH"
                              subtitle="$2.47"
                    />
          </Row>
          <Row
                    gutter={0}
          >
                    <style__StyledCol
                              span={12}
                    >
                              Base layer ETH 
                              balance_before
                    </style__StyledCol>
          </Row>
          <Row
                    gutter={0}
          >
                    <TransferDescriptionItem
                              main="0.198937 ETH"
                              subtitle="$81.96"
                    />
          </Row>
          <Row
                    gutter={0}
          >
                    <style__StyledCol
                              span={12}
                    >
                              Base layer ETH 
                              balance_after
                    </style__StyledCol>
          </Row>
          <Row
                    gutter={0}
          >
                    <TransferDescriptionItem
                              main="0.192937 ETH"
                              subtitle="$79.49"
                    />
          </Row>
          <div>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        nahmii ETH 
                                        balance_before
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main="0.2 ETH"
                                        subtitle="$82.40"
                              />
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        nahmii ETH 
                                        balance_after
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main="0.2 ETH"
                                        subtitle="$82.40"
                              />
                    </Row>
          </div>
          <Row
                    gutter={0}
          >
                    <style__HWPromptWrapper>
                              <Connect(HWPromptContainer) />
                    </style__HWPromptWrapper>
                    <div
                              style={
                                        Object {
                                                  "display": "flex",
                                                  "flexDirection": "column",
                                                  "marginTop": "2rem",
                                                }
                              }
                    >
                              <div>
                                        <span>
                                                  <Text
                                                            large={true}
                                                  >
                                                            Waiting for transaction 1/1 to be mined...
                                                  </Text>
                                        </span>
                                        <Icon
                                                  style={
                                                            Object {
                                                                      "color": "white",
                                                                      "fontSize": "1.5rem",
                                                                      "marginLeft": "1rem",
                                                                    }
                                                  }
                                                  type="loading"
                                        />
                              </div>
                              <a
                                        onClick={[Function]}
                                        role="link"
                                        tabIndex={0}
                              >
                                        Track progress on Etherscan
                              </a>
                    </div>
          </Row>
</div>,
      ],
      "style": Object {
        "display": "flex",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Form.style__FlexForm>
            <Form.style__FormItem
                        colon={false}
                        label={
                                    <Form.style__FormItemLabel>
                                                Select an asset to deposit
                                    </Form.style__FormItemLabel>
                        }
            >
                        <style__Image
                                    alt="logo"
                                    src="/public/images/assets/ETH.svg"
                        />
                        <Select.style
                                    defaultValue="ETH"
                                    onSelect={[Function]}
                                    style={
                                                Object {
                                                            "paddingLeft": "0.5rem",
                                                          }
                                    }
                        >
                                    <Option
                                                value="ETH"
                                    >
                                                ETH
                                    </Option>
                                    <Option
                                                value="BOKKY"
                                    >
                                                BOKKY
                                    </Option>
                        </Select.style>
            </Form.style__FormItem>
            <Form.style__FormItem
                        colon={false}
                        help={
                                    <HelperTextComponent
                                                left="$0.00"
                                                right="usd"
                                    />
                        }
                        label={
                                    <Form.style__FormItemLabel>
                                                enter_amount
                                    </Form.style__FormItemLabel>
                        }
            >
                        <Input.style
                                    defaultValue="0"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    value="0"
                        />
            </Form.style__FormItem>
            <Collapse
                        bordered={false}
                        defaultActiveKey={
                                    Array [
                                                "2",
                                              ]
                        }
            >
                        <CollapsePanel
                                    header={
                                                <style__AdvancedSettingsHeader>
                                                            advanced_settings
                                                </style__AdvancedSettingsHeader>
                                    }
                        >
                                    <Form.style__FormItem
                                                colon={false}
                                                label={
                                                            <Form.style__FormItemLabel>
                                                                        gas_price
                                                            </Form.style__FormItemLabel>
                                                }
                                    >
                                                <Input.style
                                                            defaultValue="10"
                                                            min={0}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="10"
                                                />
                                    </Form.style__FormItem>
                                    <Form.style__FormItem
                                                colon={false}
                                                label={
                                                            <Form.style__FormItemLabel>
                                                                        gas_limit
                                                            </Form.style__FormItemLabel>
                                                }
                                    >
                                                <Input.style
                                                            defaultValue="600000"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="600000"
                                                />
                                    </Form.style__FormItem>
                        </CollapsePanel>
            </Collapse>
            <style__DollarPrice>
                        1 ETH = $412.00
            </style__DollarPrice>
</Form.style__FlexForm>,
          "style": Object {
            "flex": "1",
            "marginRight": "2rem",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Form.style__FormItem
                colon={false}
                label={
                                <Form.style__FormItemLabel>
                                                Select an asset to deposit
                                </Form.style__FormItemLabel>
                }
>
                <style__Image
                                alt="logo"
                                src="/public/images/assets/ETH.svg"
                />
                <Select.style
                                defaultValue="ETH"
                                onSelect={[Function]}
                                style={
                                                Object {
                                                                "paddingLeft": "0.5rem",
                                                              }
                                }
                >
                                <Option
                                                value="ETH"
                                >
                                                ETH
                                </Option>
                                <Option
                                                value="BOKKY"
                                >
                                                BOKKY
                                </Option>
                </Select.style>
</Form.style__FormItem>,
              <Form.style__FormItem
                colon={false}
                help={
                                <HelperTextComponent
                                                left="$0.00"
                                                right="usd"
                                />
                }
                label={
                                <Form.style__FormItemLabel>
                                                enter_amount
                                </Form.style__FormItemLabel>
                }
>
                <Input.style
                                defaultValue="0"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                value="0"
                />
</Form.style__FormItem>,
              <Collapse
                bordered={false}
                defaultActiveKey={
                                Array [
                                                "2",
                                              ]
                }
>
                <CollapsePanel
                                header={
                                                <style__AdvancedSettingsHeader>
                                                                advanced_settings
                                                </style__AdvancedSettingsHeader>
                                }
                >
                                <Form.style__FormItem
                                                colon={false}
                                                label={
                                                                <Form.style__FormItemLabel>
                                                                                gas_price
                                                                </Form.style__FormItemLabel>
                                                }
                                >
                                                <Input.style
                                                                defaultValue="10"
                                                                min={0}
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                value="10"
                                                />
                                </Form.style__FormItem>
                                <Form.style__FormItem
                                                colon={false}
                                                label={
                                                                <Form.style__FormItemLabel>
                                                                                gas_limit
                                                                </Form.style__FormItemLabel>
                                                }
                                >
                                                <Input.style
                                                                defaultValue="600000"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                value="600000"
                                                />
                                </Form.style__FormItem>
                </CollapsePanel>
</Collapse>,
              <style__DollarPrice>
                1 ETH = $412.00
</style__DollarPrice>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <style__Image
                    alt="logo"
                    src="/public/images/assets/ETH.svg"
/>,
                  <Select.style
                    defaultValue="ETH"
                    onSelect={[Function]}
                    style={
                                        Object {
                                                            "paddingLeft": "0.5rem",
                                                          }
                    }
>
                    <Option
                                        value="ETH"
                    >
                                        ETH
                    </Option>
                    <Option
                                        value="BOKKY"
                    >
                                        BOKKY
                    </Option>
</Select.style>,
                ],
                "colon": false,
                "label": <Form.style__FormItemLabel>
                  Select an asset to deposit
</Form.style__FormItemLabel>,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "alt": "logo",
                    "src": "/public/images/assets/ETH.svg",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <Option
                        value="ETH"
>
                        ETH
</Option>,
                      <Option
                        value="BOKKY"
>
                        BOKKY
</Option>,
                    ],
                    "defaultValue": "ETH",
                    "onSelect": [Function],
                    "style": Object {
                      "paddingLeft": "0.5rem",
                    },
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "ETH",
                      "nodeType": "class",
                      "props": Object {
                        "children": "ETH",
                        "value": "ETH",
                      },
                      "ref": null,
                      "rendered": "ETH",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "BOKKY",
                      "nodeType": "class",
                      "props": Object {
                        "children": "BOKKY",
                        "value": "BOKKY",
                      },
                      "ref": null,
                      "rendered": "BOKKY",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Input.style
                  defaultValue="0"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  value="0"
/>,
                "colon": false,
                "help": <HelperTextComponent
                  left="$0.00"
                  right="usd"
/>,
                "label": <Form.style__FormItemLabel>
                  enter_amount
</Form.style__FormItemLabel>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "defaultValue": "0",
                  "onBlur": [Function],
                  "onChange": [Function],
                  "onFocus": [Function],
                  "value": "0",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bordered": false,
                "children": <CollapsePanel
                  header={
                                    <style__AdvancedSettingsHeader>
                                                      advanced_settings
                                    </style__AdvancedSettingsHeader>
                  }
>
                  <Form.style__FormItem
                                    colon={false}
                                    label={
                                                      <Form.style__FormItemLabel>
                                                                        gas_price
                                                      </Form.style__FormItemLabel>
                                    }
                  >
                                    <Input.style
                                                      defaultValue="10"
                                                      min={0}
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      value="10"
                                    />
                  </Form.style__FormItem>
                  <Form.style__FormItem
                                    colon={false}
                                    label={
                                                      <Form.style__FormItemLabel>
                                                                        gas_limit
                                                      </Form.style__FormItemLabel>
                                    }
                  >
                                    <Input.style
                                                      defaultValue="600000"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      value="600000"
                                    />
                  </Form.style__FormItem>
</CollapsePanel>,
                "defaultActiveKey": Array [
                  "2",
                ],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": "1",
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Form.style__FormItem
                      colon={false}
                      label={
                                            <Form.style__FormItemLabel>
                                                                  gas_price
                                            </Form.style__FormItemLabel>
                      }
>
                      <Input.style
                                            defaultValue="10"
                                            min={0}
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            value="10"
                      />
</Form.style__FormItem>,
                    <Form.style__FormItem
                      colon={false}
                      label={
                                            <Form.style__FormItemLabel>
                                                                  gas_limit
                                            </Form.style__FormItemLabel>
                      }
>
                      <Input.style
                                            defaultValue="600000"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            value="600000"
                      />
</Form.style__FormItem>,
                  ],
                  "header": <style__AdvancedSettingsHeader>
                    advanced_settings
</style__AdvancedSettingsHeader>,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Input.style
                        defaultValue="10"
                        min={0}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        value="10"
/>,
                      "colon": false,
                      "label": <Form.style__FormItemLabel>
                        gas_price
</Form.style__FormItemLabel>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "defaultValue": "10",
                        "min": 0,
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onFocus": [Function],
                        "value": "10",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Input.style
                        defaultValue="600000"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        value="600000"
/>,
                      "colon": false,
                      "label": <Form.style__FormItemLabel>
                        gas_limit
</Form.style__FormItemLabel>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "defaultValue": "600000",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onFocus": [Function],
                        "value": "600000",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "1 ETH = $412.00",
              },
              "ref": null,
              "rendered": "1 ETH = $412.00",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Row
              gutter={0}
>
              <style__StyledCol
                            span={12}
              >
                            Deposit
              </style__StyledCol>
</Row>,
            <Row
              gutter={0}
>
              <TransferDescriptionItem
                            main="0 ETH"
                            subtitle="$0.00"
              />
</Row>,
            <Row
              gutter={0}
>
              <style__StyledCol
                            span={12}
              >
                            Base layer fee
              </style__StyledCol>
</Row>,
            <Row
              gutter={0}
>
              <TransferDescriptionItem
                            main="0.006 ETH"
                            subtitle="$2.47"
              />
</Row>,
            <Row
              gutter={0}
>
              <style__StyledCol
                            span={12}
              >
                            Base layer ETH 
                            balance_before
              </style__StyledCol>
</Row>,
            <Row
              gutter={0}
>
              <TransferDescriptionItem
                            main="0.198937 ETH"
                            subtitle="$81.96"
              />
</Row>,
            <Row
              gutter={0}
>
              <style__StyledCol
                            span={12}
              >
                            Base layer ETH 
                            balance_after
              </style__StyledCol>
</Row>,
            <Row
              gutter={0}
>
              <TransferDescriptionItem
                            main="0.192937 ETH"
                            subtitle="$79.49"
              />
</Row>,
            <div>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          nahmii ETH 
                                          balance_before
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main="0.2 ETH"
                                          subtitle="$82.40"
                            />
              </Row>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          nahmii ETH 
                                          balance_after
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main="0.2 ETH"
                                          subtitle="$82.40"
                            />
              </Row>
</div>,
            false,
            <Row
              gutter={0}
>
              <style__HWPromptWrapper>
                            <Connect(HWPromptContainer) />
              </style__HWPromptWrapper>
              <div
                            style={
                                          Object {
                                                        "display": "flex",
                                                        "flexDirection": "column",
                                                        "marginTop": "2rem",
                                                      }
                            }
              >
                            <div>
                                          <span>
                                                        <Text
                                                                      large={true}
                                                        >
                                                                      Waiting for transaction 1/1 to be mined...
                                                        </Text>
                                          </span>
                                          <Icon
                                                        style={
                                                                      Object {
                                                                                    "color": "white",
                                                                                    "fontSize": "1.5rem",
                                                                                    "marginLeft": "1rem",
                                                                                  }
                                                        }
                                                        type="loading"
                                          />
                            </div>
                            <a
                                          onClick={[Function]}
                                          role="link"
                                          tabIndex={0}
                            >
                                          Track progress on Etherscan
                            </a>
              </div>
</Row>,
          ],
          "style": Object {
            "minWidth": "34rem",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <style__StyledCol
                span={12}
>
                Deposit
</style__StyledCol>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Deposit",
                "span": 12,
              },
              "ref": null,
              "rendered": "Deposit",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <TransferDescriptionItem
                main="0 ETH"
                subtitle="$0.00"
/>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "main": "0 ETH",
                "subtitle": "$0.00",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <style__StyledCol
                span={12}
>
                Base layer fee
</style__StyledCol>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Base layer fee",
                "span": 12,
              },
              "ref": null,
              "rendered": "Base layer fee",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <TransferDescriptionItem
                main="0.006 ETH"
                subtitle="$2.47"
/>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "main": "0.006 ETH",
                "subtitle": "$2.47",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <style__StyledCol
                span={12}
>
                Base layer ETH 
                balance_before
</style__StyledCol>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  "Base layer ETH ",
                  "balance_before",
                ],
                "span": 12,
              },
              "ref": null,
              "rendered": Array [
                "Base layer ETH ",
                "balance_before",
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <TransferDescriptionItem
                main="0.198937 ETH"
                subtitle="$81.96"
/>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "main": "0.198937 ETH",
                "subtitle": "$81.96",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <style__StyledCol
                span={12}
>
                Base layer ETH 
                balance_after
</style__StyledCol>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  "Base layer ETH ",
                  "balance_after",
                ],
                "span": 12,
              },
              "ref": null,
              "rendered": Array [
                "Base layer ETH ",
                "balance_after",
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <TransferDescriptionItem
                main="0.192937 ETH"
                subtitle="$79.49"
/>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "main": "0.192937 ETH",
                "subtitle": "$79.49",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    nahmii ETH 
                                    balance_before
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main="0.2 ETH"
                                    subtitle="$82.40"
                  />
</Row>,
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    nahmii ETH 
                                    balance_after
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main="0.2 ETH"
                                    subtitle="$82.40"
                  />
</Row>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    nahmii ETH 
                    balance_before
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "nahmii ETH ",
                      "balance_before",
                    ],
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Array [
                    "nahmii ETH ",
                    "balance_before",
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main="0.2 ETH"
                    subtitle="$82.40"
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": "0.2 ETH",
                    "subtitle": "$82.40",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    nahmii ETH 
                    balance_after
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "nahmii ETH ",
                      "balance_after",
                    ],
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Array [
                    "nahmii ETH ",
                    "balance_after",
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main="0.2 ETH"
                    subtitle="$82.40"
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": "0.2 ETH",
                    "subtitle": "$82.40",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": "div",
          },
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <style__HWPromptWrapper>
                  <Connect(HWPromptContainer) />
</style__HWPromptWrapper>,
                null,
                <div
                  style={
                                    Object {
                                                      "display": "flex",
                                                      "flexDirection": "column",
                                                      "marginTop": "2rem",
                                                    }
                  }
>
                  <div>
                                    <span>
                                                      <Text
                                                                        large={true}
                                                      >
                                                                        Waiting for transaction 1/1 to be mined...
                                                      </Text>
                                    </span>
                                    <Icon
                                                      style={
                                                                        Object {
                                                                                          "color": "white",
                                                                                          "fontSize": "1.5rem",
                                                                                          "marginLeft": "1rem",
                                                                                        }
                                                      }
                                                      type="loading"
                                    />
                  </div>
                  <a
                                    onClick={[Function]}
                                    role="link"
                                    tabIndex={0}
                  >
                                    Track progress on Etherscan
                  </a>
</div>,
              ],
              "gutter": 0,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Connect(HWPromptContainer) />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              null,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div>
                      <span>
                                            <Text
                                                                  large={true}
                                            >
                                                                  Waiting for transaction 1/1 to be mined...
                                            </Text>
                      </span>
                      <Icon
                                            style={
                                                                  Object {
                                                                                        "color": "white",
                                                                                        "fontSize": "1.5rem",
                                                                                        "marginLeft": "1rem",
                                                                                      }
                                            }
                                            type="loading"
                      />
</div>,
                    <a
                      onClick={[Function]}
                      role="link"
                      tabIndex={0}
>
                      Track progress on Etherscan
</a>,
                  ],
                  "style": Object {
                    "display": "flex",
                    "flexDirection": "column",
                    "marginTop": "2rem",
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <span>
                          <Text
                                                    large={true}
                          >
                                                    Waiting for transaction 1/1 to be mined...
                          </Text>
</span>,
                        <Icon
                          style={
                                                    Object {
                                                                              "color": "white",
                                                                              "fontSize": "1.5rem",
                                                                              "marginLeft": "1rem",
                                                                            }
                          }
                          type="loading"
/>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <Text
                            large={true}
>
                            Waiting for transaction 1/1 to be mined...
</Text>,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": "Waiting for transaction 1/1 to be mined...",
                            "large": true,
                          },
                          "ref": null,
                          "rendered": "Waiting for transaction 1/1 to be mined...",
                          "type": [Function],
                        },
                        "type": "span",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "style": Object {
                            "color": "white",
                            "fontSize": "1.5rem",
                            "marginLeft": "1rem",
                          },
                          "type": "loading",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Track progress on Etherscan",
                      "onClick": [Function],
                      "role": "link",
                      "tabIndex": 0,
                    },
                    "ref": null,
                    "rendered": "Track progress on Etherscan",
                    "type": "a",
                  },
                ],
                "type": "div",
              },
            ],
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            style={
                        Object {
                                    "flex": "1",
                                    "marginRight": "2rem",
                                  }
            }
>
            <Form.style__FlexForm>
                        <Form.style__FormItem
                                    colon={false}
                                    label={
                                                <Form.style__FormItemLabel>
                                                            Select an asset to deposit
                                                </Form.style__FormItemLabel>
                                    }
                        >
                                    <style__Image
                                                alt="logo"
                                                src="/public/images/assets/ETH.svg"
                                    />
                                    <Select.style
                                                defaultValue="ETH"
                                                onSelect={[Function]}
                                                style={
                                                            Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                                                }
                                    >
                                                <Option
                                                            value="ETH"
                                                >
                                                            ETH
                                                </Option>
                                                <Option
                                                            value="BOKKY"
                                                >
                                                            BOKKY
                                                </Option>
                                    </Select.style>
                        </Form.style__FormItem>
                        <Form.style__FormItem
                                    colon={false}
                                    help={
                                                <HelperTextComponent
                                                            left="$0.00"
                                                            right="usd"
                                                />
                                    }
                                    label={
                                                <Form.style__FormItemLabel>
                                                            enter_amount
                                                </Form.style__FormItemLabel>
                                    }
                        >
                                    <Input.style
                                                defaultValue="0"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value="0"
                                    />
                        </Form.style__FormItem>
                        <Collapse
                                    bordered={false}
                                    defaultActiveKey={
                                                Array [
                                                            "2",
                                                          ]
                                    }
                        >
                                    <CollapsePanel
                                                header={
                                                            <style__AdvancedSettingsHeader>
                                                                        advanced_settings
                                                            </style__AdvancedSettingsHeader>
                                                }
                                    >
                                                <Form.style__FormItem
                                                            colon={false}
                                                            label={
                                                                        <Form.style__FormItemLabel>
                                                                                    gas_price
                                                                        </Form.style__FormItemLabel>
                                                            }
                                                >
                                                            <Input.style
                                                                        defaultValue="10"
                                                                        min={0}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        value="10"
                                                            />
                                                </Form.style__FormItem>
                                                <Form.style__FormItem
                                                            colon={false}
                                                            label={
                                                                        <Form.style__FormItemLabel>
                                                                                    gas_limit
                                                                        </Form.style__FormItemLabel>
                                                            }
                                                >
                                                            <Input.style
                                                                        defaultValue="600000"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        value="600000"
                                                            />
                                                </Form.style__FormItem>
                                    </CollapsePanel>
                        </Collapse>
                        <style__DollarPrice>
                                    1 ETH = $412.00
                        </style__DollarPrice>
            </Form.style__FlexForm>
</div>,
          <div
            style={
                        Object {
                                    "minWidth": "34rem",
                                  }
            }
>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    Deposit
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main="0 ETH"
                                    subtitle="$0.00"
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    Base layer fee
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main="0.006 ETH"
                                    subtitle="$2.47"
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    Base layer ETH 
                                    balance_before
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main="0.198937 ETH"
                                    subtitle="$81.96"
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    Base layer ETH 
                                    balance_after
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main="0.192937 ETH"
                                    subtitle="$79.49"
                        />
            </Row>
            <div>
                        <Row
                                    gutter={0}
                        >
                                    <style__StyledCol
                                                span={12}
                                    >
                                                nahmii ETH 
                                                balance_before
                                    </style__StyledCol>
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <TransferDescriptionItem
                                                main="0.2 ETH"
                                                subtitle="$82.40"
                                    />
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <style__StyledCol
                                                span={12}
                                    >
                                                nahmii ETH 
                                                balance_after
                                    </style__StyledCol>
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <TransferDescriptionItem
                                                main="0.2 ETH"
                                                subtitle="$82.40"
                                    />
                        </Row>
            </div>
            <Row
                        gutter={0}
            >
                        <style__HWPromptWrapper>
                                    <Connect(HWPromptContainer) />
                        </style__HWPromptWrapper>
                        <div
                                    style={
                                                Object {
                                                            "display": "flex",
                                                            "flexDirection": "column",
                                                            "marginTop": "2rem",
                                                          }
                                    }
                        >
                                    <div>
                                                <span>
                                                            <Text
                                                                        large={true}
                                                            >
                                                                        Waiting for transaction 1/1 to be mined...
                                                            </Text>
                                                </span>
                                                <Icon
                                                            style={
                                                                        Object {
                                                                                    "color": "white",
                                                                                    "fontSize": "1.5rem",
                                                                                    "marginLeft": "1rem",
                                                                                  }
                                                            }
                                                            type="loading"
                                                />
                                    </div>
                                    <a
                                                onClick={[Function]}
                                                role="link"
                                                tabIndex={0}
                                    >
                                                Track progress on Etherscan
                                    </a>
                        </div>
            </Row>
</div>,
        ],
        "style": Object {
          "display": "flex",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Form.style__FlexForm>
              <Form.style__FormItem
                            colon={false}
                            label={
                                          <Form.style__FormItemLabel>
                                                        Select an asset to deposit
                                          </Form.style__FormItemLabel>
                            }
              >
                            <style__Image
                                          alt="logo"
                                          src="/public/images/assets/ETH.svg"
                            />
                            <Select.style
                                          defaultValue="ETH"
                                          onSelect={[Function]}
                                          style={
                                                        Object {
                                                                      "paddingLeft": "0.5rem",
                                                                    }
                                          }
                            >
                                          <Option
                                                        value="ETH"
                                          >
                                                        ETH
                                          </Option>
                                          <Option
                                                        value="BOKKY"
                                          >
                                                        BOKKY
                                          </Option>
                            </Select.style>
              </Form.style__FormItem>
              <Form.style__FormItem
                            colon={false}
                            help={
                                          <HelperTextComponent
                                                        left="$0.00"
                                                        right="usd"
                                          />
                            }
                            label={
                                          <Form.style__FormItemLabel>
                                                        enter_amount
                                          </Form.style__FormItemLabel>
                            }
              >
                            <Input.style
                                          defaultValue="0"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          value="0"
                            />
              </Form.style__FormItem>
              <Collapse
                            bordered={false}
                            defaultActiveKey={
                                          Array [
                                                        "2",
                                                      ]
                            }
              >
                            <CollapsePanel
                                          header={
                                                        <style__AdvancedSettingsHeader>
                                                                      advanced_settings
                                                        </style__AdvancedSettingsHeader>
                                          }
                            >
                                          <Form.style__FormItem
                                                        colon={false}
                                                        label={
                                                                      <Form.style__FormItemLabel>
                                                                                    gas_price
                                                                      </Form.style__FormItemLabel>
                                                        }
                                          >
                                                        <Input.style
                                                                      defaultValue="10"
                                                                      min={0}
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      value="10"
                                                        />
                                          </Form.style__FormItem>
                                          <Form.style__FormItem
                                                        colon={false}
                                                        label={
                                                                      <Form.style__FormItemLabel>
                                                                                    gas_limit
                                                                      </Form.style__FormItemLabel>
                                                        }
                                          >
                                                        <Input.style
                                                                      defaultValue="600000"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      value="600000"
                                                        />
                                          </Form.style__FormItem>
                            </CollapsePanel>
              </Collapse>
              <style__DollarPrice>
                            1 ETH = $412.00
              </style__DollarPrice>
</Form.style__FlexForm>,
            "style": Object {
              "flex": "1",
              "marginRight": "2rem",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Form.style__FormItem
                  colon={false}
                  label={
                                    <Form.style__FormItemLabel>
                                                      Select an asset to deposit
                                    </Form.style__FormItemLabel>
                  }
>
                  <style__Image
                                    alt="logo"
                                    src="/public/images/assets/ETH.svg"
                  />
                  <Select.style
                                    defaultValue="ETH"
                                    onSelect={[Function]}
                                    style={
                                                      Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                                    }
                  >
                                    <Option
                                                      value="ETH"
                                    >
                                                      ETH
                                    </Option>
                                    <Option
                                                      value="BOKKY"
                                    >
                                                      BOKKY
                                    </Option>
                  </Select.style>
</Form.style__FormItem>,
                <Form.style__FormItem
                  colon={false}
                  help={
                                    <HelperTextComponent
                                                      left="$0.00"
                                                      right="usd"
                                    />
                  }
                  label={
                                    <Form.style__FormItemLabel>
                                                      enter_amount
                                    </Form.style__FormItemLabel>
                  }
>
                  <Input.style
                                    defaultValue="0"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    value="0"
                  />
</Form.style__FormItem>,
                <Collapse
                  bordered={false}
                  defaultActiveKey={
                                    Array [
                                                      "2",
                                                    ]
                  }
>
                  <CollapsePanel
                                    header={
                                                      <style__AdvancedSettingsHeader>
                                                                        advanced_settings
                                                      </style__AdvancedSettingsHeader>
                                    }
                  >
                                    <Form.style__FormItem
                                                      colon={false}
                                                      label={
                                                                        <Form.style__FormItemLabel>
                                                                                          gas_price
                                                                        </Form.style__FormItemLabel>
                                                      }
                                    >
                                                      <Input.style
                                                                        defaultValue="10"
                                                                        min={0}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        value="10"
                                                      />
                                    </Form.style__FormItem>
                                    <Form.style__FormItem
                                                      colon={false}
                                                      label={
                                                                        <Form.style__FormItemLabel>
                                                                                          gas_limit
                                                                        </Form.style__FormItemLabel>
                                                      }
                                    >
                                                      <Input.style
                                                                        defaultValue="600000"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        value="600000"
                                                      />
                                    </Form.style__FormItem>
                  </CollapsePanel>
</Collapse>,
                <style__DollarPrice>
                  1 ETH = $412.00
</style__DollarPrice>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <style__Image
                      alt="logo"
                      src="/public/images/assets/ETH.svg"
/>,
                    <Select.style
                      defaultValue="ETH"
                      onSelect={[Function]}
                      style={
                                            Object {
                                                                  "paddingLeft": "0.5rem",
                                                                }
                      }
>
                      <Option
                                            value="ETH"
                      >
                                            ETH
                      </Option>
                      <Option
                                            value="BOKKY"
                      >
                                            BOKKY
                      </Option>
</Select.style>,
                  ],
                  "colon": false,
                  "label": <Form.style__FormItemLabel>
                    Select an asset to deposit
</Form.style__FormItemLabel>,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "alt": "logo",
                      "src": "/public/images/assets/ETH.svg",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <Option
                          value="ETH"
>
                          ETH
</Option>,
                        <Option
                          value="BOKKY"
>
                          BOKKY
</Option>,
                      ],
                      "defaultValue": "ETH",
                      "onSelect": [Function],
                      "style": Object {
                        "paddingLeft": "0.5rem",
                      },
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": "ETH",
                        "nodeType": "class",
                        "props": Object {
                          "children": "ETH",
                          "value": "ETH",
                        },
                        "ref": null,
                        "rendered": "ETH",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": "BOKKY",
                        "nodeType": "class",
                        "props": Object {
                          "children": "BOKKY",
                          "value": "BOKKY",
                        },
                        "ref": null,
                        "rendered": "BOKKY",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Input.style
                    defaultValue="0"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    value="0"
/>,
                  "colon": false,
                  "help": <HelperTextComponent
                    left="$0.00"
                    right="usd"
/>,
                  "label": <Form.style__FormItemLabel>
                    enter_amount
</Form.style__FormItemLabel>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "defaultValue": "0",
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "0",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bordered": false,
                  "children": <CollapsePanel
                    header={
                                        <style__AdvancedSettingsHeader>
                                                            advanced_settings
                                        </style__AdvancedSettingsHeader>
                    }
>
                    <Form.style__FormItem
                                        colon={false}
                                        label={
                                                            <Form.style__FormItemLabel>
                                                                                gas_price
                                                            </Form.style__FormItemLabel>
                                        }
                    >
                                        <Input.style
                                                            defaultValue="10"
                                                            min={0}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="10"
                                        />
                    </Form.style__FormItem>
                    <Form.style__FormItem
                                        colon={false}
                                        label={
                                                            <Form.style__FormItemLabel>
                                                                                gas_limit
                                                            </Form.style__FormItemLabel>
                                        }
                    >
                                        <Input.style
                                                            defaultValue="600000"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="600000"
                                        />
                    </Form.style__FormItem>
</CollapsePanel>,
                  "defaultActiveKey": Array [
                    "2",
                  ],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <Form.style__FormItem
                        colon={false}
                        label={
                                                <Form.style__FormItemLabel>
                                                                        gas_price
                                                </Form.style__FormItemLabel>
                        }
>
                        <Input.style
                                                defaultValue="10"
                                                min={0}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value="10"
                        />
</Form.style__FormItem>,
                      <Form.style__FormItem
                        colon={false}
                        label={
                                                <Form.style__FormItemLabel>
                                                                        gas_limit
                                                </Form.style__FormItemLabel>
                        }
>
                        <Input.style
                                                defaultValue="600000"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value="600000"
                        />
</Form.style__FormItem>,
                    ],
                    "header": <style__AdvancedSettingsHeader>
                      advanced_settings
</style__AdvancedSettingsHeader>,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Input.style
                          defaultValue="10"
                          min={0}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          value="10"
/>,
                        "colon": false,
                        "label": <Form.style__FormItemLabel>
                          gas_price
</Form.style__FormItemLabel>,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "defaultValue": "10",
                          "min": 0,
                          "onBlur": [Function],
                          "onChange": [Function],
                          "onFocus": [Function],
                          "value": "10",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Input.style
                          defaultValue="600000"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          value="600000"
/>,
                        "colon": false,
                        "label": <Form.style__FormItemLabel>
                          gas_limit
</Form.style__FormItemLabel>,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "defaultValue": "600000",
                          "onBlur": [Function],
                          "onChange": [Function],
                          "onFocus": [Function],
                          "value": "600000",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "1 ETH = $412.00",
                },
                "ref": null,
                "rendered": "1 ETH = $412.00",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                Deposit
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main="0 ETH"
                                subtitle="$0.00"
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                Base layer fee
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main="0.006 ETH"
                                subtitle="$2.47"
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                Base layer ETH 
                                balance_before
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main="0.198937 ETH"
                                subtitle="$81.96"
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                Base layer ETH 
                                balance_after
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main="0.192937 ETH"
                                subtitle="$79.49"
                />
</Row>,
              <div>
                <Row
                                gutter={0}
                >
                                <style__StyledCol
                                                span={12}
                                >
                                                nahmii ETH 
                                                balance_before
                                </style__StyledCol>
                </Row>
                <Row
                                gutter={0}
                >
                                <TransferDescriptionItem
                                                main="0.2 ETH"
                                                subtitle="$82.40"
                                />
                </Row>
                <Row
                                gutter={0}
                >
                                <style__StyledCol
                                                span={12}
                                >
                                                nahmii ETH 
                                                balance_after
                                </style__StyledCol>
                </Row>
                <Row
                                gutter={0}
                >
                                <TransferDescriptionItem
                                                main="0.2 ETH"
                                                subtitle="$82.40"
                                />
                </Row>
</div>,
              false,
              <Row
                gutter={0}
>
                <style__HWPromptWrapper>
                                <Connect(HWPromptContainer) />
                </style__HWPromptWrapper>
                <div
                                style={
                                                Object {
                                                                "display": "flex",
                                                                "flexDirection": "column",
                                                                "marginTop": "2rem",
                                                              }
                                }
                >
                                <div>
                                                <span>
                                                                <Text
                                                                                large={true}
                                                                >
                                                                                Waiting for transaction 1/1 to be mined...
                                                                </Text>
                                                </span>
                                                <Icon
                                                                style={
                                                                                Object {
                                                                                                "color": "white",
                                                                                                "fontSize": "1.5rem",
                                                                                                "marginLeft": "1rem",
                                                                                              }
                                                                }
                                                                type="loading"
                                                />
                                </div>
                                <a
                                                onClick={[Function]}
                                                role="link"
                                                tabIndex={0}
                                >
                                                Track progress on Etherscan
                                </a>
                </div>
</Row>,
            ],
            "style": Object {
              "minWidth": "34rem",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  Deposit
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Deposit",
                  "span": 12,
                },
                "ref": null,
                "rendered": "Deposit",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main="0 ETH"
                  subtitle="$0.00"
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": "0 ETH",
                  "subtitle": "$0.00",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  Base layer fee
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Base layer fee",
                  "span": 12,
                },
                "ref": null,
                "rendered": "Base layer fee",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main="0.006 ETH"
                  subtitle="$2.47"
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": "0.006 ETH",
                  "subtitle": "$2.47",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  Base layer ETH 
                  balance_before
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "Base layer ETH ",
                    "balance_before",
                  ],
                  "span": 12,
                },
                "ref": null,
                "rendered": Array [
                  "Base layer ETH ",
                  "balance_before",
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main="0.198937 ETH"
                  subtitle="$81.96"
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": "0.198937 ETH",
                  "subtitle": "$81.96",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  Base layer ETH 
                  balance_after
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "Base layer ETH ",
                    "balance_after",
                  ],
                  "span": 12,
                },
                "ref": null,
                "rendered": Array [
                  "Base layer ETH ",
                  "balance_after",
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main="0.192937 ETH"
                  subtitle="$79.49"
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": "0.192937 ETH",
                  "subtitle": "$79.49",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Row
                    gutter={0}
>
                    <style__StyledCol
                                        span={12}
                    >
                                        nahmii ETH 
                                        balance_before
                    </style__StyledCol>
</Row>,
                  <Row
                    gutter={0}
>
                    <TransferDescriptionItem
                                        main="0.2 ETH"
                                        subtitle="$82.40"
                    />
</Row>,
                  <Row
                    gutter={0}
>
                    <style__StyledCol
                                        span={12}
                    >
                                        nahmii ETH 
                                        balance_after
                    </style__StyledCol>
</Row>,
                  <Row
                    gutter={0}
>
                    <TransferDescriptionItem
                                        main="0.2 ETH"
                                        subtitle="$82.40"
                    />
</Row>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <style__StyledCol
                      span={12}
>
                      nahmii ETH 
                      balance_before
</style__StyledCol>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "nahmii ETH ",
                        "balance_before",
                      ],
                      "span": 12,
                    },
                    "ref": null,
                    "rendered": Array [
                      "nahmii ETH ",
                      "balance_before",
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TransferDescriptionItem
                      main="0.2 ETH"
                      subtitle="$82.40"
/>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "main": "0.2 ETH",
                      "subtitle": "$82.40",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <style__StyledCol
                      span={12}
>
                      nahmii ETH 
                      balance_after
</style__StyledCol>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "nahmii ETH ",
                        "balance_after",
                      ],
                      "span": 12,
                    },
                    "ref": null,
                    "rendered": Array [
                      "nahmii ETH ",
                      "balance_after",
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TransferDescriptionItem
                      main="0.2 ETH"
                      subtitle="$82.40"
/>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "main": "0.2 ETH",
                      "subtitle": "$82.40",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <style__HWPromptWrapper>
                    <Connect(HWPromptContainer) />
</style__HWPromptWrapper>,
                  null,
                  <div
                    style={
                                        Object {
                                                            "display": "flex",
                                                            "flexDirection": "column",
                                                            "marginTop": "2rem",
                                                          }
                    }
>
                    <div>
                                        <span>
                                                            <Text
                                                                                large={true}
                                                            >
                                                                                Waiting for transaction 1/1 to be mined...
                                                            </Text>
                                        </span>
                                        <Icon
                                                            style={
                                                                                Object {
                                                                                                    "color": "white",
                                                                                                    "fontSize": "1.5rem",
                                                                                                    "marginLeft": "1rem",
                                                                                                  }
                                                            }
                                                            type="loading"
                                        />
                    </div>
                    <a
                                        onClick={[Function]}
                                        role="link"
                                        tabIndex={0}
                    >
                                        Track progress on Etherscan
                    </a>
</div>,
                ],
                "gutter": 0,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Connect(HWPromptContainer) />,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                null,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div>
                        <span>
                                                <Text
                                                                        large={true}
                                                >
                                                                        Waiting for transaction 1/1 to be mined...
                                                </Text>
                        </span>
                        <Icon
                                                style={
                                                                        Object {
                                                                                                "color": "white",
                                                                                                "fontSize": "1.5rem",
                                                                                                "marginLeft": "1rem",
                                                                                              }
                                                }
                                                type="loading"
                        />
</div>,
                      <a
                        onClick={[Function]}
                        role="link"
                        tabIndex={0}
>
                        Track progress on Etherscan
</a>,
                    ],
                    "style": Object {
                      "display": "flex",
                      "flexDirection": "column",
                      "marginTop": "2rem",
                    },
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <span>
                            <Text
                                                        large={true}
                            >
                                                        Waiting for transaction 1/1 to be mined...
                            </Text>
</span>,
                          <Icon
                            style={
                                                        Object {
                                                                                    "color": "white",
                                                                                    "fontSize": "1.5rem",
                                                                                    "marginLeft": "1rem",
                                                                                  }
                            }
                            type="loading"
/>,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <Text
                              large={true}
>
                              Waiting for transaction 1/1 to be mined...
</Text>,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": "Waiting for transaction 1/1 to be mined...",
                              "large": true,
                            },
                            "ref": null,
                            "rendered": "Waiting for transaction 1/1 to be mined...",
                            "type": [Function],
                          },
                          "type": "span",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "style": Object {
                              "color": "white",
                              "fontSize": "1.5rem",
                              "marginLeft": "1rem",
                            },
                            "type": "loading",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                      ],
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Track progress on Etherscan",
                        "onClick": [Function],
                        "role": "link",
                        "tabIndex": 0,
                      },
                      "ref": null,
                      "rendered": "Track progress on Etherscan",
                      "type": "a",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<NahmiiDeposit /> should render correctly when depositstatus is errored 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NahmiiDeposit
    currentNetwork={
        Object {
            "identityServiceAppId": "appid",
            "identityServiceSecret": "secret",
            "nahmiiProvider": NahmiiProvider {
              "_emitted": Object {
                "block": -1,
              },
              "_events": Object {},
              "chainId": 3,
              "ensAddress": "0x112234455C3a32FD11230C42E7Bccd4A84e02010",
              "name": "ropsten",
              "resetEventsBlock": [Function],
              "url": "http://geth-ropsten.dev.hubii.net",
            },
            "provider": FallbackProvider {
              "_emitted": Object {
                "block": -1,
              },
              "_events": Object {},
              "chainId": 3,
              "ensAddress": "0x112234455C3a32FD11230C42E7Bccd4A84e02010",
              "name": "ropsten",
              "resetEventsBlock": [Function],
            },
            "walletApiEndpoint": [Function],
          }
    }
    currentWalletWithInfo={
        Immutable.Map {
            deviceId: "041ca8e96420e95a106e8c9bb3c9fb9e8c00d4b11cac562888c898000b5cec366c03a0f84574716fac6c7a7df47a925f0e30f5286546adf3179b5a08dc9d8e09da",
            address: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
            type: "lns",
            name: "lns",
            derivationPath: "m/44'/60'/0'/0",
            transactions: Immutable.Map {
                loading: false,
                error: null,
                transactions: Immutable.List [
                    Immutable.Map {
                        decimalAmount: "0.0000000001",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780091,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "ETH",
                        sender: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        amount: "100000000",
                        symbol: "ETH",
                        recipient: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        type: "received",
                        fiatValue: "0.0000000412",
                        confirmations: "3",
                    },
                    Immutable.Map {
                        decimalAmount: "0.000000000000000005",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780091,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        sender: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        amount: "5",
                        symbol: "BOKKY",
                        recipient: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        type: "sent",
                        fiatValue: "0.000000000000000005",
                        confirmations: "3",
                    },
                ],
            },
            balances: Immutable.Map {
                baseLayer: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.198937",
                            currency: "ETH",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.198937",
                                btc: "0.00198937",
                                usd: "81.962044",
                            },
                        },
                        Immutable.Map {
                            balance: "1.231288e-12",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "1.231288e-13",
                                btc: "1.231288e-15",
                                usd: "1.231288e-12",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1989370000001231288",
                        btc: "0.001989370000001231288",
                        usd: "81.962044000001231288",
                    },
                },
                nahmiiAvailable: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "ETH",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.113",
                        btc: "0.00113",
                        usd: "41.33",
                    },
                },
                nahmiiStaging: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "ETH",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1",
                        btc: "0.001",
                        usd: "41.2",
                    },
                },
                nahmiiStaged: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                    ],
                    total: Immutable.Map {
                        eth: "0",
                        btc: "0",
                        usd: "0",
                    },
                },
                nahmiiCombined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "ETH",
                            balance: "0.2",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.2",
                                btc: "0.002",
                                usd: "82.4",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.213",
                        btc: "0.00213",
                        usd: "82.53",
                    },
                },
                combined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.398937",
                            currency: "ETH",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.398937",
                                btc: "0.00398937",
                                usd: "164.362044",
                            },
                        },
                        Immutable.Map {
                            balance: "0.130000000001231288",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.0130000000001231288",
                                btc: "0.000130000000001231288",
                                usd: "0.130000000001231288",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.4119370000001231288",
                        btc: "0.004119370000001231288",
                        usd: "164.492044000001231288",
                    },
                },
            },
        }
    }
    depositStatus={
        Immutable.Map {
            depositingEth: false,
            approvingTokenDeposit: false,
            completingTokenDeposit: false,
            error: "some error message",
        }
    }
    intl={
        Object {
            "formatMessage": [Function],
          }
    }
    nahmiiDeposit={[Function]}
    prices={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    eth: 0.1,
                    btc: 0.001,
                    usd: 1,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "ETH",
                    eth: 1,
                    btc: 0.01,
                    usd: 412,
                },
            ],
        }
    }
    supportedAssets={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    symbol: "My20",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    symbol: "HBT",
                    decimals: 15,
                    color: "0063A5",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    symbol: "SBT",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    symbol: "WETH",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    symbol: "BOKKY",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "ETH",
                    symbol: "ETH",
                    decimals: 18,
                    color: "5C78E4",
                },
            ],
        }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          style={
                    Object {
                              "flex": "1",
                              "marginRight": "2rem",
                            }
          }
>
          <Form.style__FlexForm>
                    <Form.style__FormItem
                              colon={false}
                              label={
                                        <Form.style__FormItemLabel>
                                                  Select an asset to deposit
                                        </Form.style__FormItemLabel>
                              }
                    >
                              <style__Image
                                        alt="logo"
                                        src="/public/images/assets/ETH.svg"
                              />
                              <Select.style
                                        defaultValue="ETH"
                                        onSelect={[Function]}
                                        style={
                                                  Object {
                                                            "paddingLeft": "0.5rem",
                                                          }
                                        }
                              >
                                        <Option
                                                  value="ETH"
                                        >
                                                  ETH
                                        </Option>
                                        <Option
                                                  value="BOKKY"
                                        >
                                                  BOKKY
                                        </Option>
                              </Select.style>
                    </Form.style__FormItem>
                    <Form.style__FormItem
                              colon={false}
                              help={
                                        <HelperTextComponent
                                                  left="$0.00"
                                                  right="usd"
                                        />
                              }
                              label={
                                        <Form.style__FormItemLabel>
                                                  enter_amount
                                        </Form.style__FormItemLabel>
                              }
                    >
                              <Input.style
                                        defaultValue="0"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        value="0"
                              />
                    </Form.style__FormItem>
                    <Collapse
                              bordered={false}
                              defaultActiveKey={
                                        Array [
                                                  "2",
                                                ]
                              }
                    >
                              <CollapsePanel
                                        header={
                                                  <style__AdvancedSettingsHeader>
                                                            advanced_settings
                                                  </style__AdvancedSettingsHeader>
                                        }
                              >
                                        <Form.style__FormItem
                                                  colon={false}
                                                  label={
                                                            <Form.style__FormItemLabel>
                                                                      gas_price
                                                            </Form.style__FormItemLabel>
                                                  }
                                        >
                                                  <Input.style
                                                            defaultValue="10"
                                                            min={0}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="10"
                                                  />
                                        </Form.style__FormItem>
                                        <Form.style__FormItem
                                                  colon={false}
                                                  label={
                                                            <Form.style__FormItemLabel>
                                                                      gas_limit
                                                            </Form.style__FormItemLabel>
                                                  }
                                        >
                                                  <Input.style
                                                            defaultValue="600000"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="600000"
                                                  />
                                        </Form.style__FormItem>
                              </CollapsePanel>
                    </Collapse>
                    <style__DollarPrice>
                              1 ETH = $412.00
                    </style__DollarPrice>
          </Form.style__FlexForm>
</div>,
        <div
          style={
                    Object {
                              "minWidth": "34rem",
                            }
          }
>
          <Row
                    gutter={0}
          >
                    <style__StyledCol
                              span={12}
                    >
                              Deposit
                    </style__StyledCol>
          </Row>
          <Row
                    gutter={0}
          >
                    <TransferDescriptionItem
                              main="0 ETH"
                              subtitle="$0.00"
                    />
          </Row>
          <Row
                    gutter={0}
          >
                    <style__StyledCol
                              span={12}
                    >
                              Base layer fee
                    </style__StyledCol>
          </Row>
          <Row
                    gutter={0}
          >
                    <TransferDescriptionItem
                              main="0.006 ETH"
                              subtitle="$2.47"
                    />
          </Row>
          <Row
                    gutter={0}
          >
                    <style__StyledCol
                              span={12}
                    >
                              Base layer ETH 
                              balance_before
                    </style__StyledCol>
          </Row>
          <Row
                    gutter={0}
          >
                    <TransferDescriptionItem
                              main="0.198937 ETH"
                              subtitle="$81.96"
                    />
          </Row>
          <Row
                    gutter={0}
          >
                    <style__StyledCol
                              span={12}
                    >
                              Base layer ETH 
                              balance_after
                    </style__StyledCol>
          </Row>
          <Row
                    gutter={0}
          >
                    <TransferDescriptionItem
                              main="0.192937 ETH"
                              subtitle="$79.49"
                    />
          </Row>
          <div>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        nahmii ETH 
                                        balance_before
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main="0.2 ETH"
                                        subtitle="$82.40"
                              />
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        nahmii ETH 
                                        balance_after
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main="0.2 ETH"
                                        subtitle="$82.40"
                              />
                    </Row>
          </div>
          <Row
                    gutter={0}
          >
                    <style__HWPromptWrapper>
                              <Connect(HWPromptContainer) />
                    </style__HWPromptWrapper>
                    <Alert
                              message="some error message"
                              showIcon={true}
                              style={
                                        Object {
                                                  "marginTop": "2rem",
                                                }
                              }
                              type="error"
                    />
                    <style__StyledButton
                              disabled={false}
                              onClick={[Function]}
                              type="primary"
                    >
                              <span>
                                        Deposit
                              </span>
                    </style__StyledButton>
          </Row>
</div>,
      ],
      "style": Object {
        "display": "flex",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Form.style__FlexForm>
            <Form.style__FormItem
                        colon={false}
                        label={
                                    <Form.style__FormItemLabel>
                                                Select an asset to deposit
                                    </Form.style__FormItemLabel>
                        }
            >
                        <style__Image
                                    alt="logo"
                                    src="/public/images/assets/ETH.svg"
                        />
                        <Select.style
                                    defaultValue="ETH"
                                    onSelect={[Function]}
                                    style={
                                                Object {
                                                            "paddingLeft": "0.5rem",
                                                          }
                                    }
                        >
                                    <Option
                                                value="ETH"
                                    >
                                                ETH
                                    </Option>
                                    <Option
                                                value="BOKKY"
                                    >
                                                BOKKY
                                    </Option>
                        </Select.style>
            </Form.style__FormItem>
            <Form.style__FormItem
                        colon={false}
                        help={
                                    <HelperTextComponent
                                                left="$0.00"
                                                right="usd"
                                    />
                        }
                        label={
                                    <Form.style__FormItemLabel>
                                                enter_amount
                                    </Form.style__FormItemLabel>
                        }
            >
                        <Input.style
                                    defaultValue="0"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    value="0"
                        />
            </Form.style__FormItem>
            <Collapse
                        bordered={false}
                        defaultActiveKey={
                                    Array [
                                                "2",
                                              ]
                        }
            >
                        <CollapsePanel
                                    header={
                                                <style__AdvancedSettingsHeader>
                                                            advanced_settings
                                                </style__AdvancedSettingsHeader>
                                    }
                        >
                                    <Form.style__FormItem
                                                colon={false}
                                                label={
                                                            <Form.style__FormItemLabel>
                                                                        gas_price
                                                            </Form.style__FormItemLabel>
                                                }
                                    >
                                                <Input.style
                                                            defaultValue="10"
                                                            min={0}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="10"
                                                />
                                    </Form.style__FormItem>
                                    <Form.style__FormItem
                                                colon={false}
                                                label={
                                                            <Form.style__FormItemLabel>
                                                                        gas_limit
                                                            </Form.style__FormItemLabel>
                                                }
                                    >
                                                <Input.style
                                                            defaultValue="600000"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="600000"
                                                />
                                    </Form.style__FormItem>
                        </CollapsePanel>
            </Collapse>
            <style__DollarPrice>
                        1 ETH = $412.00
            </style__DollarPrice>
</Form.style__FlexForm>,
          "style": Object {
            "flex": "1",
            "marginRight": "2rem",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Form.style__FormItem
                colon={false}
                label={
                                <Form.style__FormItemLabel>
                                                Select an asset to deposit
                                </Form.style__FormItemLabel>
                }
>
                <style__Image
                                alt="logo"
                                src="/public/images/assets/ETH.svg"
                />
                <Select.style
                                defaultValue="ETH"
                                onSelect={[Function]}
                                style={
                                                Object {
                                                                "paddingLeft": "0.5rem",
                                                              }
                                }
                >
                                <Option
                                                value="ETH"
                                >
                                                ETH
                                </Option>
                                <Option
                                                value="BOKKY"
                                >
                                                BOKKY
                                </Option>
                </Select.style>
</Form.style__FormItem>,
              <Form.style__FormItem
                colon={false}
                help={
                                <HelperTextComponent
                                                left="$0.00"
                                                right="usd"
                                />
                }
                label={
                                <Form.style__FormItemLabel>
                                                enter_amount
                                </Form.style__FormItemLabel>
                }
>
                <Input.style
                                defaultValue="0"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                value="0"
                />
</Form.style__FormItem>,
              <Collapse
                bordered={false}
                defaultActiveKey={
                                Array [
                                                "2",
                                              ]
                }
>
                <CollapsePanel
                                header={
                                                <style__AdvancedSettingsHeader>
                                                                advanced_settings
                                                </style__AdvancedSettingsHeader>
                                }
                >
                                <Form.style__FormItem
                                                colon={false}
                                                label={
                                                                <Form.style__FormItemLabel>
                                                                                gas_price
                                                                </Form.style__FormItemLabel>
                                                }
                                >
                                                <Input.style
                                                                defaultValue="10"
                                                                min={0}
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                value="10"
                                                />
                                </Form.style__FormItem>
                                <Form.style__FormItem
                                                colon={false}
                                                label={
                                                                <Form.style__FormItemLabel>
                                                                                gas_limit
                                                                </Form.style__FormItemLabel>
                                                }
                                >
                                                <Input.style
                                                                defaultValue="600000"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                value="600000"
                                                />
                                </Form.style__FormItem>
                </CollapsePanel>
</Collapse>,
              <style__DollarPrice>
                1 ETH = $412.00
</style__DollarPrice>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <style__Image
                    alt="logo"
                    src="/public/images/assets/ETH.svg"
/>,
                  <Select.style
                    defaultValue="ETH"
                    onSelect={[Function]}
                    style={
                                        Object {
                                                            "paddingLeft": "0.5rem",
                                                          }
                    }
>
                    <Option
                                        value="ETH"
                    >
                                        ETH
                    </Option>
                    <Option
                                        value="BOKKY"
                    >
                                        BOKKY
                    </Option>
</Select.style>,
                ],
                "colon": false,
                "label": <Form.style__FormItemLabel>
                  Select an asset to deposit
</Form.style__FormItemLabel>,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "alt": "logo",
                    "src": "/public/images/assets/ETH.svg",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <Option
                        value="ETH"
>
                        ETH
</Option>,
                      <Option
                        value="BOKKY"
>
                        BOKKY
</Option>,
                    ],
                    "defaultValue": "ETH",
                    "onSelect": [Function],
                    "style": Object {
                      "paddingLeft": "0.5rem",
                    },
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "ETH",
                      "nodeType": "class",
                      "props": Object {
                        "children": "ETH",
                        "value": "ETH",
                      },
                      "ref": null,
                      "rendered": "ETH",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "BOKKY",
                      "nodeType": "class",
                      "props": Object {
                        "children": "BOKKY",
                        "value": "BOKKY",
                      },
                      "ref": null,
                      "rendered": "BOKKY",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Input.style
                  defaultValue="0"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  value="0"
/>,
                "colon": false,
                "help": <HelperTextComponent
                  left="$0.00"
                  right="usd"
/>,
                "label": <Form.style__FormItemLabel>
                  enter_amount
</Form.style__FormItemLabel>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "defaultValue": "0",
                  "onBlur": [Function],
                  "onChange": [Function],
                  "onFocus": [Function],
                  "value": "0",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bordered": false,
                "children": <CollapsePanel
                  header={
                                    <style__AdvancedSettingsHeader>
                                                      advanced_settings
                                    </style__AdvancedSettingsHeader>
                  }
>
                  <Form.style__FormItem
                                    colon={false}
                                    label={
                                                      <Form.style__FormItemLabel>
                                                                        gas_price
                                                      </Form.style__FormItemLabel>
                                    }
                  >
                                    <Input.style
                                                      defaultValue="10"
                                                      min={0}
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      value="10"
                                    />
                  </Form.style__FormItem>
                  <Form.style__FormItem
                                    colon={false}
                                    label={
                                                      <Form.style__FormItemLabel>
                                                                        gas_limit
                                                      </Form.style__FormItemLabel>
                                    }
                  >
                                    <Input.style
                                                      defaultValue="600000"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      value="600000"
                                    />
                  </Form.style__FormItem>
</CollapsePanel>,
                "defaultActiveKey": Array [
                  "2",
                ],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": "1",
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Form.style__FormItem
                      colon={false}
                      label={
                                            <Form.style__FormItemLabel>
                                                                  gas_price
                                            </Form.style__FormItemLabel>
                      }
>
                      <Input.style
                                            defaultValue="10"
                                            min={0}
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            value="10"
                      />
</Form.style__FormItem>,
                    <Form.style__FormItem
                      colon={false}
                      label={
                                            <Form.style__FormItemLabel>
                                                                  gas_limit
                                            </Form.style__FormItemLabel>
                      }
>
                      <Input.style
                                            defaultValue="600000"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            value="600000"
                      />
</Form.style__FormItem>,
                  ],
                  "header": <style__AdvancedSettingsHeader>
                    advanced_settings
</style__AdvancedSettingsHeader>,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Input.style
                        defaultValue="10"
                        min={0}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        value="10"
/>,
                      "colon": false,
                      "label": <Form.style__FormItemLabel>
                        gas_price
</Form.style__FormItemLabel>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "defaultValue": "10",
                        "min": 0,
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onFocus": [Function],
                        "value": "10",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Input.style
                        defaultValue="600000"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        value="600000"
/>,
                      "colon": false,
                      "label": <Form.style__FormItemLabel>
                        gas_limit
</Form.style__FormItemLabel>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "defaultValue": "600000",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onFocus": [Function],
                        "value": "600000",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "1 ETH = $412.00",
              },
              "ref": null,
              "rendered": "1 ETH = $412.00",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Row
              gutter={0}
>
              <style__StyledCol
                            span={12}
              >
                            Deposit
              </style__StyledCol>
</Row>,
            <Row
              gutter={0}
>
              <TransferDescriptionItem
                            main="0 ETH"
                            subtitle="$0.00"
              />
</Row>,
            <Row
              gutter={0}
>
              <style__StyledCol
                            span={12}
              >
                            Base layer fee
              </style__StyledCol>
</Row>,
            <Row
              gutter={0}
>
              <TransferDescriptionItem
                            main="0.006 ETH"
                            subtitle="$2.47"
              />
</Row>,
            <Row
              gutter={0}
>
              <style__StyledCol
                            span={12}
              >
                            Base layer ETH 
                            balance_before
              </style__StyledCol>
</Row>,
            <Row
              gutter={0}
>
              <TransferDescriptionItem
                            main="0.198937 ETH"
                            subtitle="$81.96"
              />
</Row>,
            <Row
              gutter={0}
>
              <style__StyledCol
                            span={12}
              >
                            Base layer ETH 
                            balance_after
              </style__StyledCol>
</Row>,
            <Row
              gutter={0}
>
              <TransferDescriptionItem
                            main="0.192937 ETH"
                            subtitle="$79.49"
              />
</Row>,
            <div>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          nahmii ETH 
                                          balance_before
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main="0.2 ETH"
                                          subtitle="$82.40"
                            />
              </Row>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          nahmii ETH 
                                          balance_after
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main="0.2 ETH"
                                          subtitle="$82.40"
                            />
              </Row>
</div>,
            false,
            <Row
              gutter={0}
>
              <style__HWPromptWrapper>
                            <Connect(HWPromptContainer) />
              </style__HWPromptWrapper>
              <Alert
                            message="some error message"
                            showIcon={true}
                            style={
                                          Object {
                                                        "marginTop": "2rem",
                                                      }
                            }
                            type="error"
              />
              <style__StyledButton
                            disabled={false}
                            onClick={[Function]}
                            type="primary"
              >
                            <span>
                                          Deposit
                            </span>
              </style__StyledButton>
</Row>,
          ],
          "style": Object {
            "minWidth": "34rem",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <style__StyledCol
                span={12}
>
                Deposit
</style__StyledCol>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Deposit",
                "span": 12,
              },
              "ref": null,
              "rendered": "Deposit",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <TransferDescriptionItem
                main="0 ETH"
                subtitle="$0.00"
/>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "main": "0 ETH",
                "subtitle": "$0.00",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <style__StyledCol
                span={12}
>
                Base layer fee
</style__StyledCol>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Base layer fee",
                "span": 12,
              },
              "ref": null,
              "rendered": "Base layer fee",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <TransferDescriptionItem
                main="0.006 ETH"
                subtitle="$2.47"
/>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "main": "0.006 ETH",
                "subtitle": "$2.47",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <style__StyledCol
                span={12}
>
                Base layer ETH 
                balance_before
</style__StyledCol>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  "Base layer ETH ",
                  "balance_before",
                ],
                "span": 12,
              },
              "ref": null,
              "rendered": Array [
                "Base layer ETH ",
                "balance_before",
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <TransferDescriptionItem
                main="0.198937 ETH"
                subtitle="$81.96"
/>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "main": "0.198937 ETH",
                "subtitle": "$81.96",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <style__StyledCol
                span={12}
>
                Base layer ETH 
                balance_after
</style__StyledCol>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  "Base layer ETH ",
                  "balance_after",
                ],
                "span": 12,
              },
              "ref": null,
              "rendered": Array [
                "Base layer ETH ",
                "balance_after",
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <TransferDescriptionItem
                main="0.192937 ETH"
                subtitle="$79.49"
/>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "main": "0.192937 ETH",
                "subtitle": "$79.49",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    nahmii ETH 
                                    balance_before
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main="0.2 ETH"
                                    subtitle="$82.40"
                  />
</Row>,
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    nahmii ETH 
                                    balance_after
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main="0.2 ETH"
                                    subtitle="$82.40"
                  />
</Row>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    nahmii ETH 
                    balance_before
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "nahmii ETH ",
                      "balance_before",
                    ],
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Array [
                    "nahmii ETH ",
                    "balance_before",
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main="0.2 ETH"
                    subtitle="$82.40"
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": "0.2 ETH",
                    "subtitle": "$82.40",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    nahmii ETH 
                    balance_after
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "nahmii ETH ",
                      "balance_after",
                    ],
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Array [
                    "nahmii ETH ",
                    "balance_after",
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main="0.2 ETH"
                    subtitle="$82.40"
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": "0.2 ETH",
                    "subtitle": "$82.40",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": "div",
          },
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <style__HWPromptWrapper>
                  <Connect(HWPromptContainer) />
</style__HWPromptWrapper>,
                <Alert
                  message="some error message"
                  showIcon={true}
                  style={
                                    Object {
                                                      "marginTop": "2rem",
                                                    }
                  }
                  type="error"
/>,
                <style__StyledButton
                  disabled={false}
                  onClick={[Function]}
                  type="primary"
>
                  <span>
                                    Deposit
                  </span>
</style__StyledButton>,
              ],
              "gutter": 0,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Connect(HWPromptContainer) />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "message": "some error message",
                  "showIcon": true,
                  "style": Object {
                    "marginTop": "2rem",
                  },
                  "type": "error",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <span>
                    Deposit
</span>,
                  "disabled": false,
                  "onClick": [Function],
                  "type": "primary",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Deposit",
                  },
                  "ref": null,
                  "rendered": "Deposit",
                  "type": "span",
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            style={
                        Object {
                                    "flex": "1",
                                    "marginRight": "2rem",
                                  }
            }
>
            <Form.style__FlexForm>
                        <Form.style__FormItem
                                    colon={false}
                                    label={
                                                <Form.style__FormItemLabel>
                                                            Select an asset to deposit
                                                </Form.style__FormItemLabel>
                                    }
                        >
                                    <style__Image
                                                alt="logo"
                                                src="/public/images/assets/ETH.svg"
                                    />
                                    <Select.style
                                                defaultValue="ETH"
                                                onSelect={[Function]}
                                                style={
                                                            Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                                                }
                                    >
                                                <Option
                                                            value="ETH"
                                                >
                                                            ETH
                                                </Option>
                                                <Option
                                                            value="BOKKY"
                                                >
                                                            BOKKY
                                                </Option>
                                    </Select.style>
                        </Form.style__FormItem>
                        <Form.style__FormItem
                                    colon={false}
                                    help={
                                                <HelperTextComponent
                                                            left="$0.00"
                                                            right="usd"
                                                />
                                    }
                                    label={
                                                <Form.style__FormItemLabel>
                                                            enter_amount
                                                </Form.style__FormItemLabel>
                                    }
                        >
                                    <Input.style
                                                defaultValue="0"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value="0"
                                    />
                        </Form.style__FormItem>
                        <Collapse
                                    bordered={false}
                                    defaultActiveKey={
                                                Array [
                                                            "2",
                                                          ]
                                    }
                        >
                                    <CollapsePanel
                                                header={
                                                            <style__AdvancedSettingsHeader>
                                                                        advanced_settings
                                                            </style__AdvancedSettingsHeader>
                                                }
                                    >
                                                <Form.style__FormItem
                                                            colon={false}
                                                            label={
                                                                        <Form.style__FormItemLabel>
                                                                                    gas_price
                                                                        </Form.style__FormItemLabel>
                                                            }
                                                >
                                                            <Input.style
                                                                        defaultValue="10"
                                                                        min={0}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        value="10"
                                                            />
                                                </Form.style__FormItem>
                                                <Form.style__FormItem
                                                            colon={false}
                                                            label={
                                                                        <Form.style__FormItemLabel>
                                                                                    gas_limit
                                                                        </Form.style__FormItemLabel>
                                                            }
                                                >
                                                            <Input.style
                                                                        defaultValue="600000"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        value="600000"
                                                            />
                                                </Form.style__FormItem>
                                    </CollapsePanel>
                        </Collapse>
                        <style__DollarPrice>
                                    1 ETH = $412.00
                        </style__DollarPrice>
            </Form.style__FlexForm>
</div>,
          <div
            style={
                        Object {
                                    "minWidth": "34rem",
                                  }
            }
>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    Deposit
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main="0 ETH"
                                    subtitle="$0.00"
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    Base layer fee
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main="0.006 ETH"
                                    subtitle="$2.47"
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    Base layer ETH 
                                    balance_before
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main="0.198937 ETH"
                                    subtitle="$81.96"
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    Base layer ETH 
                                    balance_after
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main="0.192937 ETH"
                                    subtitle="$79.49"
                        />
            </Row>
            <div>
                        <Row
                                    gutter={0}
                        >
                                    <style__StyledCol
                                                span={12}
                                    >
                                                nahmii ETH 
                                                balance_before
                                    </style__StyledCol>
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <TransferDescriptionItem
                                                main="0.2 ETH"
                                                subtitle="$82.40"
                                    />
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <style__StyledCol
                                                span={12}
                                    >
                                                nahmii ETH 
                                                balance_after
                                    </style__StyledCol>
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <TransferDescriptionItem
                                                main="0.2 ETH"
                                                subtitle="$82.40"
                                    />
                        </Row>
            </div>
            <Row
                        gutter={0}
            >
                        <style__HWPromptWrapper>
                                    <Connect(HWPromptContainer) />
                        </style__HWPromptWrapper>
                        <Alert
                                    message="some error message"
                                    showIcon={true}
                                    style={
                                                Object {
                                                            "marginTop": "2rem",
                                                          }
                                    }
                                    type="error"
                        />
                        <style__StyledButton
                                    disabled={false}
                                    onClick={[Function]}
                                    type="primary"
                        >
                                    <span>
                                                Deposit
                                    </span>
                        </style__StyledButton>
            </Row>
</div>,
        ],
        "style": Object {
          "display": "flex",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Form.style__FlexForm>
              <Form.style__FormItem
                            colon={false}
                            label={
                                          <Form.style__FormItemLabel>
                                                        Select an asset to deposit
                                          </Form.style__FormItemLabel>
                            }
              >
                            <style__Image
                                          alt="logo"
                                          src="/public/images/assets/ETH.svg"
                            />
                            <Select.style
                                          defaultValue="ETH"
                                          onSelect={[Function]}
                                          style={
                                                        Object {
                                                                      "paddingLeft": "0.5rem",
                                                                    }
                                          }
                            >
                                          <Option
                                                        value="ETH"
                                          >
                                                        ETH
                                          </Option>
                                          <Option
                                                        value="BOKKY"
                                          >
                                                        BOKKY
                                          </Option>
                            </Select.style>
              </Form.style__FormItem>
              <Form.style__FormItem
                            colon={false}
                            help={
                                          <HelperTextComponent
                                                        left="$0.00"
                                                        right="usd"
                                          />
                            }
                            label={
                                          <Form.style__FormItemLabel>
                                                        enter_amount
                                          </Form.style__FormItemLabel>
                            }
              >
                            <Input.style
                                          defaultValue="0"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          value="0"
                            />
              </Form.style__FormItem>
              <Collapse
                            bordered={false}
                            defaultActiveKey={
                                          Array [
                                                        "2",
                                                      ]
                            }
              >
                            <CollapsePanel
                                          header={
                                                        <style__AdvancedSettingsHeader>
                                                                      advanced_settings
                                                        </style__AdvancedSettingsHeader>
                                          }
                            >
                                          <Form.style__FormItem
                                                        colon={false}
                                                        label={
                                                                      <Form.style__FormItemLabel>
                                                                                    gas_price
                                                                      </Form.style__FormItemLabel>
                                                        }
                                          >
                                                        <Input.style
                                                                      defaultValue="10"
                                                                      min={0}
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      value="10"
                                                        />
                                          </Form.style__FormItem>
                                          <Form.style__FormItem
                                                        colon={false}
                                                        label={
                                                                      <Form.style__FormItemLabel>
                                                                                    gas_limit
                                                                      </Form.style__FormItemLabel>
                                                        }
                                          >
                                                        <Input.style
                                                                      defaultValue="600000"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      value="600000"
                                                        />
                                          </Form.style__FormItem>
                            </CollapsePanel>
              </Collapse>
              <style__DollarPrice>
                            1 ETH = $412.00
              </style__DollarPrice>
</Form.style__FlexForm>,
            "style": Object {
              "flex": "1",
              "marginRight": "2rem",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Form.style__FormItem
                  colon={false}
                  label={
                                    <Form.style__FormItemLabel>
                                                      Select an asset to deposit
                                    </Form.style__FormItemLabel>
                  }
>
                  <style__Image
                                    alt="logo"
                                    src="/public/images/assets/ETH.svg"
                  />
                  <Select.style
                                    defaultValue="ETH"
                                    onSelect={[Function]}
                                    style={
                                                      Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                                    }
                  >
                                    <Option
                                                      value="ETH"
                                    >
                                                      ETH
                                    </Option>
                                    <Option
                                                      value="BOKKY"
                                    >
                                                      BOKKY
                                    </Option>
                  </Select.style>
</Form.style__FormItem>,
                <Form.style__FormItem
                  colon={false}
                  help={
                                    <HelperTextComponent
                                                      left="$0.00"
                                                      right="usd"
                                    />
                  }
                  label={
                                    <Form.style__FormItemLabel>
                                                      enter_amount
                                    </Form.style__FormItemLabel>
                  }
>
                  <Input.style
                                    defaultValue="0"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    value="0"
                  />
</Form.style__FormItem>,
                <Collapse
                  bordered={false}
                  defaultActiveKey={
                                    Array [
                                                      "2",
                                                    ]
                  }
>
                  <CollapsePanel
                                    header={
                                                      <style__AdvancedSettingsHeader>
                                                                        advanced_settings
                                                      </style__AdvancedSettingsHeader>
                                    }
                  >
                                    <Form.style__FormItem
                                                      colon={false}
                                                      label={
                                                                        <Form.style__FormItemLabel>
                                                                                          gas_price
                                                                        </Form.style__FormItemLabel>
                                                      }
                                    >
                                                      <Input.style
                                                                        defaultValue="10"
                                                                        min={0}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        value="10"
                                                      />
                                    </Form.style__FormItem>
                                    <Form.style__FormItem
                                                      colon={false}
                                                      label={
                                                                        <Form.style__FormItemLabel>
                                                                                          gas_limit
                                                                        </Form.style__FormItemLabel>
                                                      }
                                    >
                                                      <Input.style
                                                                        defaultValue="600000"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        value="600000"
                                                      />
                                    </Form.style__FormItem>
                  </CollapsePanel>
</Collapse>,
                <style__DollarPrice>
                  1 ETH = $412.00
</style__DollarPrice>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <style__Image
                      alt="logo"
                      src="/public/images/assets/ETH.svg"
/>,
                    <Select.style
                      defaultValue="ETH"
                      onSelect={[Function]}
                      style={
                                            Object {
                                                                  "paddingLeft": "0.5rem",
                                                                }
                      }
>
                      <Option
                                            value="ETH"
                      >
                                            ETH
                      </Option>
                      <Option
                                            value="BOKKY"
                      >
                                            BOKKY
                      </Option>
</Select.style>,
                  ],
                  "colon": false,
                  "label": <Form.style__FormItemLabel>
                    Select an asset to deposit
</Form.style__FormItemLabel>,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "alt": "logo",
                      "src": "/public/images/assets/ETH.svg",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <Option
                          value="ETH"
>
                          ETH
</Option>,
                        <Option
                          value="BOKKY"
>
                          BOKKY
</Option>,
                      ],
                      "defaultValue": "ETH",
                      "onSelect": [Function],
                      "style": Object {
                        "paddingLeft": "0.5rem",
                      },
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": "ETH",
                        "nodeType": "class",
                        "props": Object {
                          "children": "ETH",
                          "value": "ETH",
                        },
                        "ref": null,
                        "rendered": "ETH",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": "BOKKY",
                        "nodeType": "class",
                        "props": Object {
                          "children": "BOKKY",
                          "value": "BOKKY",
                        },
                        "ref": null,
                        "rendered": "BOKKY",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Input.style
                    defaultValue="0"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    value="0"
/>,
                  "colon": false,
                  "help": <HelperTextComponent
                    left="$0.00"
                    right="usd"
/>,
                  "label": <Form.style__FormItemLabel>
                    enter_amount
</Form.style__FormItemLabel>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "defaultValue": "0",
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "0",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bordered": false,
                  "children": <CollapsePanel
                    header={
                                        <style__AdvancedSettingsHeader>
                                                            advanced_settings
                                        </style__AdvancedSettingsHeader>
                    }
>
                    <Form.style__FormItem
                                        colon={false}
                                        label={
                                                            <Form.style__FormItemLabel>
                                                                                gas_price
                                                            </Form.style__FormItemLabel>
                                        }
                    >
                                        <Input.style
                                                            defaultValue="10"
                                                            min={0}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="10"
                                        />
                    </Form.style__FormItem>
                    <Form.style__FormItem
                                        colon={false}
                                        label={
                                                            <Form.style__FormItemLabel>
                                                                                gas_limit
                                                            </Form.style__FormItemLabel>
                                        }
                    >
                                        <Input.style
                                                            defaultValue="600000"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="600000"
                                        />
                    </Form.style__FormItem>
</CollapsePanel>,
                  "defaultActiveKey": Array [
                    "2",
                  ],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <Form.style__FormItem
                        colon={false}
                        label={
                                                <Form.style__FormItemLabel>
                                                                        gas_price
                                                </Form.style__FormItemLabel>
                        }
>
                        <Input.style
                                                defaultValue="10"
                                                min={0}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value="10"
                        />
</Form.style__FormItem>,
                      <Form.style__FormItem
                        colon={false}
                        label={
                                                <Form.style__FormItemLabel>
                                                                        gas_limit
                                                </Form.style__FormItemLabel>
                        }
>
                        <Input.style
                                                defaultValue="600000"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value="600000"
                        />
</Form.style__FormItem>,
                    ],
                    "header": <style__AdvancedSettingsHeader>
                      advanced_settings
</style__AdvancedSettingsHeader>,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Input.style
                          defaultValue="10"
                          min={0}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          value="10"
/>,
                        "colon": false,
                        "label": <Form.style__FormItemLabel>
                          gas_price
</Form.style__FormItemLabel>,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "defaultValue": "10",
                          "min": 0,
                          "onBlur": [Function],
                          "onChange": [Function],
                          "onFocus": [Function],
                          "value": "10",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Input.style
                          defaultValue="600000"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          value="600000"
/>,
                        "colon": false,
                        "label": <Form.style__FormItemLabel>
                          gas_limit
</Form.style__FormItemLabel>,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "defaultValue": "600000",
                          "onBlur": [Function],
                          "onChange": [Function],
                          "onFocus": [Function],
                          "value": "600000",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "1 ETH = $412.00",
                },
                "ref": null,
                "rendered": "1 ETH = $412.00",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                Deposit
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main="0 ETH"
                                subtitle="$0.00"
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                Base layer fee
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main="0.006 ETH"
                                subtitle="$2.47"
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                Base layer ETH 
                                balance_before
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main="0.198937 ETH"
                                subtitle="$81.96"
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                Base layer ETH 
                                balance_after
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main="0.192937 ETH"
                                subtitle="$79.49"
                />
</Row>,
              <div>
                <Row
                                gutter={0}
                >
                                <style__StyledCol
                                                span={12}
                                >
                                                nahmii ETH 
                                                balance_before
                                </style__StyledCol>
                </Row>
                <Row
                                gutter={0}
                >
                                <TransferDescriptionItem
                                                main="0.2 ETH"
                                                subtitle="$82.40"
                                />
                </Row>
                <Row
                                gutter={0}
                >
                                <style__StyledCol
                                                span={12}
                                >
                                                nahmii ETH 
                                                balance_after
                                </style__StyledCol>
                </Row>
                <Row
                                gutter={0}
                >
                                <TransferDescriptionItem
                                                main="0.2 ETH"
                                                subtitle="$82.40"
                                />
                </Row>
</div>,
              false,
              <Row
                gutter={0}
>
                <style__HWPromptWrapper>
                                <Connect(HWPromptContainer) />
                </style__HWPromptWrapper>
                <Alert
                                message="some error message"
                                showIcon={true}
                                style={
                                                Object {
                                                                "marginTop": "2rem",
                                                              }
                                }
                                type="error"
                />
                <style__StyledButton
                                disabled={false}
                                onClick={[Function]}
                                type="primary"
                >
                                <span>
                                                Deposit
                                </span>
                </style__StyledButton>
</Row>,
            ],
            "style": Object {
              "minWidth": "34rem",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  Deposit
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Deposit",
                  "span": 12,
                },
                "ref": null,
                "rendered": "Deposit",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main="0 ETH"
                  subtitle="$0.00"
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": "0 ETH",
                  "subtitle": "$0.00",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  Base layer fee
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Base layer fee",
                  "span": 12,
                },
                "ref": null,
                "rendered": "Base layer fee",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main="0.006 ETH"
                  subtitle="$2.47"
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": "0.006 ETH",
                  "subtitle": "$2.47",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  Base layer ETH 
                  balance_before
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "Base layer ETH ",
                    "balance_before",
                  ],
                  "span": 12,
                },
                "ref": null,
                "rendered": Array [
                  "Base layer ETH ",
                  "balance_before",
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main="0.198937 ETH"
                  subtitle="$81.96"
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": "0.198937 ETH",
                  "subtitle": "$81.96",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  Base layer ETH 
                  balance_after
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "Base layer ETH ",
                    "balance_after",
                  ],
                  "span": 12,
                },
                "ref": null,
                "rendered": Array [
                  "Base layer ETH ",
                  "balance_after",
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main="0.192937 ETH"
                  subtitle="$79.49"
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": "0.192937 ETH",
                  "subtitle": "$79.49",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Row
                    gutter={0}
>
                    <style__StyledCol
                                        span={12}
                    >
                                        nahmii ETH 
                                        balance_before
                    </style__StyledCol>
</Row>,
                  <Row
                    gutter={0}
>
                    <TransferDescriptionItem
                                        main="0.2 ETH"
                                        subtitle="$82.40"
                    />
</Row>,
                  <Row
                    gutter={0}
>
                    <style__StyledCol
                                        span={12}
                    >
                                        nahmii ETH 
                                        balance_after
                    </style__StyledCol>
</Row>,
                  <Row
                    gutter={0}
>
                    <TransferDescriptionItem
                                        main="0.2 ETH"
                                        subtitle="$82.40"
                    />
</Row>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <style__StyledCol
                      span={12}
>
                      nahmii ETH 
                      balance_before
</style__StyledCol>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "nahmii ETH ",
                        "balance_before",
                      ],
                      "span": 12,
                    },
                    "ref": null,
                    "rendered": Array [
                      "nahmii ETH ",
                      "balance_before",
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TransferDescriptionItem
                      main="0.2 ETH"
                      subtitle="$82.40"
/>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "main": "0.2 ETH",
                      "subtitle": "$82.40",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <style__StyledCol
                      span={12}
>
                      nahmii ETH 
                      balance_after
</style__StyledCol>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "nahmii ETH ",
                        "balance_after",
                      ],
                      "span": 12,
                    },
                    "ref": null,
                    "rendered": Array [
                      "nahmii ETH ",
                      "balance_after",
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TransferDescriptionItem
                      main="0.2 ETH"
                      subtitle="$82.40"
/>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "main": "0.2 ETH",
                      "subtitle": "$82.40",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <style__HWPromptWrapper>
                    <Connect(HWPromptContainer) />
</style__HWPromptWrapper>,
                  <Alert
                    message="some error message"
                    showIcon={true}
                    style={
                                        Object {
                                                            "marginTop": "2rem",
                                                          }
                    }
                    type="error"
/>,
                  <style__StyledButton
                    disabled={false}
                    onClick={[Function]}
                    type="primary"
>
                    <span>
                                        Deposit
                    </span>
</style__StyledButton>,
                ],
                "gutter": 0,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Connect(HWPromptContainer) />,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "message": "some error message",
                    "showIcon": true,
                    "style": Object {
                      "marginTop": "2rem",
                    },
                    "type": "error",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <span>
                      Deposit
</span>,
                    "disabled": false,
                    "onClick": [Function],
                    "type": "primary",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Deposit",
                    },
                    "ref": null,
                    "rendered": "Deposit",
                    "type": "span",
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<NahmiiDeposit /> should render correctly when everything is loaded 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NahmiiDeposit
    currentNetwork={
        Object {
            "identityServiceAppId": "appid",
            "identityServiceSecret": "secret",
            "nahmiiProvider": NahmiiProvider {
              "_emitted": Object {
                "block": -1,
              },
              "_events": Object {},
              "chainId": 3,
              "ensAddress": "0x112234455C3a32FD11230C42E7Bccd4A84e02010",
              "name": "ropsten",
              "resetEventsBlock": [Function],
              "url": "http://geth-ropsten.dev.hubii.net",
            },
            "provider": FallbackProvider {
              "_emitted": Object {
                "block": -1,
              },
              "_events": Object {},
              "chainId": 3,
              "ensAddress": "0x112234455C3a32FD11230C42E7Bccd4A84e02010",
              "name": "ropsten",
              "resetEventsBlock": [Function],
            },
            "walletApiEndpoint": [Function],
          }
    }
    currentWalletWithInfo={
        Immutable.Map {
            deviceId: "041ca8e96420e95a106e8c9bb3c9fb9e8c00d4b11cac562888c898000b5cec366c03a0f84574716fac6c7a7df47a925f0e30f5286546adf3179b5a08dc9d8e09da",
            address: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
            type: "lns",
            name: "lns",
            derivationPath: "m/44'/60'/0'/0",
            transactions: Immutable.Map {
                loading: false,
                error: null,
                transactions: Immutable.List [
                    Immutable.Map {
                        decimalAmount: "0.0000000001",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780091,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "ETH",
                        sender: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        amount: "100000000",
                        symbol: "ETH",
                        recipient: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        type: "received",
                        fiatValue: "0.0000000412",
                        confirmations: "3",
                    },
                    Immutable.Map {
                        decimalAmount: "0.000000000000000005",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780091,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        sender: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        amount: "5",
                        symbol: "BOKKY",
                        recipient: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        type: "sent",
                        fiatValue: "0.000000000000000005",
                        confirmations: "3",
                    },
                ],
            },
            balances: Immutable.Map {
                baseLayer: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.198937",
                            currency: "ETH",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.198937",
                                btc: "0.00198937",
                                usd: "81.962044",
                            },
                        },
                        Immutable.Map {
                            balance: "1.231288e-12",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "1.231288e-13",
                                btc: "1.231288e-15",
                                usd: "1.231288e-12",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1989370000001231288",
                        btc: "0.001989370000001231288",
                        usd: "81.962044000001231288",
                    },
                },
                nahmiiAvailable: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "ETH",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.113",
                        btc: "0.00113",
                        usd: "41.33",
                    },
                },
                nahmiiStaging: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "ETH",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1",
                        btc: "0.001",
                        usd: "41.2",
                    },
                },
                nahmiiStaged: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                    ],
                    total: Immutable.Map {
                        eth: "0",
                        btc: "0",
                        usd: "0",
                    },
                },
                nahmiiCombined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "ETH",
                            balance: "0.2",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.2",
                                btc: "0.002",
                                usd: "82.4",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.213",
                        btc: "0.00213",
                        usd: "82.53",
                    },
                },
                combined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.398937",
                            currency: "ETH",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.398937",
                                btc: "0.00398937",
                                usd: "164.362044",
                            },
                        },
                        Immutable.Map {
                            balance: "0.130000000001231288",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.0130000000001231288",
                                btc: "0.000130000000001231288",
                                usd: "0.130000000001231288",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.4119370000001231288",
                        btc: "0.004119370000001231288",
                        usd: "164.492044000001231288",
                    },
                },
            },
        }
    }
    depositStatus={
        Immutable.Map {
            depositingEth: false,
            approvingTokenDeposit: false,
            completingTokenDeposit: false,
            error: null,
        }
    }
    intl={
        Object {
            "formatMessage": [Function],
          }
    }
    nahmiiDeposit={[Function]}
    prices={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    eth: 0.1,
                    btc: 0.001,
                    usd: 1,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "ETH",
                    eth: 1,
                    btc: 0.01,
                    usd: 412,
                },
            ],
        }
    }
    supportedAssets={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    symbol: "My20",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    symbol: "HBT",
                    decimals: 15,
                    color: "0063A5",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    symbol: "SBT",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    symbol: "WETH",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    symbol: "BOKKY",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "ETH",
                    symbol: "ETH",
                    decimals: 18,
                    color: "5C78E4",
                },
            ],
        }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          style={
                    Object {
                              "flex": "1",
                              "marginRight": "2rem",
                            }
          }
>
          <Form.style__FlexForm>
                    <Form.style__FormItem
                              colon={false}
                              label={
                                        <Form.style__FormItemLabel>
                                                  Select an asset to deposit
                                        </Form.style__FormItemLabel>
                              }
                    >
                              <style__Image
                                        alt="logo"
                                        src="/public/images/assets/ETH.svg"
                              />
                              <Select.style
                                        defaultValue="ETH"
                                        onSelect={[Function]}
                                        style={
                                                  Object {
                                                            "paddingLeft": "0.5rem",
                                                          }
                                        }
                              >
                                        <Option
                                                  value="ETH"
                                        >
                                                  ETH
                                        </Option>
                                        <Option
                                                  value="BOKKY"
                                        >
                                                  BOKKY
                                        </Option>
                              </Select.style>
                    </Form.style__FormItem>
                    <Form.style__FormItem
                              colon={false}
                              help={
                                        <HelperTextComponent
                                                  left="$0.00"
                                                  right="usd"
                                        />
                              }
                              label={
                                        <Form.style__FormItemLabel>
                                                  enter_amount
                                        </Form.style__FormItemLabel>
                              }
                    >
                              <Input.style
                                        defaultValue="0"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        value="0"
                              />
                    </Form.style__FormItem>
                    <Collapse
                              bordered={false}
                              defaultActiveKey={
                                        Array [
                                                  "2",
                                                ]
                              }
                    >
                              <CollapsePanel
                                        header={
                                                  <style__AdvancedSettingsHeader>
                                                            advanced_settings
                                                  </style__AdvancedSettingsHeader>
                                        }
                              >
                                        <Form.style__FormItem
                                                  colon={false}
                                                  label={
                                                            <Form.style__FormItemLabel>
                                                                      gas_price
                                                            </Form.style__FormItemLabel>
                                                  }
                                        >
                                                  <Input.style
                                                            defaultValue="10"
                                                            min={0}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="10"
                                                  />
                                        </Form.style__FormItem>
                                        <Form.style__FormItem
                                                  colon={false}
                                                  label={
                                                            <Form.style__FormItemLabel>
                                                                      gas_limit
                                                            </Form.style__FormItemLabel>
                                                  }
                                        >
                                                  <Input.style
                                                            defaultValue="600000"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="600000"
                                                  />
                                        </Form.style__FormItem>
                              </CollapsePanel>
                    </Collapse>
                    <style__DollarPrice>
                              1 ETH = $412.00
                    </style__DollarPrice>
          </Form.style__FlexForm>
</div>,
        <div
          style={
                    Object {
                              "minWidth": "34rem",
                            }
          }
>
          <Row
                    gutter={0}
          >
                    <style__StyledCol
                              span={12}
                    >
                              Deposit
                    </style__StyledCol>
          </Row>
          <Row
                    gutter={0}
          >
                    <TransferDescriptionItem
                              main="0 ETH"
                              subtitle="$0.00"
                    />
          </Row>
          <Row
                    gutter={0}
          >
                    <style__StyledCol
                              span={12}
                    >
                              Base layer fee
                    </style__StyledCol>
          </Row>
          <Row
                    gutter={0}
          >
                    <TransferDescriptionItem
                              main="0.006 ETH"
                              subtitle="$2.47"
                    />
          </Row>
          <Row
                    gutter={0}
          >
                    <style__StyledCol
                              span={12}
                    >
                              Base layer ETH 
                              balance_before
                    </style__StyledCol>
          </Row>
          <Row
                    gutter={0}
          >
                    <TransferDescriptionItem
                              main="0.198937 ETH"
                              subtitle="$81.96"
                    />
          </Row>
          <Row
                    gutter={0}
          >
                    <style__StyledCol
                              span={12}
                    >
                              Base layer ETH 
                              balance_after
                    </style__StyledCol>
          </Row>
          <Row
                    gutter={0}
          >
                    <TransferDescriptionItem
                              main="0.192937 ETH"
                              subtitle="$79.49"
                    />
          </Row>
          <div>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        nahmii ETH 
                                        balance_before
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main="0.2 ETH"
                                        subtitle="$82.40"
                              />
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <style__StyledCol
                                        span={12}
                              >
                                        nahmii ETH 
                                        balance_after
                              </style__StyledCol>
                    </Row>
                    <Row
                              gutter={0}
                    >
                              <TransferDescriptionItem
                                        main="0.2 ETH"
                                        subtitle="$82.40"
                              />
                    </Row>
          </div>
          <Row
                    gutter={0}
          >
                    <style__HWPromptWrapper>
                              <Connect(HWPromptContainer) />
                    </style__HWPromptWrapper>
                    <style__StyledButton
                              disabled={false}
                              onClick={[Function]}
                              type="primary"
                    >
                              <span>
                                        Deposit
                              </span>
                    </style__StyledButton>
          </Row>
</div>,
      ],
      "style": Object {
        "display": "flex",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Form.style__FlexForm>
            <Form.style__FormItem
                        colon={false}
                        label={
                                    <Form.style__FormItemLabel>
                                                Select an asset to deposit
                                    </Form.style__FormItemLabel>
                        }
            >
                        <style__Image
                                    alt="logo"
                                    src="/public/images/assets/ETH.svg"
                        />
                        <Select.style
                                    defaultValue="ETH"
                                    onSelect={[Function]}
                                    style={
                                                Object {
                                                            "paddingLeft": "0.5rem",
                                                          }
                                    }
                        >
                                    <Option
                                                value="ETH"
                                    >
                                                ETH
                                    </Option>
                                    <Option
                                                value="BOKKY"
                                    >
                                                BOKKY
                                    </Option>
                        </Select.style>
            </Form.style__FormItem>
            <Form.style__FormItem
                        colon={false}
                        help={
                                    <HelperTextComponent
                                                left="$0.00"
                                                right="usd"
                                    />
                        }
                        label={
                                    <Form.style__FormItemLabel>
                                                enter_amount
                                    </Form.style__FormItemLabel>
                        }
            >
                        <Input.style
                                    defaultValue="0"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    value="0"
                        />
            </Form.style__FormItem>
            <Collapse
                        bordered={false}
                        defaultActiveKey={
                                    Array [
                                                "2",
                                              ]
                        }
            >
                        <CollapsePanel
                                    header={
                                                <style__AdvancedSettingsHeader>
                                                            advanced_settings
                                                </style__AdvancedSettingsHeader>
                                    }
                        >
                                    <Form.style__FormItem
                                                colon={false}
                                                label={
                                                            <Form.style__FormItemLabel>
                                                                        gas_price
                                                            </Form.style__FormItemLabel>
                                                }
                                    >
                                                <Input.style
                                                            defaultValue="10"
                                                            min={0}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="10"
                                                />
                                    </Form.style__FormItem>
                                    <Form.style__FormItem
                                                colon={false}
                                                label={
                                                            <Form.style__FormItemLabel>
                                                                        gas_limit
                                                            </Form.style__FormItemLabel>
                                                }
                                    >
                                                <Input.style
                                                            defaultValue="600000"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="600000"
                                                />
                                    </Form.style__FormItem>
                        </CollapsePanel>
            </Collapse>
            <style__DollarPrice>
                        1 ETH = $412.00
            </style__DollarPrice>
</Form.style__FlexForm>,
          "style": Object {
            "flex": "1",
            "marginRight": "2rem",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Form.style__FormItem
                colon={false}
                label={
                                <Form.style__FormItemLabel>
                                                Select an asset to deposit
                                </Form.style__FormItemLabel>
                }
>
                <style__Image
                                alt="logo"
                                src="/public/images/assets/ETH.svg"
                />
                <Select.style
                                defaultValue="ETH"
                                onSelect={[Function]}
                                style={
                                                Object {
                                                                "paddingLeft": "0.5rem",
                                                              }
                                }
                >
                                <Option
                                                value="ETH"
                                >
                                                ETH
                                </Option>
                                <Option
                                                value="BOKKY"
                                >
                                                BOKKY
                                </Option>
                </Select.style>
</Form.style__FormItem>,
              <Form.style__FormItem
                colon={false}
                help={
                                <HelperTextComponent
                                                left="$0.00"
                                                right="usd"
                                />
                }
                label={
                                <Form.style__FormItemLabel>
                                                enter_amount
                                </Form.style__FormItemLabel>
                }
>
                <Input.style
                                defaultValue="0"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                value="0"
                />
</Form.style__FormItem>,
              <Collapse
                bordered={false}
                defaultActiveKey={
                                Array [
                                                "2",
                                              ]
                }
>
                <CollapsePanel
                                header={
                                                <style__AdvancedSettingsHeader>
                                                                advanced_settings
                                                </style__AdvancedSettingsHeader>
                                }
                >
                                <Form.style__FormItem
                                                colon={false}
                                                label={
                                                                <Form.style__FormItemLabel>
                                                                                gas_price
                                                                </Form.style__FormItemLabel>
                                                }
                                >
                                                <Input.style
                                                                defaultValue="10"
                                                                min={0}
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                value="10"
                                                />
                                </Form.style__FormItem>
                                <Form.style__FormItem
                                                colon={false}
                                                label={
                                                                <Form.style__FormItemLabel>
                                                                                gas_limit
                                                                </Form.style__FormItemLabel>
                                                }
                                >
                                                <Input.style
                                                                defaultValue="600000"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                value="600000"
                                                />
                                </Form.style__FormItem>
                </CollapsePanel>
</Collapse>,
              <style__DollarPrice>
                1 ETH = $412.00
</style__DollarPrice>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <style__Image
                    alt="logo"
                    src="/public/images/assets/ETH.svg"
/>,
                  <Select.style
                    defaultValue="ETH"
                    onSelect={[Function]}
                    style={
                                        Object {
                                                            "paddingLeft": "0.5rem",
                                                          }
                    }
>
                    <Option
                                        value="ETH"
                    >
                                        ETH
                    </Option>
                    <Option
                                        value="BOKKY"
                    >
                                        BOKKY
                    </Option>
</Select.style>,
                ],
                "colon": false,
                "label": <Form.style__FormItemLabel>
                  Select an asset to deposit
</Form.style__FormItemLabel>,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "alt": "logo",
                    "src": "/public/images/assets/ETH.svg",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <Option
                        value="ETH"
>
                        ETH
</Option>,
                      <Option
                        value="BOKKY"
>
                        BOKKY
</Option>,
                    ],
                    "defaultValue": "ETH",
                    "onSelect": [Function],
                    "style": Object {
                      "paddingLeft": "0.5rem",
                    },
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "ETH",
                      "nodeType": "class",
                      "props": Object {
                        "children": "ETH",
                        "value": "ETH",
                      },
                      "ref": null,
                      "rendered": "ETH",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "BOKKY",
                      "nodeType": "class",
                      "props": Object {
                        "children": "BOKKY",
                        "value": "BOKKY",
                      },
                      "ref": null,
                      "rendered": "BOKKY",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Input.style
                  defaultValue="0"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  value="0"
/>,
                "colon": false,
                "help": <HelperTextComponent
                  left="$0.00"
                  right="usd"
/>,
                "label": <Form.style__FormItemLabel>
                  enter_amount
</Form.style__FormItemLabel>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "defaultValue": "0",
                  "onBlur": [Function],
                  "onChange": [Function],
                  "onFocus": [Function],
                  "value": "0",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bordered": false,
                "children": <CollapsePanel
                  header={
                                    <style__AdvancedSettingsHeader>
                                                      advanced_settings
                                    </style__AdvancedSettingsHeader>
                  }
>
                  <Form.style__FormItem
                                    colon={false}
                                    label={
                                                      <Form.style__FormItemLabel>
                                                                        gas_price
                                                      </Form.style__FormItemLabel>
                                    }
                  >
                                    <Input.style
                                                      defaultValue="10"
                                                      min={0}
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      value="10"
                                    />
                  </Form.style__FormItem>
                  <Form.style__FormItem
                                    colon={false}
                                    label={
                                                      <Form.style__FormItemLabel>
                                                                        gas_limit
                                                      </Form.style__FormItemLabel>
                                    }
                  >
                                    <Input.style
                                                      defaultValue="600000"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      value="600000"
                                    />
                  </Form.style__FormItem>
</CollapsePanel>,
                "defaultActiveKey": Array [
                  "2",
                ],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": "1",
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Form.style__FormItem
                      colon={false}
                      label={
                                            <Form.style__FormItemLabel>
                                                                  gas_price
                                            </Form.style__FormItemLabel>
                      }
>
                      <Input.style
                                            defaultValue="10"
                                            min={0}
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            value="10"
                      />
</Form.style__FormItem>,
                    <Form.style__FormItem
                      colon={false}
                      label={
                                            <Form.style__FormItemLabel>
                                                                  gas_limit
                                            </Form.style__FormItemLabel>
                      }
>
                      <Input.style
                                            defaultValue="600000"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            value="600000"
                      />
</Form.style__FormItem>,
                  ],
                  "header": <style__AdvancedSettingsHeader>
                    advanced_settings
</style__AdvancedSettingsHeader>,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Input.style
                        defaultValue="10"
                        min={0}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        value="10"
/>,
                      "colon": false,
                      "label": <Form.style__FormItemLabel>
                        gas_price
</Form.style__FormItemLabel>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "defaultValue": "10",
                        "min": 0,
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onFocus": [Function],
                        "value": "10",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Input.style
                        defaultValue="600000"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        value="600000"
/>,
                      "colon": false,
                      "label": <Form.style__FormItemLabel>
                        gas_limit
</Form.style__FormItemLabel>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "defaultValue": "600000",
                        "onBlur": [Function],
                        "onChange": [Function],
                        "onFocus": [Function],
                        "value": "600000",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "1 ETH = $412.00",
              },
              "ref": null,
              "rendered": "1 ETH = $412.00",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Row
              gutter={0}
>
              <style__StyledCol
                            span={12}
              >
                            Deposit
              </style__StyledCol>
</Row>,
            <Row
              gutter={0}
>
              <TransferDescriptionItem
                            main="0 ETH"
                            subtitle="$0.00"
              />
</Row>,
            <Row
              gutter={0}
>
              <style__StyledCol
                            span={12}
              >
                            Base layer fee
              </style__StyledCol>
</Row>,
            <Row
              gutter={0}
>
              <TransferDescriptionItem
                            main="0.006 ETH"
                            subtitle="$2.47"
              />
</Row>,
            <Row
              gutter={0}
>
              <style__StyledCol
                            span={12}
              >
                            Base layer ETH 
                            balance_before
              </style__StyledCol>
</Row>,
            <Row
              gutter={0}
>
              <TransferDescriptionItem
                            main="0.198937 ETH"
                            subtitle="$81.96"
              />
</Row>,
            <Row
              gutter={0}
>
              <style__StyledCol
                            span={12}
              >
                            Base layer ETH 
                            balance_after
              </style__StyledCol>
</Row>,
            <Row
              gutter={0}
>
              <TransferDescriptionItem
                            main="0.192937 ETH"
                            subtitle="$79.49"
              />
</Row>,
            <div>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          nahmii ETH 
                                          balance_before
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main="0.2 ETH"
                                          subtitle="$82.40"
                            />
              </Row>
              <Row
                            gutter={0}
              >
                            <style__StyledCol
                                          span={12}
                            >
                                          nahmii ETH 
                                          balance_after
                            </style__StyledCol>
              </Row>
              <Row
                            gutter={0}
              >
                            <TransferDescriptionItem
                                          main="0.2 ETH"
                                          subtitle="$82.40"
                            />
              </Row>
</div>,
            false,
            <Row
              gutter={0}
>
              <style__HWPromptWrapper>
                            <Connect(HWPromptContainer) />
              </style__HWPromptWrapper>
              <style__StyledButton
                            disabled={false}
                            onClick={[Function]}
                            type="primary"
              >
                            <span>
                                          Deposit
                            </span>
              </style__StyledButton>
</Row>,
          ],
          "style": Object {
            "minWidth": "34rem",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <style__StyledCol
                span={12}
>
                Deposit
</style__StyledCol>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Deposit",
                "span": 12,
              },
              "ref": null,
              "rendered": "Deposit",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <TransferDescriptionItem
                main="0 ETH"
                subtitle="$0.00"
/>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "main": "0 ETH",
                "subtitle": "$0.00",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <style__StyledCol
                span={12}
>
                Base layer fee
</style__StyledCol>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Base layer fee",
                "span": 12,
              },
              "ref": null,
              "rendered": "Base layer fee",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <TransferDescriptionItem
                main="0.006 ETH"
                subtitle="$2.47"
/>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "main": "0.006 ETH",
                "subtitle": "$2.47",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <style__StyledCol
                span={12}
>
                Base layer ETH 
                balance_before
</style__StyledCol>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  "Base layer ETH ",
                  "balance_before",
                ],
                "span": 12,
              },
              "ref": null,
              "rendered": Array [
                "Base layer ETH ",
                "balance_before",
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <TransferDescriptionItem
                main="0.198937 ETH"
                subtitle="$81.96"
/>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "main": "0.198937 ETH",
                "subtitle": "$81.96",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <style__StyledCol
                span={12}
>
                Base layer ETH 
                balance_after
</style__StyledCol>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  "Base layer ETH ",
                  "balance_after",
                ],
                "span": 12,
              },
              "ref": null,
              "rendered": Array [
                "Base layer ETH ",
                "balance_after",
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <TransferDescriptionItem
                main="0.192937 ETH"
                subtitle="$79.49"
/>,
              "gutter": 0,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "main": "0.192937 ETH",
                "subtitle": "$79.49",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    nahmii ETH 
                                    balance_before
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main="0.2 ETH"
                                    subtitle="$82.40"
                  />
</Row>,
                <Row
                  gutter={0}
>
                  <style__StyledCol
                                    span={12}
                  >
                                    nahmii ETH 
                                    balance_after
                  </style__StyledCol>
</Row>,
                <Row
                  gutter={0}
>
                  <TransferDescriptionItem
                                    main="0.2 ETH"
                                    subtitle="$82.40"
                  />
</Row>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    nahmii ETH 
                    balance_before
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "nahmii ETH ",
                      "balance_before",
                    ],
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Array [
                    "nahmii ETH ",
                    "balance_before",
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main="0.2 ETH"
                    subtitle="$82.40"
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": "0.2 ETH",
                    "subtitle": "$82.40",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <style__StyledCol
                    span={12}
>
                    nahmii ETH 
                    balance_after
</style__StyledCol>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "nahmii ETH ",
                      "balance_after",
                    ],
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": Array [
                    "nahmii ETH ",
                    "balance_after",
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <TransferDescriptionItem
                    main="0.2 ETH"
                    subtitle="$82.40"
/>,
                  "gutter": 0,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "main": "0.2 ETH",
                    "subtitle": "$82.40",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": "div",
          },
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <style__HWPromptWrapper>
                  <Connect(HWPromptContainer) />
</style__HWPromptWrapper>,
                null,
                <style__StyledButton
                  disabled={false}
                  onClick={[Function]}
                  type="primary"
>
                  <span>
                                    Deposit
                  </span>
</style__StyledButton>,
              ],
              "gutter": 0,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Connect(HWPromptContainer) />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              null,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <span>
                    Deposit
</span>,
                  "disabled": false,
                  "onClick": [Function],
                  "type": "primary",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Deposit",
                  },
                  "ref": null,
                  "rendered": "Deposit",
                  "type": "span",
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            style={
                        Object {
                                    "flex": "1",
                                    "marginRight": "2rem",
                                  }
            }
>
            <Form.style__FlexForm>
                        <Form.style__FormItem
                                    colon={false}
                                    label={
                                                <Form.style__FormItemLabel>
                                                            Select an asset to deposit
                                                </Form.style__FormItemLabel>
                                    }
                        >
                                    <style__Image
                                                alt="logo"
                                                src="/public/images/assets/ETH.svg"
                                    />
                                    <Select.style
                                                defaultValue="ETH"
                                                onSelect={[Function]}
                                                style={
                                                            Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                                                }
                                    >
                                                <Option
                                                            value="ETH"
                                                >
                                                            ETH
                                                </Option>
                                                <Option
                                                            value="BOKKY"
                                                >
                                                            BOKKY
                                                </Option>
                                    </Select.style>
                        </Form.style__FormItem>
                        <Form.style__FormItem
                                    colon={false}
                                    help={
                                                <HelperTextComponent
                                                            left="$0.00"
                                                            right="usd"
                                                />
                                    }
                                    label={
                                                <Form.style__FormItemLabel>
                                                            enter_amount
                                                </Form.style__FormItemLabel>
                                    }
                        >
                                    <Input.style
                                                defaultValue="0"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value="0"
                                    />
                        </Form.style__FormItem>
                        <Collapse
                                    bordered={false}
                                    defaultActiveKey={
                                                Array [
                                                            "2",
                                                          ]
                                    }
                        >
                                    <CollapsePanel
                                                header={
                                                            <style__AdvancedSettingsHeader>
                                                                        advanced_settings
                                                            </style__AdvancedSettingsHeader>
                                                }
                                    >
                                                <Form.style__FormItem
                                                            colon={false}
                                                            label={
                                                                        <Form.style__FormItemLabel>
                                                                                    gas_price
                                                                        </Form.style__FormItemLabel>
                                                            }
                                                >
                                                            <Input.style
                                                                        defaultValue="10"
                                                                        min={0}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        value="10"
                                                            />
                                                </Form.style__FormItem>
                                                <Form.style__FormItem
                                                            colon={false}
                                                            label={
                                                                        <Form.style__FormItemLabel>
                                                                                    gas_limit
                                                                        </Form.style__FormItemLabel>
                                                            }
                                                >
                                                            <Input.style
                                                                        defaultValue="600000"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        value="600000"
                                                            />
                                                </Form.style__FormItem>
                                    </CollapsePanel>
                        </Collapse>
                        <style__DollarPrice>
                                    1 ETH = $412.00
                        </style__DollarPrice>
            </Form.style__FlexForm>
</div>,
          <div
            style={
                        Object {
                                    "minWidth": "34rem",
                                  }
            }
>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    Deposit
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main="0 ETH"
                                    subtitle="$0.00"
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    Base layer fee
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main="0.006 ETH"
                                    subtitle="$2.47"
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    Base layer ETH 
                                    balance_before
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main="0.198937 ETH"
                                    subtitle="$81.96"
                        />
            </Row>
            <Row
                        gutter={0}
            >
                        <style__StyledCol
                                    span={12}
                        >
                                    Base layer ETH 
                                    balance_after
                        </style__StyledCol>
            </Row>
            <Row
                        gutter={0}
            >
                        <TransferDescriptionItem
                                    main="0.192937 ETH"
                                    subtitle="$79.49"
                        />
            </Row>
            <div>
                        <Row
                                    gutter={0}
                        >
                                    <style__StyledCol
                                                span={12}
                                    >
                                                nahmii ETH 
                                                balance_before
                                    </style__StyledCol>
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <TransferDescriptionItem
                                                main="0.2 ETH"
                                                subtitle="$82.40"
                                    />
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <style__StyledCol
                                                span={12}
                                    >
                                                nahmii ETH 
                                                balance_after
                                    </style__StyledCol>
                        </Row>
                        <Row
                                    gutter={0}
                        >
                                    <TransferDescriptionItem
                                                main="0.2 ETH"
                                                subtitle="$82.40"
                                    />
                        </Row>
            </div>
            <Row
                        gutter={0}
            >
                        <style__HWPromptWrapper>
                                    <Connect(HWPromptContainer) />
                        </style__HWPromptWrapper>
                        <style__StyledButton
                                    disabled={false}
                                    onClick={[Function]}
                                    type="primary"
                        >
                                    <span>
                                                Deposit
                                    </span>
                        </style__StyledButton>
            </Row>
</div>,
        ],
        "style": Object {
          "display": "flex",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Form.style__FlexForm>
              <Form.style__FormItem
                            colon={false}
                            label={
                                          <Form.style__FormItemLabel>
                                                        Select an asset to deposit
                                          </Form.style__FormItemLabel>
                            }
              >
                            <style__Image
                                          alt="logo"
                                          src="/public/images/assets/ETH.svg"
                            />
                            <Select.style
                                          defaultValue="ETH"
                                          onSelect={[Function]}
                                          style={
                                                        Object {
                                                                      "paddingLeft": "0.5rem",
                                                                    }
                                          }
                            >
                                          <Option
                                                        value="ETH"
                                          >
                                                        ETH
                                          </Option>
                                          <Option
                                                        value="BOKKY"
                                          >
                                                        BOKKY
                                          </Option>
                            </Select.style>
              </Form.style__FormItem>
              <Form.style__FormItem
                            colon={false}
                            help={
                                          <HelperTextComponent
                                                        left="$0.00"
                                                        right="usd"
                                          />
                            }
                            label={
                                          <Form.style__FormItemLabel>
                                                        enter_amount
                                          </Form.style__FormItemLabel>
                            }
              >
                            <Input.style
                                          defaultValue="0"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          value="0"
                            />
              </Form.style__FormItem>
              <Collapse
                            bordered={false}
                            defaultActiveKey={
                                          Array [
                                                        "2",
                                                      ]
                            }
              >
                            <CollapsePanel
                                          header={
                                                        <style__AdvancedSettingsHeader>
                                                                      advanced_settings
                                                        </style__AdvancedSettingsHeader>
                                          }
                            >
                                          <Form.style__FormItem
                                                        colon={false}
                                                        label={
                                                                      <Form.style__FormItemLabel>
                                                                                    gas_price
                                                                      </Form.style__FormItemLabel>
                                                        }
                                          >
                                                        <Input.style
                                                                      defaultValue="10"
                                                                      min={0}
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      value="10"
                                                        />
                                          </Form.style__FormItem>
                                          <Form.style__FormItem
                                                        colon={false}
                                                        label={
                                                                      <Form.style__FormItemLabel>
                                                                                    gas_limit
                                                                      </Form.style__FormItemLabel>
                                                        }
                                          >
                                                        <Input.style
                                                                      defaultValue="600000"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      value="600000"
                                                        />
                                          </Form.style__FormItem>
                            </CollapsePanel>
              </Collapse>
              <style__DollarPrice>
                            1 ETH = $412.00
              </style__DollarPrice>
</Form.style__FlexForm>,
            "style": Object {
              "flex": "1",
              "marginRight": "2rem",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Form.style__FormItem
                  colon={false}
                  label={
                                    <Form.style__FormItemLabel>
                                                      Select an asset to deposit
                                    </Form.style__FormItemLabel>
                  }
>
                  <style__Image
                                    alt="logo"
                                    src="/public/images/assets/ETH.svg"
                  />
                  <Select.style
                                    defaultValue="ETH"
                                    onSelect={[Function]}
                                    style={
                                                      Object {
                                                                        "paddingLeft": "0.5rem",
                                                                      }
                                    }
                  >
                                    <Option
                                                      value="ETH"
                                    >
                                                      ETH
                                    </Option>
                                    <Option
                                                      value="BOKKY"
                                    >
                                                      BOKKY
                                    </Option>
                  </Select.style>
</Form.style__FormItem>,
                <Form.style__FormItem
                  colon={false}
                  help={
                                    <HelperTextComponent
                                                      left="$0.00"
                                                      right="usd"
                                    />
                  }
                  label={
                                    <Form.style__FormItemLabel>
                                                      enter_amount
                                    </Form.style__FormItemLabel>
                  }
>
                  <Input.style
                                    defaultValue="0"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    value="0"
                  />
</Form.style__FormItem>,
                <Collapse
                  bordered={false}
                  defaultActiveKey={
                                    Array [
                                                      "2",
                                                    ]
                  }
>
                  <CollapsePanel
                                    header={
                                                      <style__AdvancedSettingsHeader>
                                                                        advanced_settings
                                                      </style__AdvancedSettingsHeader>
                                    }
                  >
                                    <Form.style__FormItem
                                                      colon={false}
                                                      label={
                                                                        <Form.style__FormItemLabel>
                                                                                          gas_price
                                                                        </Form.style__FormItemLabel>
                                                      }
                                    >
                                                      <Input.style
                                                                        defaultValue="10"
                                                                        min={0}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        value="10"
                                                      />
                                    </Form.style__FormItem>
                                    <Form.style__FormItem
                                                      colon={false}
                                                      label={
                                                                        <Form.style__FormItemLabel>
                                                                                          gas_limit
                                                                        </Form.style__FormItemLabel>
                                                      }
                                    >
                                                      <Input.style
                                                                        defaultValue="600000"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        value="600000"
                                                      />
                                    </Form.style__FormItem>
                  </CollapsePanel>
</Collapse>,
                <style__DollarPrice>
                  1 ETH = $412.00
</style__DollarPrice>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <style__Image
                      alt="logo"
                      src="/public/images/assets/ETH.svg"
/>,
                    <Select.style
                      defaultValue="ETH"
                      onSelect={[Function]}
                      style={
                                            Object {
                                                                  "paddingLeft": "0.5rem",
                                                                }
                      }
>
                      <Option
                                            value="ETH"
                      >
                                            ETH
                      </Option>
                      <Option
                                            value="BOKKY"
                      >
                                            BOKKY
                      </Option>
</Select.style>,
                  ],
                  "colon": false,
                  "label": <Form.style__FormItemLabel>
                    Select an asset to deposit
</Form.style__FormItemLabel>,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "alt": "logo",
                      "src": "/public/images/assets/ETH.svg",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <Option
                          value="ETH"
>
                          ETH
</Option>,
                        <Option
                          value="BOKKY"
>
                          BOKKY
</Option>,
                      ],
                      "defaultValue": "ETH",
                      "onSelect": [Function],
                      "style": Object {
                        "paddingLeft": "0.5rem",
                      },
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": "ETH",
                        "nodeType": "class",
                        "props": Object {
                          "children": "ETH",
                          "value": "ETH",
                        },
                        "ref": null,
                        "rendered": "ETH",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": "BOKKY",
                        "nodeType": "class",
                        "props": Object {
                          "children": "BOKKY",
                          "value": "BOKKY",
                        },
                        "ref": null,
                        "rendered": "BOKKY",
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Input.style
                    defaultValue="0"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    value="0"
/>,
                  "colon": false,
                  "help": <HelperTextComponent
                    left="$0.00"
                    right="usd"
/>,
                  "label": <Form.style__FormItemLabel>
                    enter_amount
</Form.style__FormItemLabel>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "defaultValue": "0",
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "0",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bordered": false,
                  "children": <CollapsePanel
                    header={
                                        <style__AdvancedSettingsHeader>
                                                            advanced_settings
                                        </style__AdvancedSettingsHeader>
                    }
>
                    <Form.style__FormItem
                                        colon={false}
                                        label={
                                                            <Form.style__FormItemLabel>
                                                                                gas_price
                                                            </Form.style__FormItemLabel>
                                        }
                    >
                                        <Input.style
                                                            defaultValue="10"
                                                            min={0}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="10"
                                        />
                    </Form.style__FormItem>
                    <Form.style__FormItem
                                        colon={false}
                                        label={
                                                            <Form.style__FormItemLabel>
                                                                                gas_limit
                                                            </Form.style__FormItemLabel>
                                        }
                    >
                                        <Input.style
                                                            defaultValue="600000"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            value="600000"
                                        />
                    </Form.style__FormItem>
</CollapsePanel>,
                  "defaultActiveKey": Array [
                    "2",
                  ],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <Form.style__FormItem
                        colon={false}
                        label={
                                                <Form.style__FormItemLabel>
                                                                        gas_price
                                                </Form.style__FormItemLabel>
                        }
>
                        <Input.style
                                                defaultValue="10"
                                                min={0}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value="10"
                        />
</Form.style__FormItem>,
                      <Form.style__FormItem
                        colon={false}
                        label={
                                                <Form.style__FormItemLabel>
                                                                        gas_limit
                                                </Form.style__FormItemLabel>
                        }
>
                        <Input.style
                                                defaultValue="600000"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                value="600000"
                        />
</Form.style__FormItem>,
                    ],
                    "header": <style__AdvancedSettingsHeader>
                      advanced_settings
</style__AdvancedSettingsHeader>,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Input.style
                          defaultValue="10"
                          min={0}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          value="10"
/>,
                        "colon": false,
                        "label": <Form.style__FormItemLabel>
                          gas_price
</Form.style__FormItemLabel>,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "defaultValue": "10",
                          "min": 0,
                          "onBlur": [Function],
                          "onChange": [Function],
                          "onFocus": [Function],
                          "value": "10",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Input.style
                          defaultValue="600000"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          value="600000"
/>,
                        "colon": false,
                        "label": <Form.style__FormItemLabel>
                          gas_limit
</Form.style__FormItemLabel>,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "defaultValue": "600000",
                          "onBlur": [Function],
                          "onChange": [Function],
                          "onFocus": [Function],
                          "value": "600000",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "1 ETH = $412.00",
                },
                "ref": null,
                "rendered": "1 ETH = $412.00",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                Deposit
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main="0 ETH"
                                subtitle="$0.00"
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                Base layer fee
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main="0.006 ETH"
                                subtitle="$2.47"
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                Base layer ETH 
                                balance_before
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main="0.198937 ETH"
                                subtitle="$81.96"
                />
</Row>,
              <Row
                gutter={0}
>
                <style__StyledCol
                                span={12}
                >
                                Base layer ETH 
                                balance_after
                </style__StyledCol>
</Row>,
              <Row
                gutter={0}
>
                <TransferDescriptionItem
                                main="0.192937 ETH"
                                subtitle="$79.49"
                />
</Row>,
              <div>
                <Row
                                gutter={0}
                >
                                <style__StyledCol
                                                span={12}
                                >
                                                nahmii ETH 
                                                balance_before
                                </style__StyledCol>
                </Row>
                <Row
                                gutter={0}
                >
                                <TransferDescriptionItem
                                                main="0.2 ETH"
                                                subtitle="$82.40"
                                />
                </Row>
                <Row
                                gutter={0}
                >
                                <style__StyledCol
                                                span={12}
                                >
                                                nahmii ETH 
                                                balance_after
                                </style__StyledCol>
                </Row>
                <Row
                                gutter={0}
                >
                                <TransferDescriptionItem
                                                main="0.2 ETH"
                                                subtitle="$82.40"
                                />
                </Row>
</div>,
              false,
              <Row
                gutter={0}
>
                <style__HWPromptWrapper>
                                <Connect(HWPromptContainer) />
                </style__HWPromptWrapper>
                <style__StyledButton
                                disabled={false}
                                onClick={[Function]}
                                type="primary"
                >
                                <span>
                                                Deposit
                                </span>
                </style__StyledButton>
</Row>,
            ],
            "style": Object {
              "minWidth": "34rem",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  Deposit
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Deposit",
                  "span": 12,
                },
                "ref": null,
                "rendered": "Deposit",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main="0 ETH"
                  subtitle="$0.00"
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": "0 ETH",
                  "subtitle": "$0.00",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  Base layer fee
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Base layer fee",
                  "span": 12,
                },
                "ref": null,
                "rendered": "Base layer fee",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main="0.006 ETH"
                  subtitle="$2.47"
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": "0.006 ETH",
                  "subtitle": "$2.47",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  Base layer ETH 
                  balance_before
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "Base layer ETH ",
                    "balance_before",
                  ],
                  "span": 12,
                },
                "ref": null,
                "rendered": Array [
                  "Base layer ETH ",
                  "balance_before",
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main="0.198937 ETH"
                  subtitle="$81.96"
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": "0.198937 ETH",
                  "subtitle": "$81.96",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <style__StyledCol
                  span={12}
>
                  Base layer ETH 
                  balance_after
</style__StyledCol>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "Base layer ETH ",
                    "balance_after",
                  ],
                  "span": 12,
                },
                "ref": null,
                "rendered": Array [
                  "Base layer ETH ",
                  "balance_after",
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <TransferDescriptionItem
                  main="0.192937 ETH"
                  subtitle="$79.49"
/>,
                "gutter": 0,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "main": "0.192937 ETH",
                  "subtitle": "$79.49",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Row
                    gutter={0}
>
                    <style__StyledCol
                                        span={12}
                    >
                                        nahmii ETH 
                                        balance_before
                    </style__StyledCol>
</Row>,
                  <Row
                    gutter={0}
>
                    <TransferDescriptionItem
                                        main="0.2 ETH"
                                        subtitle="$82.40"
                    />
</Row>,
                  <Row
                    gutter={0}
>
                    <style__StyledCol
                                        span={12}
                    >
                                        nahmii ETH 
                                        balance_after
                    </style__StyledCol>
</Row>,
                  <Row
                    gutter={0}
>
                    <TransferDescriptionItem
                                        main="0.2 ETH"
                                        subtitle="$82.40"
                    />
</Row>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <style__StyledCol
                      span={12}
>
                      nahmii ETH 
                      balance_before
</style__StyledCol>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "nahmii ETH ",
                        "balance_before",
                      ],
                      "span": 12,
                    },
                    "ref": null,
                    "rendered": Array [
                      "nahmii ETH ",
                      "balance_before",
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TransferDescriptionItem
                      main="0.2 ETH"
                      subtitle="$82.40"
/>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "main": "0.2 ETH",
                      "subtitle": "$82.40",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <style__StyledCol
                      span={12}
>
                      nahmii ETH 
                      balance_after
</style__StyledCol>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "nahmii ETH ",
                        "balance_after",
                      ],
                      "span": 12,
                    },
                    "ref": null,
                    "rendered": Array [
                      "nahmii ETH ",
                      "balance_after",
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <TransferDescriptionItem
                      main="0.2 ETH"
                      subtitle="$82.40"
/>,
                    "gutter": 0,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "main": "0.2 ETH",
                      "subtitle": "$82.40",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <style__HWPromptWrapper>
                    <Connect(HWPromptContainer) />
</style__HWPromptWrapper>,
                  null,
                  <style__StyledButton
                    disabled={false}
                    onClick={[Function]}
                    type="primary"
>
                    <span>
                                        Deposit
                    </span>
</style__StyledButton>,
                ],
                "gutter": 0,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Connect(HWPromptContainer) />,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                null,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <span>
                      Deposit
</span>,
                    "disabled": false,
                    "onClick": [Function],
                    "type": "primary",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Deposit",
                    },
                    "ref": null,
                    "rendered": "Deposit",
                    "type": "span",
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<NahmiiDeposit /> should render correctly when prices are errored 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NahmiiDeposit
    currentNetwork={
        Object {
            "identityServiceAppId": "appid",
            "identityServiceSecret": "secret",
            "nahmiiProvider": NahmiiProvider {
              "_emitted": Object {
                "block": -1,
              },
              "_events": Object {},
              "chainId": 3,
              "ensAddress": "0x112234455C3a32FD11230C42E7Bccd4A84e02010",
              "name": "ropsten",
              "resetEventsBlock": [Function],
              "url": "http://geth-ropsten.dev.hubii.net",
            },
            "provider": FallbackProvider {
              "_emitted": Object {
                "block": -1,
              },
              "_events": Object {},
              "chainId": 3,
              "ensAddress": "0x112234455C3a32FD11230C42E7Bccd4A84e02010",
              "name": "ropsten",
              "resetEventsBlock": [Function],
            },
            "walletApiEndpoint": [Function],
          }
    }
    currentWalletWithInfo={
        Immutable.Map {
            deviceId: "041ca8e96420e95a106e8c9bb3c9fb9e8c00d4b11cac562888c898000b5cec366c03a0f84574716fac6c7a7df47a925f0e30f5286546adf3179b5a08dc9d8e09da",
            address: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
            type: "lns",
            name: "lns",
            derivationPath: "m/44'/60'/0'/0",
            transactions: Immutable.Map {
                loading: false,
                error: null,
                transactions: Immutable.List [
                    Immutable.Map {
                        decimalAmount: "0.0000000001",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780091,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "ETH",
                        sender: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        amount: "100000000",
                        symbol: "ETH",
                        recipient: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        type: "received",
                        fiatValue: "0.0000000412",
                        confirmations: "3",
                    },
                    Immutable.Map {
                        decimalAmount: "0.000000000000000005",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780091,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        sender: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        amount: "5",
                        symbol: "BOKKY",
                        recipient: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        type: "sent",
                        fiatValue: "0.000000000000000005",
                        confirmations: "3",
                    },
                ],
            },
            balances: Immutable.Map {
                baseLayer: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.198937",
                            currency: "ETH",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.198937",
                                btc: "0.00198937",
                                usd: "81.962044",
                            },
                        },
                        Immutable.Map {
                            balance: "1.231288e-12",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "1.231288e-13",
                                btc: "1.231288e-15",
                                usd: "1.231288e-12",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1989370000001231288",
                        btc: "0.001989370000001231288",
                        usd: "81.962044000001231288",
                    },
                },
                nahmiiAvailable: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "ETH",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.113",
                        btc: "0.00113",
                        usd: "41.33",
                    },
                },
                nahmiiStaging: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "ETH",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1",
                        btc: "0.001",
                        usd: "41.2",
                    },
                },
                nahmiiStaged: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                    ],
                    total: Immutable.Map {
                        eth: "0",
                        btc: "0",
                        usd: "0",
                    },
                },
                nahmiiCombined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "ETH",
                            balance: "0.2",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.2",
                                btc: "0.002",
                                usd: "82.4",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.213",
                        btc: "0.00213",
                        usd: "82.53",
                    },
                },
                combined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.398937",
                            currency: "ETH",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.398937",
                                btc: "0.00398937",
                                usd: "164.362044",
                            },
                        },
                        Immutable.Map {
                            balance: "0.130000000001231288",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.0130000000001231288",
                                btc: "0.000130000000001231288",
                                usd: "0.130000000001231288",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.4119370000001231288",
                        btc: "0.004119370000001231288",
                        usd: "164.492044000001231288",
                    },
                },
            },
        }
    }
    depositStatus={
        Immutable.Map {
            depositingEth: false,
            approvingTokenDeposit: false,
            completingTokenDeposit: false,
            error: null,
        }
    }
    intl={
        Object {
            "formatMessage": [Function],
          }
    }
    nahmiiDeposit={[Function]}
    prices={
        Immutable.Map {
            loading: false,
            error: true,
            assets: Immutable.List [
            ],
        }
    }
    supportedAssets={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    symbol: "My20",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    symbol: "HBT",
                    decimals: 15,
                    color: "0063A5",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    symbol: "SBT",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    symbol: "WETH",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    symbol: "BOKKY",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "ETH",
                    symbol: "ETH",
                    decimals: 18,
                    color: "5C78E4",
                },
            ],
        }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": "There's a problem with hubii core's connection. Please try again later",
    },
    "ref": null,
    "rendered": "There's a problem with hubii core's connection. Please try again later",
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": "There's a problem with hubii core's connection. Please try again later",
      },
      "ref": null,
      "rendered": "There's a problem with hubii core's connection. Please try again later",
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<NahmiiDeposit /> should render correctly when prices are loading 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NahmiiDeposit
    currentNetwork={
        Object {
            "identityServiceAppId": "appid",
            "identityServiceSecret": "secret",
            "nahmiiProvider": NahmiiProvider {
              "_emitted": Object {
                "block": -1,
              },
              "_events": Object {},
              "chainId": 3,
              "ensAddress": "0x112234455C3a32FD11230C42E7Bccd4A84e02010",
              "name": "ropsten",
              "resetEventsBlock": [Function],
              "url": "http://geth-ropsten.dev.hubii.net",
            },
            "provider": FallbackProvider {
              "_emitted": Object {
                "block": -1,
              },
              "_events": Object {},
              "chainId": 3,
              "ensAddress": "0x112234455C3a32FD11230C42E7Bccd4A84e02010",
              "name": "ropsten",
              "resetEventsBlock": [Function],
            },
            "walletApiEndpoint": [Function],
          }
    }
    currentWalletWithInfo={
        Immutable.Map {
            deviceId: "041ca8e96420e95a106e8c9bb3c9fb9e8c00d4b11cac562888c898000b5cec366c03a0f84574716fac6c7a7df47a925f0e30f5286546adf3179b5a08dc9d8e09da",
            address: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
            type: "lns",
            name: "lns",
            derivationPath: "m/44'/60'/0'/0",
            transactions: Immutable.Map {
                loading: false,
                error: null,
                transactions: Immutable.List [
                    Immutable.Map {
                        decimalAmount: "0.0000000001",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780091,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "ETH",
                        sender: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        amount: "100000000",
                        symbol: "ETH",
                        recipient: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        type: "received",
                        fiatValue: "0.0000000412",
                        confirmations: "3",
                    },
                    Immutable.Map {
                        decimalAmount: "0.000000000000000005",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780091,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        sender: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        amount: "5",
                        symbol: "BOKKY",
                        recipient: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        type: "sent",
                        fiatValue: "0.000000000000000005",
                        confirmations: "3",
                    },
                ],
            },
            balances: Immutable.Map {
                baseLayer: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.198937",
                            currency: "ETH",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.198937",
                                btc: "0.00198937",
                                usd: "81.962044",
                            },
                        },
                        Immutable.Map {
                            balance: "1.231288e-12",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "1.231288e-13",
                                btc: "1.231288e-15",
                                usd: "1.231288e-12",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1989370000001231288",
                        btc: "0.001989370000001231288",
                        usd: "81.962044000001231288",
                    },
                },
                nahmiiAvailable: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "ETH",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.113",
                        btc: "0.00113",
                        usd: "41.33",
                    },
                },
                nahmiiStaging: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "ETH",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1",
                        btc: "0.001",
                        usd: "41.2",
                    },
                },
                nahmiiStaged: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                    ],
                    total: Immutable.Map {
                        eth: "0",
                        btc: "0",
                        usd: "0",
                    },
                },
                nahmiiCombined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "ETH",
                            balance: "0.2",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.2",
                                btc: "0.002",
                                usd: "82.4",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.213",
                        btc: "0.00213",
                        usd: "82.53",
                    },
                },
                combined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.398937",
                            currency: "ETH",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.398937",
                                btc: "0.00398937",
                                usd: "164.362044",
                            },
                        },
                        Immutable.Map {
                            balance: "0.130000000001231288",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.0130000000001231288",
                                btc: "0.000130000000001231288",
                                usd: "0.130000000001231288",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.4119370000001231288",
                        btc: "0.004119370000001231288",
                        usd: "164.492044000001231288",
                    },
                },
            },
        }
    }
    depositStatus={
        Immutable.Map {
            depositingEth: false,
            approvingTokenDeposit: false,
            completingTokenDeposit: false,
            error: null,
        }
    }
    intl={
        Object {
            "formatMessage": [Function],
          }
    }
    nahmiiDeposit={[Function]}
    prices={
        Immutable.Map {
            loading: true,
            error: null,
            assets: Immutable.List [
            ],
        }
    }
    supportedAssets={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    symbol: "My20",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    symbol: "HBT",
                    decimals: 15,
                    color: "0063A5",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    symbol: "SBT",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    symbol: "WETH",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    symbol: "BOKKY",
                    decimals: 18,
                    color: "FFAA00",
                },
                Immutable.Map {
                    currency: "ETH",
                    symbol: "ETH",
                    decimals: 18,
                    color: "5C78E4",
                },
            ],
        }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <style__StyledSpin
        size="large"
        tip="synchronising"
/>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "size": "large",
        "tip": "synchronising",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <style__StyledSpin
          size="large"
          tip="synchronising"
/>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "size": "large",
          "tip": "synchronising",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<NahmiiDeposit /> should render correctly when supportedAssets are errored 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NahmiiDeposit
    currentNetwork={
        Object {
            "identityServiceAppId": "appid",
            "identityServiceSecret": "secret",
            "nahmiiProvider": NahmiiProvider {
              "_emitted": Object {
                "block": -1,
              },
              "_events": Object {},
              "chainId": 3,
              "ensAddress": "0x112234455C3a32FD11230C42E7Bccd4A84e02010",
              "name": "ropsten",
              "resetEventsBlock": [Function],
              "url": "http://geth-ropsten.dev.hubii.net",
            },
            "provider": FallbackProvider {
              "_emitted": Object {
                "block": -1,
              },
              "_events": Object {},
              "chainId": 3,
              "ensAddress": "0x112234455C3a32FD11230C42E7Bccd4A84e02010",
              "name": "ropsten",
              "resetEventsBlock": [Function],
            },
            "walletApiEndpoint": [Function],
          }
    }
    currentWalletWithInfo={
        Immutable.Map {
            deviceId: "041ca8e96420e95a106e8c9bb3c9fb9e8c00d4b11cac562888c898000b5cec366c03a0f84574716fac6c7a7df47a925f0e30f5286546adf3179b5a08dc9d8e09da",
            address: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
            type: "lns",
            name: "lns",
            derivationPath: "m/44'/60'/0'/0",
            transactions: Immutable.Map {
                loading: false,
                error: null,
                transactions: Immutable.List [
                    Immutable.Map {
                        decimalAmount: "0.0000000001",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780091,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "ETH",
                        sender: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        amount: "100000000",
                        symbol: "ETH",
                        recipient: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        type: "received",
                        fiatValue: "0.0000000412",
                        confirmations: "3",
                    },
                    Immutable.Map {
                        decimalAmount: "0.000000000000000005",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780091,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        sender: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        amount: "5",
                        symbol: "BOKKY",
                        recipient: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        type: "sent",
                        fiatValue: "0.000000000000000005",
                        confirmations: "3",
                    },
                ],
            },
            balances: Immutable.Map {
                baseLayer: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.198937",
                            currency: "ETH",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.198937",
                                btc: "0.00198937",
                                usd: "81.962044",
                            },
                        },
                        Immutable.Map {
                            balance: "1.231288e-12",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "1.231288e-13",
                                btc: "1.231288e-15",
                                usd: "1.231288e-12",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1989370000001231288",
                        btc: "0.001989370000001231288",
                        usd: "81.962044000001231288",
                    },
                },
                nahmiiAvailable: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "ETH",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.113",
                        btc: "0.00113",
                        usd: "41.33",
                    },
                },
                nahmiiStaging: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "ETH",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1",
                        btc: "0.001",
                        usd: "41.2",
                    },
                },
                nahmiiStaged: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                    ],
                    total: Immutable.Map {
                        eth: "0",
                        btc: "0",
                        usd: "0",
                    },
                },
                nahmiiCombined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "ETH",
                            balance: "0.2",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.2",
                                btc: "0.002",
                                usd: "82.4",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.213",
                        btc: "0.00213",
                        usd: "82.53",
                    },
                },
                combined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.398937",
                            currency: "ETH",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.398937",
                                btc: "0.00398937",
                                usd: "164.362044",
                            },
                        },
                        Immutable.Map {
                            balance: "0.130000000001231288",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.0130000000001231288",
                                btc: "0.000130000000001231288",
                                usd: "0.130000000001231288",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.4119370000001231288",
                        btc: "0.004119370000001231288",
                        usd: "164.492044000001231288",
                    },
                },
            },
        }
    }
    depositStatus={
        Immutable.Map {
            depositingEth: false,
            approvingTokenDeposit: false,
            completingTokenDeposit: false,
            error: null,
        }
    }
    intl={
        Object {
            "formatMessage": [Function],
          }
    }
    nahmiiDeposit={[Function]}
    prices={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    eth: 0.1,
                    btc: 0.001,
                    usd: 1,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "ETH",
                    eth: 1,
                    btc: 0.01,
                    usd: 412,
                },
            ],
        }
    }
    supportedAssets={
        Immutable.Map {
            loading: false,
            error: true,
            assets: Immutable.List [
            ],
        }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": "There's a problem with hubii core's connection. Please try again later",
    },
    "ref": null,
    "rendered": "There's a problem with hubii core's connection. Please try again later",
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": "There's a problem with hubii core's connection. Please try again later",
      },
      "ref": null,
      "rendered": "There's a problem with hubii core's connection. Please try again later",
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<NahmiiDeposit /> should render correctly when supportedAssets are loading 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NahmiiDeposit
    currentNetwork={
        Object {
            "identityServiceAppId": "appid",
            "identityServiceSecret": "secret",
            "nahmiiProvider": NahmiiProvider {
              "_emitted": Object {
                "block": -1,
              },
              "_events": Object {},
              "chainId": 3,
              "ensAddress": "0x112234455C3a32FD11230C42E7Bccd4A84e02010",
              "name": "ropsten",
              "resetEventsBlock": [Function],
              "url": "http://geth-ropsten.dev.hubii.net",
            },
            "provider": FallbackProvider {
              "_emitted": Object {
                "block": -1,
              },
              "_events": Object {},
              "chainId": 3,
              "ensAddress": "0x112234455C3a32FD11230C42E7Bccd4A84e02010",
              "name": "ropsten",
              "resetEventsBlock": [Function],
            },
            "walletApiEndpoint": [Function],
          }
    }
    currentWalletWithInfo={
        Immutable.Map {
            deviceId: "041ca8e96420e95a106e8c9bb3c9fb9e8c00d4b11cac562888c898000b5cec366c03a0f84574716fac6c7a7df47a925f0e30f5286546adf3179b5a08dc9d8e09da",
            address: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
            type: "lns",
            name: "lns",
            derivationPath: "m/44'/60'/0'/0",
            transactions: Immutable.Map {
                loading: false,
                error: null,
                transactions: Immutable.List [
                    Immutable.Map {
                        decimalAmount: "0.0000000001",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780091,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "ETH",
                        sender: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        amount: "100000000",
                        symbol: "ETH",
                        recipient: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        type: "received",
                        fiatValue: "0.0000000412",
                        confirmations: "3",
                    },
                    Immutable.Map {
                        decimalAmount: "0.000000000000000005",
                        counterpartyAddress: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        block: Immutable.Map {
                            number: 3780091,
                            timestamp: "2018-08-06T02:32:00.000Z",
                        },
                        hash: "0x84db5d53f1b5e82bdae027408989cf5451191d76b8b021710cfa0d95bbd5d34c",
                        currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                        sender: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
                        amount: "5",
                        symbol: "BOKKY",
                        recipient: "0x910c4ba923b2243dc13e00a066eefb8ffd905eb0",
                        type: "sent",
                        fiatValue: "0.000000000000000005",
                        confirmations: "3",
                    },
                ],
            },
            balances: Immutable.Map {
                baseLayer: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.198937",
                            currency: "ETH",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.198937",
                                btc: "0.00198937",
                                usd: "81.962044",
                            },
                        },
                        Immutable.Map {
                            balance: "1.231288e-12",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "1.231288e-13",
                                btc: "1.231288e-15",
                                usd: "1.231288e-12",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1989370000001231288",
                        btc: "0.001989370000001231288",
                        usd: "81.962044000001231288",
                    },
                },
                nahmiiAvailable: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "ETH",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.113",
                        btc: "0.00113",
                        usd: "41.33",
                    },
                },
                nahmiiStaging: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "ETH",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1",
                        btc: "0.001",
                        usd: "41.2",
                    },
                },
                nahmiiStaged: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                    ],
                    total: Immutable.Map {
                        eth: "0",
                        btc: "0",
                        usd: "0",
                    },
                },
                nahmiiCombined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "ETH",
                            balance: "0.2",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.2",
                                btc: "0.002",
                                usd: "82.4",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.213",
                        btc: "0.00213",
                        usd: "82.53",
                    },
                },
                combined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.398937",
                            currency: "ETH",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.398937",
                                btc: "0.00398937",
                                usd: "164.362044",
                            },
                        },
                        Immutable.Map {
                            balance: "0.130000000001231288",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.0130000000001231288",
                                btc: "0.000130000000001231288",
                                usd: "0.130000000001231288",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.4119370000001231288",
                        btc: "0.004119370000001231288",
                        usd: "164.492044000001231288",
                    },
                },
            },
        }
    }
    depositStatus={
        Immutable.Map {
            depositingEth: false,
            approvingTokenDeposit: false,
            completingTokenDeposit: false,
            error: null,
        }
    }
    intl={
        Object {
            "formatMessage": [Function],
          }
    }
    nahmiiDeposit={[Function]}
    prices={
        Immutable.Map {
            loading: false,
            error: null,
            assets: Immutable.List [
                Immutable.Map {
                    currency: "0x8899544F1fc4E0D570f3c998cC7e5857140dC322",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x8d1b4bc5664436d64cca2fd4c8b39ae71cb2662a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xcda3f98783d8ee980ee21f548bfe42965d13d64d",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0xc00fd9820cd2898cc4c054b7bf142de637ad129a",
                    eth: 0,
                    btc: 0,
                    usd: 0,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                    eth: 0.1,
                    btc: 0.001,
                    usd: 1,
                    timestamp: "2018-07-25T01:33:34.908Z",
                },
                Immutable.Map {
                    currency: "ETH",
                    eth: 1,
                    btc: 0.01,
                    usd: 412,
                },
            ],
        }
    }
    supportedAssets={
        Immutable.Map {
            loading: true,
            error: null,
            assets: Immutable.List [
            ],
        }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <style__StyledSpin
        size="large"
        tip="synchronising"
/>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "size": "large",
        "tip": "synchronising",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <style__StyledSpin
          size="large"
          tip="synchronising"
/>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "size": "large",
          "tip": "synchronising",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
