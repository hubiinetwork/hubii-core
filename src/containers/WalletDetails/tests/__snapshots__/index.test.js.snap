// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WalletDetails should render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <WalletDetails
    currentWalletDetails={
        Immutable.Map {
            deviceId: "041ca8e96420e95a106e8c9bb3c9fb9e8c00d4b11cac562888c898000b5cec366c03a0f84574716fac6c7a7df47a925f0e30f5286546adf3179b5a08dc9d8e09da",
            address: "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
            type: "lns",
            name: "lns",
            derivationPath: "m/44'/60'/0'/0",
            balances: Immutable.Map {
                baseLayer: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.198937",
                            currency: "0x0000000000000000000000000000000000000000",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.198937",
                                btc: "0.00198937",
                                usd: "81.962044",
                            },
                        },
                        Immutable.Map {
                            balance: "1.231288e-12",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "1.231288e-13",
                                btc: "1.231288e-15",
                                usd: "1.231288e-12",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1989370000001231288",
                        btc: "0.001989370000001231288",
                        usd: "81.962044000001231288",
                    },
                },
                nahmiiAvailable: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.113",
                        btc: "0.00113",
                        usd: "41.33",
                    },
                },
                nahmiiStaging: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.1",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.1",
                                btc: "0.001",
                                usd: "41.2",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.1",
                        btc: "0.001",
                        usd: "41.2",
                    },
                },
                nahmiiStaged: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                    ],
                    total: Immutable.Map {
                        eth: "0",
                        btc: "0",
                        usd: "0",
                    },
                },
                nahmiiCombined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.2",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.2",
                                btc: "0.002",
                                usd: "82.4",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.213",
                        btc: "0.00213",
                        usd: "82.53",
                    },
                },
                nahmiiActive: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            currency: "0x0000000000000000000000000000000000000000",
                            balance: "0.2",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.2",
                                btc: "0.002",
                                usd: "82.4",
                            },
                        },
                        Immutable.Map {
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            balance: "0.13",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.013",
                                btc: "0.00013",
                                usd: "0.13",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.213",
                        btc: "0.00213",
                        usd: "82.53",
                    },
                },
                combined: Immutable.Map {
                    loading: false,
                    error: null,
                    assets: Immutable.List [
                        Immutable.Map {
                            balance: "0.398937",
                            currency: "0x0000000000000000000000000000000000000000",
                            symbol: "ETH",
                            value: Immutable.Map {
                                eth: "0.398937",
                                btc: "0.00398937",
                                usd: "164.362044",
                            },
                        },
                        Immutable.Map {
                            balance: "0.130000000001231288",
                            currency: "0x583cbbb8a8443b38abcc0c956bece47340ea1367",
                            symbol: "BOKKY",
                            value: Immutable.Map {
                                eth: "0.0130000000001231288",
                                btc: "0.000130000000001231288",
                                usd: "0.130000000001231288",
                            },
                        },
                    ],
                    total: Immutable.Map {
                        eth: "0.4119370000001231288",
                        btc: "0.004119370000001231288",
                        usd: "164.492044000001231288",
                    },
                },
            },
        }
    }
    history={
        Object {
            "location": Object {
              "pathname": "/wallet/abcd",
            },
          }
    }
    intl={
        Object {
            "formatMessage": [Function],
            "formatNumber": [Function],
          }
    }
    ledgerInfo={
        Immutable.Map {
            status: "connected",
            connected: true,
            addresses: Immutable.Map {
            },
            id: "ajlsdfkjas",
            confTxOnDevice: false,
        }
    }
    loadBlockHeight={[Function]}
    match={
        Object {
            "params": Object {
              "address": "abcd",
            },
          }
    }
    setCurrentWallet={[Function]}
    trezorInfo={
        Immutable.Map {
            status: "connected",
            connected: true,
            addresses: Immutable.Map {
            },
            id: "ajlsdfkjas",
            confTxOnDevice: false,
        }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <style__HeaderWrapper>
          <WalletHeader
                    address="0x1c7429f62595097315289ceBaC1fDbdA587Ad512"
                    balance={164.49204400000124}
                    connected={false}
                    iconType="home"
                    isDecrypted={false}
                    name="lns"
                    onIconClick={[Function]}
                    type="hardware"
          />
</style__HeaderWrapper>,
        <Tabs
          activeKey="/wallet/abcd"
          animated={false}
          onChange={[Function]}
>
          <TabPane
                    placeholder={null}
                    tab={
                              <span>
                                        <Icon
                                                  type="wallet"
                                        />
                                        details
                              </span>
                    }
          />
          <TabPane
                    placeholder={null}
                    tab={
                              <span>
                                        <svg
                                                  height="26"
                                                  viewBox="0 0 18 16"
                                                  width="18"
                                                  xmlns="http://www.w3.org/2000/svg"
                                        >
                                                  <g
                                                            fill="none"
                                                            fillRule="evenodd"
                                                            transform="translate(-5 -4)"
                                                  >
                                                            <polygon
                                                                      points="0 0 24 0 24 24 0 24"
                                                            />
                                                            <polygon
                                                                      fill="rgba(255,255,255,0.5)"
                                                                      points="5.009 19.714 23 12 5.009 4.286 5 10.286 17.857 12 5 13.714"
                                                            />
                                                  </g>
                                        </svg>
                                        transfer
                              </span>
                    }
          />
          <TabPane
                    placeholder={null}
                    tab={
                              <span>
                                        <Icon
                                                  type="login"
                                        />
                                        <Unknown />
                                         
                                        deposit
                              </span>
                    }
          />
          <TabPane
                    placeholder={null}
                    tab={
                              <span>
                                        <Icon
                                                  type="logout"
                                        />
                                        <Unknown />
                                         
                                        withdraw
                              </span>
                    }
          />
          <TabPane
                    placeholder={null}
                    tab={
                              <span>
                                        <Icon
                                                  type="area-chart"
                                        />
                                        <Unknown />
                                         
                                        claim_fees
                              </span>
                    }
          />
          <TabPane
                    placeholder={null}
                    tab={
                              <span>
                                        <Icon
                                                  type="shopping-cart"
                                        />
                                        buy_eth
                              </span>
                    }
          />
</Tabs>,
        <Route
          component={[Function]}
          path="undefined/overview"
/>,
        <Route
          component={[Function]}
          path="undefined/transfer"
/>,
        <Route
          component={[Function]}
          path="undefined/buyeth"
/>,
        <Route
          component={[Function]}
          path="undefined/nahmii-deposit"
/>,
        <Route
          component={[Function]}
          path="undefined/withdraw"
/>,
        <Route
          component={[Function]}
          path="undefined/claim-fees"
/>,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <WalletHeader
            address="0x1c7429f62595097315289ceBaC1fDbdA587Ad512"
            balance={164.49204400000124}
            connected={false}
            iconType="home"
            isDecrypted={false}
            name="lns"
            onIconClick={[Function]}
            type="hardware"
/>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "address": "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
            "balance": 164.49204400000124,
            "connected": false,
            "iconType": "home",
            "isDecrypted": false,
            "name": "lns",
            "onIconClick": [Function],
            "type": "hardware",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "activeKey": "/wallet/abcd",
          "animated": false,
          "children": Array [
            <TabPane
              placeholder={null}
              tab={
                            <span>
                                          <Icon
                                                        type="wallet"
                                          />
                                          details
                            </span>
              }
/>,
            <TabPane
              placeholder={null}
              tab={
                            <span>
                                          <svg
                                                        height="26"
                                                        viewBox="0 0 18 16"
                                                        width="18"
                                                        xmlns="http://www.w3.org/2000/svg"
                                          >
                                                        <g
                                                                      fill="none"
                                                                      fillRule="evenodd"
                                                                      transform="translate(-5 -4)"
                                                        >
                                                                      <polygon
                                                                                    points="0 0 24 0 24 24 0 24"
                                                                      />
                                                                      <polygon
                                                                                    fill="rgba(255,255,255,0.5)"
                                                                                    points="5.009 19.714 23 12 5.009 4.286 5 10.286 17.857 12 5 13.714"
                                                                      />
                                                        </g>
                                          </svg>
                                          transfer
                            </span>
              }
/>,
            <TabPane
              placeholder={null}
              tab={
                            <span>
                                          <Icon
                                                        type="login"
                                          />
                                          <Unknown />
                                           
                                          deposit
                            </span>
              }
/>,
            <TabPane
              placeholder={null}
              tab={
                            <span>
                                          <Icon
                                                        type="logout"
                                          />
                                          <Unknown />
                                           
                                          withdraw
                            </span>
              }
/>,
            <TabPane
              placeholder={null}
              tab={
                            <span>
                                          <Icon
                                                        type="area-chart"
                                          />
                                          <Unknown />
                                           
                                          claim_fees
                            </span>
              }
/>,
            <TabPane
              placeholder={null}
              tab={
                            <span>
                                          <Icon
                                                        type="shopping-cart"
                                          />
                                          buy_eth
                            </span>
              }
/>,
          ],
          "onChange": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "undefined/overview",
            "nodeType": "class",
            "props": Object {
              "placeholder": null,
              "tab": <span>
                <Icon
                                type="wallet"
                />
                details
</span>,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "undefined/transfer",
            "nodeType": "class",
            "props": Object {
              "placeholder": null,
              "tab": <span>
                <svg
                                height="26"
                                viewBox="0 0 18 16"
                                width="18"
                                xmlns="http://www.w3.org/2000/svg"
                >
                                <g
                                                fill="none"
                                                fillRule="evenodd"
                                                transform="translate(-5 -4)"
                                >
                                                <polygon
                                                                points="0 0 24 0 24 24 0 24"
                                                />
                                                <polygon
                                                                fill="rgba(255,255,255,0.5)"
                                                                points="5.009 19.714 23 12 5.009 4.286 5 10.286 17.857 12 5 13.714"
                                                />
                                </g>
                </svg>
                transfer
</span>,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "undefined/nahmii-deposit",
            "nodeType": "class",
            "props": Object {
              "placeholder": null,
              "tab": <span>
                <Icon
                                type="login"
                />
                <Unknown />
                 
                deposit
</span>,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "undefined/withdraw",
            "nodeType": "class",
            "props": Object {
              "placeholder": null,
              "tab": <span>
                <Icon
                                type="logout"
                />
                <Unknown />
                 
                withdraw
</span>,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "undefined/claim-fees",
            "nodeType": "class",
            "props": Object {
              "placeholder": null,
              "tab": <span>
                <Icon
                                type="area-chart"
                />
                <Unknown />
                 
                claim_fees
</span>,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "undefined/buyeth",
            "nodeType": "class",
            "props": Object {
              "placeholder": null,
              "tab": <span>
                <Icon
                                type="shopping-cart"
                />
                buy_eth
</span>,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "path": "undefined/overview",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "path": "undefined/transfer",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "path": "undefined/buyeth",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "path": "undefined/nahmii-deposit",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "path": "undefined/withdraw",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "path": "undefined/claim-fees",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <style__HeaderWrapper>
            <WalletHeader
                        address="0x1c7429f62595097315289ceBaC1fDbdA587Ad512"
                        balance={164.49204400000124}
                        connected={false}
                        iconType="home"
                        isDecrypted={false}
                        name="lns"
                        onIconClick={[Function]}
                        type="hardware"
            />
</style__HeaderWrapper>,
          <Tabs
            activeKey="/wallet/abcd"
            animated={false}
            onChange={[Function]}
>
            <TabPane
                        placeholder={null}
                        tab={
                                    <span>
                                                <Icon
                                                            type="wallet"
                                                />
                                                details
                                    </span>
                        }
            />
            <TabPane
                        placeholder={null}
                        tab={
                                    <span>
                                                <svg
                                                            height="26"
                                                            viewBox="0 0 18 16"
                                                            width="18"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                >
                                                            <g
                                                                        fill="none"
                                                                        fillRule="evenodd"
                                                                        transform="translate(-5 -4)"
                                                            >
                                                                        <polygon
                                                                                    points="0 0 24 0 24 24 0 24"
                                                                        />
                                                                        <polygon
                                                                                    fill="rgba(255,255,255,0.5)"
                                                                                    points="5.009 19.714 23 12 5.009 4.286 5 10.286 17.857 12 5 13.714"
                                                                        />
                                                            </g>
                                                </svg>
                                                transfer
                                    </span>
                        }
            />
            <TabPane
                        placeholder={null}
                        tab={
                                    <span>
                                                <Icon
                                                            type="login"
                                                />
                                                <Unknown />
                                                 
                                                deposit
                                    </span>
                        }
            />
            <TabPane
                        placeholder={null}
                        tab={
                                    <span>
                                                <Icon
                                                            type="logout"
                                                />
                                                <Unknown />
                                                 
                                                withdraw
                                    </span>
                        }
            />
            <TabPane
                        placeholder={null}
                        tab={
                                    <span>
                                                <Icon
                                                            type="area-chart"
                                                />
                                                <Unknown />
                                                 
                                                claim_fees
                                    </span>
                        }
            />
            <TabPane
                        placeholder={null}
                        tab={
                                    <span>
                                                <Icon
                                                            type="shopping-cart"
                                                />
                                                buy_eth
                                    </span>
                        }
            />
</Tabs>,
          <Route
            component={[Function]}
            path="undefined/overview"
/>,
          <Route
            component={[Function]}
            path="undefined/transfer"
/>,
          <Route
            component={[Function]}
            path="undefined/buyeth"
/>,
          <Route
            component={[Function]}
            path="undefined/nahmii-deposit"
/>,
          <Route
            component={[Function]}
            path="undefined/withdraw"
/>,
          <Route
            component={[Function]}
            path="undefined/claim-fees"
/>,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WalletHeader
              address="0x1c7429f62595097315289ceBaC1fDbdA587Ad512"
              balance={164.49204400000124}
              connected={false}
              iconType="home"
              isDecrypted={false}
              name="lns"
              onIconClick={[Function]}
              type="hardware"
/>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "address": "0x1c7429f62595097315289ceBaC1fDbdA587Ad512",
              "balance": 164.49204400000124,
              "connected": false,
              "iconType": "home",
              "isDecrypted": false,
              "name": "lns",
              "onIconClick": [Function],
              "type": "hardware",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activeKey": "/wallet/abcd",
            "animated": false,
            "children": Array [
              <TabPane
                placeholder={null}
                tab={
                                <span>
                                                <Icon
                                                                type="wallet"
                                                />
                                                details
                                </span>
                }
/>,
              <TabPane
                placeholder={null}
                tab={
                                <span>
                                                <svg
                                                                height="26"
                                                                viewBox="0 0 18 16"
                                                                width="18"
                                                                xmlns="http://www.w3.org/2000/svg"
                                                >
                                                                <g
                                                                                fill="none"
                                                                                fillRule="evenodd"
                                                                                transform="translate(-5 -4)"
                                                                >
                                                                                <polygon
                                                                                                points="0 0 24 0 24 24 0 24"
                                                                                />
                                                                                <polygon
                                                                                                fill="rgba(255,255,255,0.5)"
                                                                                                points="5.009 19.714 23 12 5.009 4.286 5 10.286 17.857 12 5 13.714"
                                                                                />
                                                                </g>
                                                </svg>
                                                transfer
                                </span>
                }
/>,
              <TabPane
                placeholder={null}
                tab={
                                <span>
                                                <Icon
                                                                type="login"
                                                />
                                                <Unknown />
                                                 
                                                deposit
                                </span>
                }
/>,
              <TabPane
                placeholder={null}
                tab={
                                <span>
                                                <Icon
                                                                type="logout"
                                                />
                                                <Unknown />
                                                 
                                                withdraw
                                </span>
                }
/>,
              <TabPane
                placeholder={null}
                tab={
                                <span>
                                                <Icon
                                                                type="area-chart"
                                                />
                                                <Unknown />
                                                 
                                                claim_fees
                                </span>
                }
/>,
              <TabPane
                placeholder={null}
                tab={
                                <span>
                                                <Icon
                                                                type="shopping-cart"
                                                />
                                                buy_eth
                                </span>
                }
/>,
            ],
            "onChange": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "undefined/overview",
              "nodeType": "class",
              "props": Object {
                "placeholder": null,
                "tab": <span>
                  <Icon
                                    type="wallet"
                  />
                  details
</span>,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "undefined/transfer",
              "nodeType": "class",
              "props": Object {
                "placeholder": null,
                "tab": <span>
                  <svg
                                    height="26"
                                    viewBox="0 0 18 16"
                                    width="18"
                                    xmlns="http://www.w3.org/2000/svg"
                  >
                                    <g
                                                      fill="none"
                                                      fillRule="evenodd"
                                                      transform="translate(-5 -4)"
                                    >
                                                      <polygon
                                                                        points="0 0 24 0 24 24 0 24"
                                                      />
                                                      <polygon
                                                                        fill="rgba(255,255,255,0.5)"
                                                                        points="5.009 19.714 23 12 5.009 4.286 5 10.286 17.857 12 5 13.714"
                                                      />
                                    </g>
                  </svg>
                  transfer
</span>,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "undefined/nahmii-deposit",
              "nodeType": "class",
              "props": Object {
                "placeholder": null,
                "tab": <span>
                  <Icon
                                    type="login"
                  />
                  <Unknown />
                   
                  deposit
</span>,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "undefined/withdraw",
              "nodeType": "class",
              "props": Object {
                "placeholder": null,
                "tab": <span>
                  <Icon
                                    type="logout"
                  />
                  <Unknown />
                   
                  withdraw
</span>,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "undefined/claim-fees",
              "nodeType": "class",
              "props": Object {
                "placeholder": null,
                "tab": <span>
                  <Icon
                                    type="area-chart"
                  />
                  <Unknown />
                   
                  claim_fees
</span>,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "undefined/buyeth",
              "nodeType": "class",
              "props": Object {
                "placeholder": null,
                "tab": <span>
                  <Icon
                                    type="shopping-cart"
                  />
                  buy_eth
</span>,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "undefined/overview",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "undefined/transfer",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "undefined/buyeth",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "undefined/nahmii-deposit",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "undefined/withdraw",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "undefined/claim-fees",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
